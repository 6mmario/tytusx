{"version":3,"sources":["./src/app/Backend/XPATH/Analizador/Instrucciones/Predicados.ts","./src/app/Backend/Optimizacion/grammar.js","./src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo.ts","./src/app/Backend/Optimizacion/Instrucciones/SaltoCondicional.ts","./src/app/Backend/XQUERY/Analizador/Abstracto/nodoAST.ts","./src/app/Backend/XPATH/Analizador/Expresiones/Identificador.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncionAnidado.ts","./src/app/Backend/XPATH/Analizador/Expresiones/Aritmetica.ts","./src/app/Backend/XML/Analizador/Simbolos/Arbol.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/SelectRoot.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/CondicionSimple.ts","./src/app/Backend/Optimizacion/Expresion/Logica.ts","webpack:///fs (ignored)?4d64","./src/app/Backend/Optimizacion/Expresion/Bit.ts","webpack:///path (ignored)?f9ef","./src/app/Backend/Optimizacion/Instrucciones/Estructura.ts","webpack:///path (ignored)?5887","./src/app/servicios/inicio.service.ts","./src/app/Backend/Optimizacion/Errores/NodoErrores.ts","./src/app/Backend/XML/Analizador/Abstracto/nodoAST.ts","./src/app/Backend/Optimizacion/Expresion/Sentencia.ts","fs (ignored)","path (ignored)","./src/app/Backend/XML/Analizador/XMLgraphDesc.js","webpack:///fs (ignored)?e3f9","./src/app/Backend/XPATH/Analizador/Excepciones/Errores.ts","./src/app/Backend/XPATH/Analizador/Expresiones/Nativo.ts","./src/app/Backend/XQUERY/Analizador/Funciones/Substring.ts","webpack:///path (ignored)?aa32","./src/app/Backend/Optimizacion/Instrucciones/Llamada.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosSimples.ts","webpack:///fs (ignored)?5a90","./src/app/Backend/XQUERY/Analizador/Funciones/String.ts","webpack:///path (ignored)?47bc","./src/app/componentes/side-bar/side-bar.component.html","./src/app/componentes/side-bar/side-bar.component.ts","webpack:///fs (ignored)?2b5c","./src/app/Backend/XQUERY/Analizador/Expresiones/Variable.ts","./src/app/Backend/Optimizacion/Expresion/Termino.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/ForToCompuesto.ts","./src/app/Backend/XML/Analizador/Abstracto/Instruccion.ts","./src/app/Backend/XPATH/Analizador/GramaticaXPathDesc.js","./src/environments/environment.ts","./src/app/Backend/Optimizacion/Instrucciones/SaltoIncondicional.ts","./src/app/paginas/tablasimbolos-xquery/tablasimbolos-xquery.module.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/Arreglos.ts","./src/app/componentes/contenido-inicio/contenido-inicio.component.ts","./src/app/componentes/contenido-inicio/contenido-inicio.component.html","./src/app/componentes/contenido-inicio/contenido-dialog-component.html","./src/app/Backend/XQUERY/Analizador/Expresiones/Nativo.ts","./src/app/paginas/xpath-asc-ast/xpath-asc-ast.component.ts","./src/app/paginas/xpath-asc-ast/xpath-asc-ast.component.html","./src/app/Backend/XPATH/Analizador/Expresiones/ParentesisExpresion.ts","./src/app/Backend/XPATH/Analizador/Excepciones/NodoErrores.ts","./src/app/Backend/XML/Analizador/GramaticaXML.js","./src/app/paginas/errores/errores.component.html","./src/app/paginas/errores/errores.component.ts","./src/app/Backend/Optimizacion/Instrucciones/Declaracion.ts","./src/app/Backend/XPATH/Analizador/Abstracto/nodoAST.ts","./src/app/Backend/Optimizacion/Expresion/Concatenar.ts","./src/app/Backend/XPATH/Analizador/Simbolos/Tipo.ts","./src/app/Backend/Optimizacion/Reportes/reporteOp.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/Declaracion.ts","./src/app/paginas/reporte-optimizacion/reporte-optimizacion.component.html","./src/app/paginas/reporte-optimizacion/reporte-optimizacion.component.ts","./src/app/Backend/Optimizacion/Instrucciones/Funcion.ts","./src/app/Backend/XQUERY/Analizador/Funciones/Number.ts","./src/app/Backend/XQUERY/Analizador/GrammXQuery.js","./src/app/Backend/XQUERY/Analizador/Excepciones/NodoErrores.ts","./src/app/paginas/gramatical-report/gramatical-report.component.ts","./src/app/paginas/gramatical-report/gramatical-report.component.html","./src/app/Backend/Optimizacion/Instrucciones/Exit.ts","./src/app/Backend/XPATH/Analizador/Abstracto/Instrucciones.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/Condicion.ts","./src/app/Backend/XML/Analizador/Reportes/reporteTabla.ts","./src/app/Backend/XQUERY/Analizador/Simbolos/tablaSimbolos.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/Llamada.ts","./src/app/Backend/XQUERY/Analizador/Expresiones/Relacional.ts","./src/app/Backend/XPATH/GramaticaXPath.js","./src/app/paginas/arbol-ast/arbol-ast.component.ts","./src/app/paginas/arbol-ast/arbol-ast.component.html","./src/app/Backend/XML/Analizador/Simbolos/Tipo.ts","./src/app/Backend/XQUERY/Analizador/Simbolos/Tipo.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Backend/XPATH/Analizador/Simbolos/Arbol.ts","./src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/ForSimple.ts","./src/app/paginas/inicio/inicio.component.ts","./src/app/paginas/inicio/inicio.component.html","./src/app/Backend/XQUERY/Analizador/Instrucciones/Asignacion.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/If.ts","./src/app/Backend/Optimizacion/Expresion/Relacional.ts","./src/app/Backend/XPATH/Analizador/Funciones/Especiales.ts","./src/app/Backend/XML/Analizador/Excepciones/Errores.ts","./src/app/Backend/Optimizacion/Instrucciones/Etiqueta.ts","./src/app/Backend/Optimizacion/Simbolo/Arbol.ts","./src/app/app.module.ts","./src/app/Backend/Optimizacion/Instrucciones/Print.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/todo.ts","./src/app/Backend/XML/Analizador/Excepciones/NodoErrores.ts","./src/app/Backend/Optimizacion/Instrucciones/Unset.ts","./src/app/Backend/Optimizacion/Instrucciones/AsignacionEstructura.ts","./src/app/Backend/XQUERY/Analizador/Funciones/Upper.ts","./src/app/paginas/tabla-simbolos/tabla-simbolos.component.html","./src/app/paginas/tabla-simbolos/tabla-simbolos.component.ts","./src/app/paginas/ast-desc/ast-desc.component.ts","./src/app/paginas/ast-desc/ast-desc.component.html","./src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncion.ts","./src/app/Backend/XQUERY/Analizador/Expresiones/Identificador.ts","./src/app/Backend/XQUERY/Analizador/Funciones/Lower.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosExpresion.ts","./src/app/Backend/XPATH/Analizador/Expresiones/Logica.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/BarrasNodo.ts","./src/app/Backend/Optimizacion/Expresion/Conversion.ts","./src/app/Backend/Optimizacion/Expresion/Aritmetica.ts","./src/app/Backend/XML/Analizador/XMLgraph.js","./src/app/Backend/XQUERY/Analizador/Simbolos/Arbol.ts","./src/app/Backend/XQUERY/Analizador/Expresiones/Logica.ts","./src/app/Backend/XPATH/Analizador/Expresiones/Relacional.ts","./src/app/componentes/tabsinicio/tabsinicio.component.ts","./src/app/componentes/tabsinicio/tabsinicio.component.html","./src/app/Backend/XML/Analizador/Simbolos/Simbolo.ts","./src/app/Backend/XML/Analizador/GramaticaXMLDescPRUEBA.js","./src/app/Backend/Optimizacion/Expresion/Unario.ts","./src/app/Backend/Optimizacion/Instrucciones/Asignacion.ts","./src/app/Backend/XQUERY/Analizador/Expresiones/Aritmetica.ts","./src/app/Backend/Optimizacion/Abstracto/Instruccion.ts","./src/app/Backend/XPATH/Analizador/Abstracto/Instruccion.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/IdentificadorPredicado.ts","./src/app/Backend/Optimizacion/Expresion/MultipleComa.ts","./src/app/Backend/XML/Analizador/Expresiones/Atributo.ts","./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosPredicado.ts","./src/app/app-routing.module.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/ForToSimple.ts","./src/app/Backend/XQUERY/Analizador/Simbolos/Simbolo.ts","./src/app/Backend/XPATH/Analizador/Funciones/Axes.ts","./src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/Funciones.ts","./src/app/Backend/XQUERY/Analizador/Instrucciones/Let.ts","./src/app/Backend/XML/Analizador/Expresiones/Objeto.ts","./src/app/Backend/Optimizacion/Simbolo/Tipo.ts","./src/app/paginas/tablasimbolos-xquery/tablasimbolos-xquery.component.html","./src/app/paginas/tablasimbolos-xquery/tablasimbolos-xquery.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/Backend/Optimizacion/Expresion/Identificador.ts"],"names":[],"mappings":"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,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE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AO,CAAC,GAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EA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AC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CA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AC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,IAAI,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;IACj9E,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,SAAS,KAAK,KAAM,CAAC;QAC1C,EAAE,EAAE,EAAE;QACN,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,UAAU,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,SAAS,EAAC,CAAC,EAAC,UAAU,EAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,WAAW,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,sBAAsB,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,oBAAoB,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,iBAAiB,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,iBAAiB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,QAAQ,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,gBAAgB,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,UAAU,EAAC,GAAG,EAAC,UAAU,EAAC,GAAG,EAAC,SAAS,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,aAAa,EAAC,GAAG,EAAC,aAAa,EAAC,GAAG,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,GAAG,EAAC,gBAAgB,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC;QACjjD,UAAU,EAAE,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,UAAU,EAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,eAAecAAcgBAAgB,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,UAAU,EAAC,GAAG,EAAC,UAAU,EAAC,GAAG,EAAC,SAAS,EAAC,GAAG,EAAC,YAAY,EAAC,GAAG,EAAC,aAAa,EAAC,GAAG,EAAC,aAAa,EAAC,GAAG,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,GAAG,EAAC,gBAAgjjC,aAAa,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY;YACzH,mBAAmB;YAEnB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvB,QAAQ,OAAO,EAAE;gBACjB,KAAK,CAAC;oBACN,OAAO,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBAChB,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,GAAG;oBAClC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBACvC,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,GAAG;oBAC7D,IAAI,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAChB,MAAM;gBACN,KAAK,CAAC;oBACN,IAAI,CAAC,CAAC,GAAC,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC9G,MAAM;gBACN,KAAK,CAAC;oBACN,IAAI,CAAC,CAAC,GAAC,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC1G,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBACzZ,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBACb,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,EAAE;oBACT,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBACzB,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBACvC,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC5F,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAC1F,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC;oBACf,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI;oBACX,MAAM;gBACN,KAAK,EAAE;oBACP,EAAE,CAAC,EAAE,CAAC;oBACN,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/G,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC7I,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBAC5E,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBACzB,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBAC1D,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBACxC,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBAC7G,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC;oBACzG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBACzG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;oBACrG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBAC/B,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC9F,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBACpC,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBACtB,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC7F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBACzF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBACjD,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACxF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACpF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,IAAI,CAAC;oBACzG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,YAAY,CAAC;oBACxH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,YAAY,CAAC;oBAC3H,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC5F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC;oBAC1F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC7E,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC7E,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBACpF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBACpF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC5E,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC5E,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC5E,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC5E,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC7E,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC7E,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACzF,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC3F,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC9F,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBACrG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBACjG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/G,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACjF,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/G,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC5E,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACnG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAG,IAAI,sBAAsB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACvG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,IAAI;oBACpB,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpH,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrH,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxH,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzH,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvH,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3H,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5H,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5H,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1H,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1H,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9H,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvG,MAAM;gBACN,KAAK,GAAG;oBACR,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxG,MAAM;gBACN,KAAK,GAAG,CAAC;gBAAC,KAAK,GAAG;oBAClB,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBAC/B,MAAM;akB,cAAc,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC;QAChD,UAAU,EAAE,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI;YACtC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB;iBAAM;gBACH,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,KAAK,CAAC;aACf;QACL,CAAC;QACD,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK;YACvB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YACxK,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;gBACnB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;oBAClD,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClC;aACJ;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;YACtC,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,WAAW,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,WAAW,EAAE;gBACpC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACrB;YACD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACnD,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,EAAE;gBACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;aAC5D;YACD,SAAS,QAAQ,CAAC,CAAC;gBACf,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,CAAC;YACD,YAAY,EACR,IAAI,GAAG,GAAG;gBACN,IAAI,KAAK,CAAC;gBACV,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;gBAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBACzC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACN,IAAI,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACxF,OAAO,IAAI,EAAE;gBACT,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC5B,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBACvC;qBAAM;oBACH,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;wBACjD,MAAM,GAAG,GAAG,EAAE,CAAC;qBAClB;oBACD,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACW,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACvE,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,QAAQ,GAAG,EAAE,CAAC;oBACd,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;wBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;4BAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;yBACnD;qBACJ;oBACD,IAAI,KAAK,CAAC,YAAY,EAAE;wBACpB,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC;qBACpL;yBAAM;wBACH,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;qBAC7J;oBACD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACpB,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM;wBACxC,IAAI,EAAE,KAAK,CAAC,QAAQ;wBACpB,GAAG,EAAE,KAAK;wBACV,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC;iBACN;gBACL,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,IAAI,KAAK,CAAC,mDAAmD,GAAG,KAAK,GAAG,WAAW,GAAG,MAAM,CAAC,CAAC;iBACvG;gBACD,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;oBACnB,KAAK,CAAC;wBACF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,GAAG,IAAI,CAAC;wBACd,IAAI,CAAC,cAAc,EAAE;4BACjB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;4BAC1B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;4BACrB,IAAI,UAAU,GAAG,CAAC,EAAE;gCAChB,UAAU,EAAE,CAAC;6BAChB;yBACJ;6BAAM;4BACH,MAAM,GAAG,cAAc,CAAC;4BACxB,cAAc,GAAG,IAAI,CAAC;yBACzB;wBACD,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;wBACtC,KAAK,CAAC,EAAE,GAAG;4BACP,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;4BACzD,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;4BAC9C,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC7D,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW;yBACrD,CAAC;wBACF,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG;gCACb,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;6BACrC,CAAC;yBACL;wBACD,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE;4BAChC,MAAM;4BACN,MAAM;4BACN,QAAQ;4BACR,WAAW,CAAC,EAAE;4BACd,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM;4BACN,MAAM;yBACT,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC1B,OAAO,CAAC,CAAC;yBACZ;wBACD,IAAI,GAAG,EAAE;4BACL,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;4BACrC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;yBACtC;wBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrB,MAAM;oBACV,KAAK,CAAC;wBACF,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,EAAC,CAAC;IAEC,MAAM,cAAc,GAAG,mBAAO,CAAC,yCAA6B,CAAC,CAAC;IAC9D,MAAM,iBAAiB,GAAG,mBAAO,CAAC,4CAAgC,CAAC,CAAC;IAEpE,MAAM,YAAY,GAAG,mBAAO,CAAC,uCAA2B,CAAC,CAAC;IAC1D,MAAM,kBAAkB,GAAG,mBAAO,CAAC,mEAAuD,CAAC;IAC3F,MAAM,sBAAsB,GAAG,mBAAO,CAAC,yEAA6D,CAAC;IACrG,MAAM,UAAU,GAAE,mBAAO,CAAC,sCAA0B,CAAC,CAAC;IACtD,MAAM,MAAM,GAAG,mBAAO,CAAE,kCAAsB,CAAC,CAAC;IAChD,MAAM,UAAU,GAAG,mBAAO,CAAC,sCAA0B,CAAC,CAAC;IACvD,MAAM,UAAU,GAAE,mBAAO,CAAC,wCAA4B,CAAC;IACvD,MAAM,aAAa,GAAE,mBAAO,CAAC,yCAA6B,CAAC,CAAC;IAC5D,MAAM,QAAQ,GAAE,mBAAO,CAAC,oCAAwB,CAAC,CAAC;IAClD,MAAM,MAAM,GAAE,mBAAO,CAAC,kCAAsB,CAAC,CAAC;IAC9C,MAAM,UAAU,GAAE,mBAAO,CAAC,wCAA4B,CAAC;IACvD,MAAM,SAAS,GAAE,mBAAO,CAAC,uCAA2B,CAAC;IACrD,MAAM,WAAW,GAAE,mBAAO,CAAC,yCAA6B,CAAC;IACzD,MAAM,OAAO,GAAE,mBAAO,CAAC,qCAAyB,CAAC;IACjD,MAAM,KAAK,GAAG,mBAAO,CAAC,gCAAoB,CAAC;IAC3C,MAAM,MAAM,GAAC,mBAAO,CAAC,iCAAqB,CAAC;IAC3C,MAAM,IAAI,GAAE,mBAAO,CAAC,6BAAiB,CAAC,CAAC;IACvC,MAAM,eAAe,GAAE,mBAAO,CAAC,6CAAiC,CAAC,CAAC;IAClE,MAAM,SAAS,GAAE,mBAAO,CAAC,uCAA2B,CAAC,CAAC;IACtD,MAAM,KAAK,GAAC,mBAAO,CAAC,+BAAmB,CAAC,CAAC;IACzC,MAAM,MAAM,GAAC,mBAAO,CAAC,gCAAoB,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAC,mBAAO,CAAC,gCAAoB,CAAC,CAAC;IAC3C,MAAM,KAAK,GAAC,mBAAO,CAAC,+BAAmB,CAAC,CAAC;IACzC,MAAM,IAAI,GAAC,mBAAO,CAAC,mCAAuB,CAAC,CAAC;IAC5C,MAAM,aAAa,GAAC,mBAAO,CAAC,uCAA2B,CAAC,CAAC;IACzD,MAAM,YAAY,GAAC,mBAAO,CAAC,8CAAkC,CAAC,CAAC;IACnE,kCAAkC;IAClC,IAAI,KAAK,GAAG,CAAC;QACb,IAAI,KAAK,GAAG,CAAC;YAEb,GAAG,EAAC,CAAC;YAEL,UAAU,EAAC,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI;gBAChC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;YACL,CAAC;YAEL,mCAAmC;YACnC,QAAQ,EAAC,UAAU,KAAK,EAAE,EAAE;gBACpB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC7C,IAAI,CAAC,cAAc,GAAG,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,CAAC;oBACf,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,CAAC;iBACjB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,+CAA+C;YAC/C,KAAK,EAAC;gBACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBACnB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBACxC,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC1B;gBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,OAAO,EAAE,CAAC;YACd,CAAC;YAEL,iDAAiD;YACjD,KAAK,EAAC,UAAU,EAAE;gBACV,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAC9D,qBAAqB;gBACrB,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;gBACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE/D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBACrC;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBAE1B,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAClC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;oBACtC,WAAW,EAAE,KAAK,CAAC,CAAC;wBAChB,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;8BAC9D,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG;iBACnC,CAAC;gBAEF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,6EAA6E;YAC7E,IAAI,EAAC;gBACG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,kJAAkJ;YAClJ,MAAM,EAAC;gBACC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,kIAAkI,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBAC9N,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBAEN;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,yCAAyC;YACzC,IAAI,EAAC,UAAU,CAAC;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;YAEL,0DAA0D;YAC1D,SAAS,EAAC;gBACF,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3E,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAC,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC/E,CAAC;YAEL,mDAAmD;YACnD,aAAa,EAAC;gBACN,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;oBAClB,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACpF,CAAC;YAEL,2FAA2F;YAC3F,YAAY,EAAC;gBACL,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5C,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;YACvD,CAAC;YAEL,8EAA8E;YAC9E,UAAU,EAAC,UAAS,KAAK,EAAE,YAAY;gBAC/B,IAAI,KAAK,EACL,KAAK,EACL,MAAM,CAAC;gBAEX,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,eAAe;oBACf,MAAM,GAAG;wBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE;4BACJ,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;4BAClC,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;4BACtC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;yBACvC;wBACD,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB,CAAC;oBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBACpD;iBACJ;gBAED,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBACjC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;oBACrC,WAAW,EAAE,KAAK,CAAC,CAAC;wBACP,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;iBACzD,CAAC;gBACF,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjE;gBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC;iBAChB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,kBAAkB;oBAClB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;wBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACvB;oBACD,OAAO,KAAK,CAAC,CAAC,+EAA+E;iBAChG;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;YAEL,6BAA6B;YAC7B,IAAI,EAAC;gBACG,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,IAAI,KAAK,EACL,KAAK,EACL,SAAS,EACT,KAAK,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,SAAS,IAAI,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;wBAChE,KAAK,GAAG,SAAS,CAAC;wBAClB,KAAK,GAAG,CAAC,CAAC;wBACV,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;4BAC9B,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;gCACjB,OAAO,KAAK,CAAC;6BAChB;iCAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gCACxB,KAAK,GAAG,KAAK,CAAC;gCACd,SAAS,CAAC,wDAAwD;6BACrE;iCAAM;gCACH,8FAA8F;gCAC9F,OAAO,KAAK,CAAC;6BAChB;yBACJ;6BAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;4BAC3B,MAAM;yBACT;qBACJ;iBACJ;gBACD,IAAI,KAAK,EAAE;oBACP,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;wBACjB,OAAO,KAAK,CAAC;qBAChB;oBACD,8FAA8F;oBAC9F,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;oBACpB,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,wBAAwB,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBACpH,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBACN;YACL,CAAC;YAEL,qCAAqC;YACrC,GAAG,EAAC,SAAS,GAAG;gBACR,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE;oBACH,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;iBACrB;YACL,CAAC;YAEL,wGAAwG;YACxG,KAAK,EAAC,SAAS,KAAK,CAAE,SAAS;gBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,CAAC;YAEL,0EAA0E;YAC1E,QAAQ,EAAC,SAAS,QAAQ;gBAClB,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;iBACpC;qBAAM;oBACH,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;YACL,CAAC;YAEL,4FAA4F;YAC5F,aAAa,EAAC,SAAS,aAAa;gBAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBACnF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBACrF;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;iBAC3C;YACL,CAAC;YAEL,oJAAoJ;YACpJ,QAAQ,EAAC,SAAS,QAAQ,CAAE,CAAC;gBACrB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,EAAE;oBACR,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACH,OAAO,SAAS,CAAC;iBACpB;YACL,CAAC;YAEL,6BAA6B;YAC7B,SAAS,EAAC,SAAS,SAAS,CAAE,SAAS;gBAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1B,CAAC;YAEL,qDAAqD;YACrD,cAAc,EAAC,SAAS,cAAc;gBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACtC,CAAC;YACL,OAAO,EAAE,EAAC,gBAAgB,EAAC,IAAI,EAAC;YAChC,aAAa,EAAE,SAAS,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,yBAAyB,EAAC,QAAQ;gBAC3E,IAAI,OAAO,GAAC,QAAQ,CAAC;gBACrB,QAAO,yBAAyB,EAAE;oBAClC,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,MAAM,CAAC;wBACtB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC,CAAC;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC,CAAC;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,OAAO,CAAC;wBACvB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,OAAO,CAAC;wBACvB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC,CAAC;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,gBAAgB,CAAC;wBAChC,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,UAAU,CAAC;wBAC1B,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,GAAG,CAAC;wBACnB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,UAAU,CAAC;wBAC1B,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjE,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,OAAO,CAAC;wBACtE,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;wBACpC,MAAM;iBACL;YACD,CAAC;YACD,KAAK,EAAE,CAAC,yBAAyB,EAAC,eAAe,EAAC,UAAU,EAAC,UAAU,EAAC,aAAa,EAAC,kCAAkC,EAAC,WAAW,EAAC,WAAW,EAAC,YAAY,EAAC,YAAY,EAAC,cAAc,EAAC,iBAAiB,EAAC,eAAe,EAAC,WAAW,EAAC,YAAY,EAAC,WAAW,EAAC,aAAa,EAAC,aAAa,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,YAAY,EAAC,WAAW,EAAC,YAAY,EAAC,YAAY,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,cAAc,EAAC,eAAe,EAAC,eAAe,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,eAAe,EAAC,cAAc,EAAC,aAAa,EAAC,gBAAgB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,kBAAkB,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,SAAS,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,eAAe,EAAC,eAAe,EAAC,wEAAwE,EAAC,0BAA0B,EAAC,QAAQ,EAAC,QAAQ,CAAC;YACvqb,CAAC,CAAC,EAAE,CAAC;IACL,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,SAAS,MAAM;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;IAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACjD,OAAO,IAAI,MAAM,CAAC;AAClB,CAAC,CAAC,EAAE,CAAC;AAGL,IAAI,IAAgE,EAAE;IACtE,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC;IAC7B,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;IACpC,OAAO,CAAC,KAAK,GAAG,cAAc,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,OAAO,CAAC,IAAI,GAAG,SAAS,YAAY,CAAE,IAAI;QACtC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,OAAO,CAAC,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;QACD,IAAI,MAAM,GAAG,mBAAO,CAAC,WAAI,CAAC,CAAC,YAAY,CAAC,mBAAO,CAAC,cAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpF,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,IAAI,KAA6B,IAAI,4CAAY,KAAK,MAAM,EAAE;QAC5D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;CACA;;;;;;;;;;;;;;ACj/BD;AAAA;AAAe,MAAM,WAAW;IAiB5B,YAAY,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,OAAe;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAjBM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAOM,WAAW;QAChB,OAAO,CACL,aAAa;YACb,IAAI,CAAC,SAAS;YACd,SAAS;YACT,IAAI,CAAC,IAAI;YACT,gBAAgB;YAChB,IAAI,CAAC,IAAI;YACT,kBAAkB;YAClB,IAAI,CAAC,OAAO;YACZ,IAAI,CACL,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;AC7BI,MAAM,yBAAyB;IAEpC,gBAAgB,CAAC;IAEjB,QAAQ;QACN,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEpD,IAAI,KAAK,GAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAG,KAAK,IAAG,IAAI,EAAC;YACd,KAAK,CAAC,SAAS,IAAE,IAAI,CAAC;SACvB;IACH,CAAC;;kGAXU,yBAAyB;yGAAzB,yBAAyB;QCPtC,gEAAI;QACJ,gEAAI;QAKJ,yEAAoE;;;;;;;;;;;;;;ACLpE;AAAA;AAAA;AAAA;AAAuD;AAEN;AAElC,MAAM,IAAK,SAAQ,kEAAW;IAEzC,YAAY,IAAY,EAAE,OAAe;QACrC,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,OAAO,OAAO;IAClB,CAAC;CACJ;;;;;;;;;;;;;ACLD;AAAA;AAAe,MAAM,aAAc,SAAQ,KAAoB;IAE3D,YAAY,YAA2B,EAAC,YAA0B,EAAE,IAAY,EAAE,OAAe;QAC7F,KAAK,EAAE,CAAC;QACR,IAAG,YAAY,IAAE,IAAI,EAAC;YAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3B;QACD,IAAG,YAAY,IAAE,IAAI,EAAC;YAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;SAC1B;IAEL,CAAC;CAGJ;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAuD;AAKL;AAEnC,MAAM,SAAU,SAAQ,kEAAW;IAM9C,YAAY,QAAgB,EAAE,KAAa,EAAE,OAAe,EAAE,GAAgB,EAAE,GAAiB;QAC7F,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,GAAG;YAAE,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACxB;IACL,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEvB,CAAC;IACM,UAAU;QACb,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACM,QAAQ,CAAC,KAAY,EAAE,KAAoB;QAC9C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;AC/BD;AAAA;AAAO,MAAM,YAAY;IASvB,YAAY,aAAqB,EAAE,IAAW,EAAE,OAAe,EAAE,SAAiB,EAAC,KAAY,EAAC,OAAc,EAAC,QAAe;QAC5H,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;IACzB,CAAC;IACM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,gBAAgB,CAAC,aAAoB;QAC1C,IAAI,CAAC,aAAa,GAAC,aAAa,CAAC;IACnC,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,YAAY,CAAC,SAAgB;QAClC,IAAI,CAAC,SAAS,GAAC,SAAS,CAAC;IAC3B,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,OAAO,CAAC,IAAW;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IACM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW,CAAC,QAAe;QAChC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;IACzB,CAAC;CAGF;;;;;;;;;;;;;AC1ED;AAAA;AAAA;AAAwC;AAEzB,MAAM,aAAa;IAKhC,YAAY,QAAwB;QAClC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAW,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,6CAAI,CAAC,8CAAQ,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IACM,WAAW;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,WAAW,CAAC,QAAuB;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,QAAQ,CAAC,KAAqB;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IACM,WAAW,CAAC,OAAgB;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAIM,WAAW,CAAC,EAAU;QAC3B,KAAK,IAAI,CAAC,GAAkB,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;YAChE,IAAI,UAAU,GAAU,IAAI,CAAC;YAC7B,KAAI,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAC;gBACxB,IAAG,CAAC,CAAC,gBAAgB,EAAE,IAAE,EAAE,EAAC;oBAC1B,UAAU,GAAC,CAAC,CAAC;oBACb,MAAM;iBACP;aACF;YACD,IAAI,UAAU,IAAI,IAAI,EAAE;gBACtB,OAAO,UAAU,CAAC;aACnB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACM,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;CACF;AACD,+BAA+B;;;;;;;;;;;;;ACvD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqF;AAC9B;AAEZ;AAED;AACY;AACJ;AACZ;AACE;AACU;AAC1B;AAGT,MAAM,OAAQ,SAAQ,kEAAW;IAI5C,YAAY,aAAqB,EAAE,UAAyB,EAAE,IAAY,EAAE,OAAe;QACvF,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,IAAI,eAAe,GAAuB,IAAI,KAAK,EAAe,CAAC;QACnE,IAAI,kBAAkB,GAAuB,IAAI,KAAK,EAAe,CAAC;QACtE,IAAI,gBAAgB,GAAG,EAAE;QACzB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG;QACP,IAAI,cAAc,CAAC;QACnB,IAAI,cAAc,GAAG,CAAC;QACtB,IAAI,eAAe,GAAG,CAAC;QACvB,IAAI,WAAW,GAAE,IAAI,+DAAa,EAAE,CAAC;QACrC;;;WAGG;QACH,IAAI,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,aAAa,IAAI,IAAI,EAAE;YACvB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;gBACzB,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAC9B,IAAI,GAAG,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;wBAC9C,2CAA2C;wBAC3C,kBAAkB,GAAG,aAAa,CAAC,QAAQ,EAAE;qBAChD;yBAAM;wBACH,8CAA8C;wBAC9C,eAAe,GAAG,GAAG,CAAC,QAAQ,EAAE;qBACnC;iBACJ;gBACD,IAAI,IAAI,CAAC,UAAU,YAAY,KAAK,EAAE;oBAClC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBAC9B,IAAI,OAAO,YAAY,KAAK,EAAE;4BAC1B,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gCAExB,IAAI,SAAS,YAAY,2DAAM,EAAE;oCAC7B,cAAc,EAAE;oCAChB,IAAI,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;oCAChE,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wCAC9B,eAAe,EAAE;wCACjB,IAAI,cAAc,IAAI,eAAe,EAAE;4CACnC,IAAI,OAAO,YAAY,oDAAW,EAAE;gDAChC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;gDACzD,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gDACzC,IAAI,OAAO,IAAI,IAAI,EAAE;oDACjB,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;oDAC9B,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;iDACnC;6CACJ;yCACJ;oCACL,CAAC,CAAC,CAAC;oCACH,eAAe,GAAG,CAAC;iCACtB;qCAAM,IAAI,SAAS,YAAY,mDAAU,EAAE;oCACxC,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;oCAC5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;wCACxC,CAAC,EAAE,CAAC;wCACJ,cAAc,GAAG,QAAQ;wCACzB,QAAQ,GAAG,UAAU;wCACrB,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;4CACrB,IAAI,KAAK,IAAI,IAAI,EAAE;gDACf,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC;gDAC7D,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gDACjI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;gDACtB,QAAQ,GAAG,cAAc;6CAC5B;yCACJ;qCAEJ;oCACD,IAAI,UAAU,YAAY,KAAK,EAAE;wCAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;wCACvB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;4CACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;wCACpC,CAAC,CAAC,CAAC;qCACN;iCACJ;4BACL,CAAC,CAAC,CAAC;yBACN;6BAAM;4BACH,mBAAmB;4BACnB,IAAI,OAAO,YAAY,2DAAM,EAAE;gCAC3B,cAAc,EAAE;gCAChB,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;gCAC9D,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oCAC/B,eAAe,EAAE;oCACjB,IAAI,cAAc,IAAI,eAAe,EAAE;wCACnC,IAAI,QAAQ,YAAY,oDAAW,EAAE;4CACjC,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;4CAC1D,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;4CACzC,IAAI,OAAO,IAAI,IAAI,EAAE;gDACjB,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;gDAC9B,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;6CACnC;yCACJ;qCACJ;gCACL,CAAC,CAAC,CAAC;gCACH,eAAe,GAAG,CAAC;6BACtB;iCAAM,IAAI,OAAO,YAAY,mDAAU,EAAE;gCACtC,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;gCAC5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;oCACxC,CAAC,EAAE,CAAC;oCACJ,cAAc,GAAG,QAAQ;oCACzB,QAAQ,GAAG,UAAU;oCACrB,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wCAC7B,IAAI,KAAK,IAAI,IAAI,EAAE;4CACf,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC;4CAC7D,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;4CACjI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;4CACtB,QAAQ,GAAG,cAAc;yCAC5B;qCACJ;iCAEJ;gCACD,IAAI,UAAU,YAAY,KAAK,EAAE;oCAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;oCACvB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wCACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;oCACpC,CAAC,CAAC,CAAC;iCACN;6BACJ;yBAEJ;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;iBAAM;aAEN;YAED;;;eAGG;YAEH,IAAG,kBAAkB,IAAE,IAAI,EAAC;gBACxB,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACjC,IAAG,OAAO,YAAY,4CAAG,EAAC;wBACtB,IAAI,SAAS,GAAE,OAAO,CAAC,WAAW,CAAC,KAAK,EAAC,WAAW,EAAE,QAAQ,CAAC;wBAC/D,IAAI,SAAS,YAAY,yDAAO,EAAE;4BAC9B,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;yBAC7C;6BAAM,IAAI,SAAS,YAAY,KAAK,EAAE;4BACnC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;yBACrC;6BAAM,IAAI,SAAS,YAAY,+DAAa,EAAE;4BAC7C,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;yBACnC;6BAAI;4BACH,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;yBACnC;qBACN;oBACD,IAAI,OAAO,YAAY,yDAAgB,EAAE;wBACrC,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;wBAC5D,sBAAsB;wBACtB,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAC/B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;wBAEzC,oBAAoB;qBAErB;gBACP,CAAC,CAAC,CAAC;aAEN;YACD,OAAO,aAAa,CAAC,QAAQ,EAAE;SAClC;IACL,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;ACzLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAE1B;AACZ;AAIO;AAChB;AAEnB,MAAM,UAAW,SAAQ,kEAAW;IAIjD,YACE,QAAsB,EACtB,IAAY,EACZ,OAAe,EACf,KAAkB,EAClB,KAAkB;QAElB,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,UAAU;QACf,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IACd,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC/E,IAAI,GAAG,EAAE,GAAG,CAAC;QACb,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,IAAI,GAAG,YAAY,8FAAW;YAAE,OAAO,GAAG,CAAC;QAC3C,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,IAAI,GAAG,YAAY,8FAAW;YAAE,OAAO,GAAG,CAAC;QAC3C,IACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM,EAChD;YACA,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;YAC/B,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE;SAC7D;aAAM,IACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM,EAChD;YACA,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;YAC/B,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE;SAC7D;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;YACzC,QAAQ,IAAI,CAAC,QAAQ,EAAE;gBACrB,KAAK,YAAY,CAAC,KAAK;oBACrB,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,SAAS;oBACzB,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,QAAQ;oBACxB,OAAO,GAAG,GAAG,GAAG,CAAC;gBACnB,KAAK,YAAY,CAAC,UAAU;oBAC1B,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,QAAQ;oBACxB,OAAO,GAAG,GAAG,GAAG,CAAC;gBACnB,KAAK,YAAY,CAAC,UAAU;oBAC1B,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB;oBACE,OAAO,MAAM,CAAC;aACjB;SACF;IACH,CAAC;IACD,YAAY,CAAC,QAAqB,EAAE,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAChG,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;QACxD,IAAI,QAAQ,YAAY,iDAAQ,EAAE;YAChC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,OAAO,OAAO,CAAC,QAAQ,EAAE;aAC1B;SACF;aAAM;YACL,QAAQ,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;gBACnC,KAAK,uDAAQ,CAAC,MAAM;oBAClB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAK,uDAAQ,CAAC,OAAO;oBACnB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3B,KAAK,uDAAQ,CAAC,QAAQ;oBACpB,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,GAAG,CAAC;gBACb,KAAK,uDAAQ,CAAC,QAAQ;oBACpB,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC;oBACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,KAAK,CAAC;gBACf,KAAK,uDAAQ,CAAC,MAAM;oBAClB,OAAO,EAAE,GAAG,KAAK,CAAC;aACrB;SACF;IAEH,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY;QACV,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,YAAY,CAAC,KAAK;gBACrB,OAAO,IAAI,CAAC;YACd,KAAK,YAAY,CAAC,SAAS;gBACzB,OAAO,IAAI,CAAC;YACd,KAAK,YAAY,CAAC,QAAQ;gBACxB,OAAO,GAAG,CAAC;YACb,KAAK,YAAY,CAAC,UAAU;gBAC1B,OAAO,IAAI,CAAC;YACd,KAAK,YAAY,CAAC,QAAQ;gBACxB,OAAO,GAAG,CAAC;YACb,KAAK,YAAY,CAAC,UAAU;gBAC1B,OAAO,IAAI,CAAC;YACd;gBACE,OAAO,MAAM,CAAC;SACjB;IACH,CAAC;CACF;AAED,IAAY,YAQX;AARD,WAAY,YAAY;IACtB,iDAAK;IACL,yDAAS;IACT,uDAAQ;IACR,uDAAQ;IACR,2DAAU;IACV,2DAAU;IACV,qDAAO;AACT,CAAC,EARW,YAAY,KAAZ,YAAY,QAQvB;;;;;;;;;;;;AClID,oFAAsC;AACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuEE;AACF,IAAI,cAAc,GAAG,CAAC;IACtjwC,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,SAAS,KAAK,KAAM,CAAC;QAC1C,EAAE,EAAE,EAAE;QACN,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,eAAe,EAAC,CAAC,EAAC,aAAa,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,SAAS,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC;QACxzB,UAAU,EAAE,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,YAAY,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,gBAAgB,EAAC,EAAE,EAAC,MAAM,EAAC;QAC/pc,aAAa,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY;YACzH,mBAAmB;YAEnB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvB,QAAQ,OAAO,EAAE;gBACjB,KAAK,CAAC;oBACN,OAAO,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBAChB,MAAM;gBACN,KAAK,CAAC;oBACN,IAAG,EAAE,CAAC,EAAE,CAAC,IAAE,KAAK;wBAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAA,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBACvD,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,EAAE;oBACvB,IAAI,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAE,KAAK,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,GAAE,CAAC;oBACpC,MAAM;gBACN,KAAK,CAAC;oBACN,IAAG,EAAE,CAAC,EAAE,CAAC,IAAE,KAAK;wBAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAA,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBACvD,MAAM;gBACN,KAAK,CAAC;oBACN,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBACrG,MAAM;gBACN,KAAK,CAAC;oBACN,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBACjG,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBACpE,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBACb,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC1F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBACpF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACxE,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACnG,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,CAAC,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACnG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBAC5F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBACxF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5F,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;oBAC1F,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/G,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC/G,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBAChH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACjH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACjF,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9H,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5H,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5H,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzH,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAC,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,IAAI,CAAC,CAAC;oBACpH,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAClC,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACpF,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBACnH,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACrF,MAAM;acAAc,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QAC1B,UAAU,EAAE,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI;YACtC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB;iBAAM;gBACH,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,KAAK,CAAC;aACf;QACL,CAAC;QACD,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK;YACvB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YACxK,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;gBACnB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;oBAClD,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClC;aACJ;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;YACtC,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,WAAW,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,WAAW,EAAE;gBACpC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACrB;YACD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACnD,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,EAAE;gBACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;aAC5D;YACD,SAAS,QAAQ,CAAC,CAAC;gBACf,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,CAAC;YACD,YAAY,EACR,IAAI,GAAG,GAAG;gBACN,IAAI,KAAK,CAAC;gBACV,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;gBAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBACzC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACN,IAAI,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACxF,OAAO,IAAI,EAAE;gBACT,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC5B,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBACvC;qBAAM;oBACH,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;wBACjD,MAAM,GAAG,GAAG,EAAE,CAAC;qBAClB;oBACD,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACW,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACvE,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,QAAQ,GAAG,EAAE,CAAC;oBACd,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;wBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;4BAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;yBACnD;qBACJ;oBACD,IAAI,KAAK,CAAC,YAAY,EAAE;wBACpB,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC;qBACpL;yBAAM;wBACH,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;qBAC7J;oBACD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACpB,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM;wBACxC,IAAI,EAAE,KAAK,CAAC,QAAQ;wBACpB,GAAG,EAAE,KAAK;wBACV,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC;iBACN;gBACL,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,IAAI,KAAK,CAAC,mDAAmD,GAAG,KAAK,GAAG,WAAW,GAAG,MAAM,CAAC,CAAC;iBACvG;gBACD,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;oBACnB,KAAK,CAAC;wBACF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,GAAG,IAAI,CAAC;wBACd,IAAI,CAAC,cAAc,EAAE;4BACjB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;4BAC1B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;4BACrB,IAAI,UAAU,GAAG,CAAC,EAAE;gCAChB,UAAU,EAAE,CAAC;6BAChB;yBACJ;6BAAM;4BACH,MAAM,GAAG,cAAc,CAAC;4BACxB,cAAc,GAAG,IAAI,CAAC;yBACzB;wBACD,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;wBACtC,KAAK,CAAC,EAAE,GAAG;4BACP,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;4BACzD,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;4BAC9C,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC7D,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW;yBACrD,CAAC;wBACF,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG;gCACb,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;6BACrC,CAAC;yBACL;wBACD,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE;4BAChC,MAAM;4BACN,MAAM;4BACN,QAAQ;4BACR,WAAW,CAAC,EAAE;4BACd,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM;4BACN,MAAM;yBACT,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC1B,OAAO,CAAC,CAAC;yBACZ;wBACD,IAAI,GAAG,EAAE;4BACL,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;4BACrC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;yBACtC;wBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrB,MAAM;oBACV,KAAK,CAAC;wBACF,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,EAAC,CAAC;IAGH,MAAM,UAAU,GAAE,mBAAO,CAAC,mDAAuC,CAAC;IAClE,MAAM,aAAa,GAAE,mBAAO,CAAC,oDAAwC,CAAC,CAAC;IACvE,MAAM,QAAQ,GAAE,mBAAO,CAAC,8CAAkC,CAAC;IAC3D,MAAM,YAAY,GAAE,mBAAO,CAAC,kDAAsC,CAAC;IACnE,MAAM,MAAM,GAAG,mBAAO,CAAC,2EAA+D,CAAC;IACvF,MAAM,UAAU,GAAE,mBAAO,CAAC,mDAAuC,CAAC;IAClE,MAAM,IAAI,GAAG,mBAAO,CAAC,6CAAiC,CAAC;IACvD,MAAM,cAAc,GAAG,mBAAO,CAAC,yDAA6C,CAAC;IAC7E,MAAM,kBAAkB,GAAG,mBAAO,CAAC,2DAA+C,CAAC;IACnF,MAAM,kBAAkB,GAAG,mBAAO,CAAC,2DAA+C,CAAC;IACnF,MAAM,SAAS,GAAG,mBAAO,CAAC,mDAAuC,CAAC;IAClE,MAAM,QAAQ,GAAG,mBAAO,CAAC,iDAAqC,CAAC;IAC/D,MAAM,UAAU,GAAE,mBAAO,CAAC,0DAA8C,CAAC,CAAC;IAC1E,MAAM,IAAI,GAAC,mBAAO,CAAC,yCAA6B,CAAC;IACjD,MAAM,UAAU,GAAE,mBAAO,CAAC,+CAAmC,CAAC;IAC9D,MAAM,MAAM,GAAE,mBAAO,CAAC,6CAAiC,CAAC,CAAC;IACzD,MAAM,IAAI,GAAE,mBAAO,CAAC,wCAA4B,CAAC,CAAC;IAClD,MAAM,UAAU,GAAE,mBAAO,CAAC,iDAAqC,CAAC,CAAC;IACjE,MAAM,MAAM,GAAE,mBAAO,CAAC,6CAAiC,CAAC,CAAC;IACzD,MAAM,UAAU,GAAE,mBAAO,CAAC,iDAAqC,CAAC,CAAC;IACjE,MAAM,aAAa,GAAE,mBAAO,CAAC,kDAAsC,CAAC;IAEpE,kCAAkC;IAClC,IAAI,KAAK,GAAG,CAAC;QACb,IAAI,KAAK,GAAG,CAAC;YAEb,GAAG,EAAC,CAAC;YAEL,UAAU,EAAC,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI;gBAChC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;YACL,CAAC;YAEL,mCAAmC;YACnC,QAAQ,EAAC,UAAU,KAAK,EAAE,EAAE;gBACpB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC7C,IAAI,CAAC,cAAc,GAAG,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,CAAC;oBACf,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,CAAC;iBACjB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,+CAA+C;YAC/C,KAAK,EAAC;gBACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBACnB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBACxC,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC1B;gBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,OAAO,EAAE,CAAC;YACd,CAAC;YAEL,iDAAiD;YACjD,KAAK,EAAC,UAAU,EAAE;gBACV,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAC9D,qBAAqB;gBACrB,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;gBACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE/D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBACrC;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBAE1B,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAClC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;oBACtC,WAAW,EAAE,KAAK,CAAC,CAAC;wBAChB,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;8BAC9D,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG;iBACnC,CAAC;gBAEF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,6EAA6E;YAC7E,IAAI,EAAC;gBACG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,kJAAkJ;YAClJ,MAAM,EAAC;gBACC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,kIAAkI,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBAC9N,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBAEN;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,yCAAyC;YACzC,IAAI,EAAC,UAAU,CAAC;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;YAEL,0DAA0D;YAC1D,SAAS,EAAC;gBACF,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3E,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAC,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC/E,CAAC;YAEL,mDAAmD;YACnD,aAAa,EAAC;gBACN,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;oBAClB,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACpF,CAAC;YAEL,2FAA2F;YAC3F,YAAY,EAAC;gBACL,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5C,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;YACvD,CAAC;YAEL,8EAA8E;YAC9E,UAAU,EAAC,UAAS,KAAK,EAAE,YAAY;gBAC/B,IAAI,KAAK,EACL,KAAK,EACL,MAAM,CAAC;gBAEX,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,eAAe;oBACf,MAAM,GAAG;wBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE;4BACJ,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;4BAClC,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;4BACtC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;yBACvC;wBACD,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB,CAAC;oBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBACpD;iBACJ;gBAED,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBACjC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;oBACrC,WAAW,EAAE,KAAK,CAAC,CAAC;wBACP,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;iBACzD,CAAC;gBACF,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjE;gBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC;iBAChB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,kBAAkB;oBAClB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;wBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACvB;oBACD,OAAO,KAAK,CAAC,CAAC,+EAA+E;iBAChG;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;YAEL,6BAA6B;YAC7B,IAAI,EAAC;gBACG,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,IAAI,KAAK,EACL,KAAK,EACL,SAAS,EACT,KAAK,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,SAAS,IAAI,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;wBAChE,KAAK,GAAG,SAAS,CAAC;wBAClB,KAAK,GAAG,CAAC,CAAC;wBACV,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;4BAC9B,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;gCACjB,OAAO,KAAK,CAAC;6BAChB;iCAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gCACxB,KAAK,GAAG,KAAK,CAAC;gCACd,SAAS,CAAC,wDAAwD;6BACrE;iCAAM;gCACH,8FAA8F;gCAC9F,OAAO,KAAK,CAAC;6BAChB;yBACJ;6BAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;4BAC3B,MAAM;yBACT;qBACJ;iBACJ;gBACD,IAAI,KAAK,EAAE;oBACP,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;wBACjB,OAAO,KAAK,CAAC;qBAChB;oBACD,8FAA8F;oBAC9F,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;oBACpB,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,wBAAwB,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBACpH,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBACN;YACL,CAAC;YAEL,qCAAqC;YACrC,GAAG,EAAC,SAAS,GAAG;gBACR,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE;oBACH,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;iBACrB;YACL,CAAC;YAEL,wGAAwG;YACxG,KAAK,EAAC,SAAS,KAAK,CAAE,SAAS;gBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,CAAC;YAEL,0EAA0E;YAC1E,QAAQ,EAAC,SAAS,QAAQ;gBAClB,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;iBACpC;qBAAM;oBACH,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;YACL,CAAC;YAEL,4FAA4F;YAC5F,aAAa,EAAC,SAAS,aAAa;gBAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBACnF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBACrF;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;iBAC3C;YACL,CAAC;YAEL,oJAAoJ;YACpJ,QAAQ,EAAC,SAAS,QAAQ,CAAE,CAAC;gBACrB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,EAAE;oBACR,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACH,OAAO,SAAS,CAAC;iBACpB;YACL,CAAC;YAEL,6BAA6B;YAC7B,SAAS,EAAC,SAAS,SAAS,CAAE,SAAS;gBAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1B,CAAC;YAEL,qDAAqD;YACrD,cAAc,EAAC,SAAS,cAAc;gBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACtC,CAAC;YACL,OAAO,EAAE,EAAC,kBAAkB,EAAC,IAAI,EAAC;YAClC,aAAa,EAAE,SAAS,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,yBAAyB,EAAC,QAAQ;gBAC3E,IAAI,OAAO,GAAC,QAAQ,CAAC;gBACrB,QAAO,yBAAyB,EAAE;oBAClC,KAAK,CAAC,EAAC,qBAAqB;wBAC5B,MAAM;oBACN,KAAK,CAAC,EAAC,0BAA0B;wBACjC,MAAM;oBACN,KAAK,CAAC,EAAC,6BAA6B;wBACpC,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,SAAS,CAAC;wBACzB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,eAAe;wBAC9B,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,EAAC,sBAAsB;wBACxC,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,8BAA8B,GAAC,GAAG,CAAC,MAAM,EAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;wBAAC,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAC,GAAG,CAAC,MAAM,GAAE,UAAU,GAAE,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBACxS,MAAM;iBACL;YACD,CAAC;YACD,KAAK,EAAE,CAAC,WAAW,EAAC,cAAc,EAAC,2CAA2C,EAAC,0BAA0B,EAAC,4BAA4B,EAAC,2BAA2B,EAAC,2BAA2B,EAAC,2BAA2B,EAAC,4BAA4B,EAAC,mBAAmB,EAAC,kBAAkB,EAAC,mBAAmB,EAAC,eAAe,EAAC,oBAAoB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,gBAAgB,EAAC,mBAAmB,EAAC,cAAc,EAAC,cAAc,EAAC,kBAAkB,EAAC,cAAc,EAAC,cAAc,EAAC,YAAY,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,SAAS,EAAC,mDAAmD,EAAC,gBAAgB,EAAC,0BAA0B,EAAC,2BAA2B,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,CAAC;YAC15B,UAAU,EAAE,EAAC,SAAS,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC;SAC3M,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACb,CAAC,CAAC,EAAE,CAAC;IACL,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,SAAS,MAAM;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;IAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACjD,OAAO,IAAI,MAAM,CAAC;AAClB,CAAC,CAAC,EAAE,CAAC;AAGL,IAAI,IAAgE,EAAE;IACtE,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC;IAChC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;IACvC,OAAO,CAAC,KAAK,GAAG,cAAc,OAAO,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9F,OAAO,CAAC,IAAI,GAAG,SAAS,YAAY,CAAE,IAAI;QACtC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,OAAO,CAAC,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;QACD,IAAI,MAAM,GAAG,mBAAO,CAAC,WAAI,CAAC,CAAC,YAAY,CAAC,mBAAO,CAAC,aAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpF,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,IAAI,KAA6B,IAAI,4CAAY,KAAK,MAAM,EAAE;QAC5D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;CACA;;;;;;;;;;;;;;ACx0BD;AAAA;AAAA;AAAA;AAAA;AAAA,0EAA0E;AAC1E,sFAAsF;AAC3D;;AAOpB,MAAM,iBAAiB;IAS5B;QARA,qBAAqB;QACrB,aAAQ,GAAC,CAAC,CAAC;QACX,WAAM,GAAC,EAAE,CAAC;QACV,eAAU,GAAG,EAAE,CAAC;QAChB,UAAK,GAAG,IAAI,CAAC;QACb,UAAK,GAAG,IAAI,CAAC;QACb,YAAO,GAAG,IAAI,CAAC;QACf,mBAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEtD,MAAC,GAAG,CAAC,CAAC;IADU,CAAC;IAGjB,QAAQ;QAEN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,SAAS,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QAGtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,EAAC,KAAK,EAAC,CAAC;QAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAC,KAAK,CAAC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAC,SAAS,EAAC,KAAK,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;SAClD;QACD,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,EAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAC,CAAC;SACpD;QACD,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC;SACzC;QAGD,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,IAAI,OAAO,GAAG;YACZ,KAAK,EAAC;gBACJ,WAAW,EAAE,CAAC;gBACd,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACH,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAC,SAAS;iBACvB;gBACD,IAAI,EAAC;oBACH,KAAK,EAAC,SAAS;oBACf,IAAI,EAAE,gBAAgB;iBACrB;aACN;YACC,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,IAAI,EAAE,aAAa;oBACnB,cAAc,EAAE,UAAU;oBAC1B,SAAS,EAAE,GAAG;iBACf;aACF;YACD,MAAM,EAAE;gBACN,UAAU,EAAE,SAAS;gBACrB,cAAc,EAAC,IAAI;gBAEnB,YAAY,EAAE;oBAEZ,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,SAAS;iBACtB;aACF;YAED,OAAO,EAAE,KAAK;SACf,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,2CAAW,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,MAAM;YACxC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS;gBAC5C,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;QAKH,IAAI,SAAS,GAAY,EAAE,CAAC;IAI9B,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,MAAc,EAAE,KAAY;QAElD,IAAI,GAAG,GAAG,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC;QAC/B,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC;YACE,KAAK,EAAE;YACP,IAAI,CAAC,CAAC,EAAE;YACR,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,KAAK,EAAE,GAAG,EAAC,IAAI,CAAC,CAAC,EAAC,CAAC;YACzC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAC,KAAK,EAAC,CAAC;YAEnE,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;YACpD,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpD,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC/C;QACD,OAAO,GAAG;IACZ,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;kFAzHQ,iBAAiB;iGAAjB,iBAAiB;QCR9B,oEAA0B;;;;;;;;;;;;;;ACJ1B;AAAA;AAAA;AAAe,MAAM,IAAI;IAEvB,YAAY,KAAe;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,OAAO,CAAC,IAAc;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IACM,KAAK,CAAC,OAAa;QACxB,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;CACF;AAED,IAAY,QAMX;AAND,WAAY,QAAQ;IAClB,2CAAM;IACN,2CAAM;IACN,yCAAK;IACL,+CAAQ;IACR,6CAAO;AACT,CAAC,EANW,QAAQ,KAAR,QAAQ,QAMnB;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAe,MAAM,IAAI;IAEvB,YAAY,KAAe;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,OAAO,CAAC,IAAc;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IACM,KAAK,CAAC,OAAa;QACxB,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;CACF;AAED,IAAY,QAaX;AAbD,WAAY,QAAQ;IAClB,2CAAM;IACN,2CAAM;IACN,2CAAM;IACN,6CAAO;IACP,+CAAQ;IACR,+CAAQ;IACR,2CAAM;IACN,+CAAQ;IACR,6CAAO;IACP,+CAAQ;IACR,0CAAK;IACL,8CAAO;AACT,CAAC,EAbW,QAAQ,KAAR,QAAQ,QAanB;;;;;;;;;;;;;;;;;;;ACtBM,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAA2B;;;;;;;;;;;;;;ACA3B;AAAA;AAAA;AAA2E;AAM5D,MAAM,KAAK;IA8ExB,YAAY,aAAmC;QAlBvC,YAAO,GAAW,EAAE,CAAC;QAmB3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,8EAAa,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAe,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAe,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAgB,CAAC;IACjD,CAAC;IA/EM,WAAW;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,eAAe,CACpB,aAAqB,EACrB,KAAa,EACb,KAAa,EACb,OAAe,EACf,OAAe;QAEf,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IACE,QAAQ,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,IAAI,aAAa,CAAC,WAAW,EAAE;gBACrE,QAAQ,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE,EACtD;gBACA,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzB,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACM,UAAU,CAAC,aAAqB;QACrC,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IAAI,QAAQ,CAAC,gBAAgB,EAAE,IAAI,aAAa,CAAC,WAAW,EAAE,EAAE;gBAC9D,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;aACvC;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,YAAY,CAAC,KAAyB;QAC3C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IACM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAyB;QAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,gBAAgB,CAAC,KAA2B;QACjD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,UAAU,CAAC,KAAa;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACM,gBAAgB,CAAC,QAAgB;QACtC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,CAAC;IAChD,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAoB;QACxC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;CAUF;;;;;;;;;;;;;AC3FD;AAAA;AAAA;AAAwC;AAEzB,MAAM,aAAa;IAQhC,YAAY,QAAwB;QAF5B,sBAAiB,GAAG,EAAE;QAG5B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAW,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,6CAAI,CAAC,8CAAQ,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,WAAW,CAAC,QAAuB;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,QAAQ,CAAC,KAAqB;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IACM,WAAW,CAAC,OAAgB;QACjC;;;;;;;;;;;;;;;UAeE;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAEM,WAAW,CAAC,EAAU;QAC3B,KAAK,IAAI,CAAC,GAAkB,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;YAChE,IAAI,UAAU,GAAY,IAAI,CAAC;YAC/B,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC1B,IAAI,CAAC,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE;oBAC9B,UAAU,GAAG,CAAC,CAAC;oBACf,MAAM;iBACP;aACF;YACD,IAAI,UAAU,IAAI,IAAI,EAAE;gBACtB,OAAO,UAAU,CAAC;aACnB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACM,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAEM,kBAAkB,CAAC,KAAK,EAAE,KAAK;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAC7D,CAAC;IAEM,oBAAoB,CAAC,KAAK,EAAE,KAAK;QACtC,KAAK,IAAI,UAAU,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC7C,IAAI,UAAU,CAAC,KAAK,IAAI,KAAK,IAAI,UAAU,CAAC,KAAK,IAAI,KAAK,EAAE;gBAC1D,OAAO,EAAE;aACV;SACF;QAED,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC;QACrC,OAAO,KAAK,GAAG,GAAG,GAAG,KAAK;IAC5B,CAAC;CAEF;AACD,+BAA+B;;;;;;;;;;;;;ACxF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqF;AAC9B;AAGb;AAEQ;AACF;AAEV;AACF;AACW;AAEhC,MAAM,SAAU,SAAQ,kEAAW;IAU9C,YAAY,QAAqB,EAAE,SAA+B,EAAE,KAAa,EAAE,OAAe,EAAE,QAAsB,EAAE,UAAwB;QAChJ,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,cAAc,CAAC;QACnB,IAAI,GAAG,CAAC;QACR,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACvC,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,WAAW,GAAG,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,YAAY,KAAK,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACzB,IAAI,IAAI,YAAY,wDAAe,EAAE;oBACjC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;oBAC1D,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACnC,CAAC,EAAE,CAAC;wBACJ,IAAI,OAAO,YAAY,mDAAU,EAAE;4BAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;4BAE5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;gCACxC,QAAQ,GAAG,UAAU;gCACrB,IAAI,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;oCAClC,IAAI,KAAK,IAAI,IAAI,EAAE;wCACf,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;wCACpI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;wCACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;wCAEtD,IAAI,MAAM,IAAI,IAAI,EAAE;4CAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;4CAElC,OAAO,MAAM;yCAChB;qCACJ;iCACJ;6BAEJ;iCAAM,IAAI,UAAU,YAAY,KAAK,EAAE;gCACpC,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gCACpI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;gCACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gCACjE,IAAI,MAAM,IAAI,IAAI,EAAE;oCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;oCAClC,OAAO,MAAM;iCAChB;6BACJ;yBACJ;oBACL,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACN;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAClC,CAAC,GAAG,CAAC,CAAC;QACN,IAAI,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACvB,IAAI,MAAM,CAAC;YACX,IAAI,IAAI,CAAC,QAAQ,YAAY,wDAAe,EAAE;gBAC1C,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC3D,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC9B,CAAC,EAAE,CAAC;oBACJ,IAAI,OAAO,YAAY,mDAAU,EAAE;wBAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;wBAC5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;4BACxC,QAAQ,GAAG,UAAU;4BACrB,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;gCAC7B,IAAI,KAAK,IAAI,IAAI,EAAE;oCACf,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oCACjD,IAAI,MAAM,IAAI,IAAI,EAAE;wCAChB,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;wCAC3B,OAAO,MAAM;qCAChB;iCACJ;6BACJ;yBAEJ;6BAAM,IAAI,UAAU,YAAY,KAAK,EAAE;4BACpC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;4BAEvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,SAAS,cAAc,SAAS,GAAG,CAAC;4BACrE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,SAAS,GAAG,CAAC;4BAE1C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC;4BACrC,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;4BAC7H,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;4BACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;4BAC5D,IAAI,MAAM,IAAI,IAAI,EAAE;gCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;gCAClC,OAAO,MAAM;6BAChB;yBACJ;qBACJ;gBACL,CAAC,CAAC,CAAC;aACN;iBAAM,IAAI,IAAI,CAAC,QAAQ,YAAY,kDAAS,EAAE;aAE9C;iBAAM;aAEN;SAEJ;QAED,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACxB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,SAAS,GAAG,CAAC;YAC1C,IAAI,IAAI,CAAC,SAAS,YAAY,6DAAQ,EAAE;gBACpC,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAC7D,IAAI,MAAM,IAAI,IAAI,EAAE;oBAChB,OAAO,MAAM,CAAC,QAAQ,EAAE;iBAC3B;aACJ;iBACG,IAAI,IAAI,CAAC,SAAmB,EAAE;gBAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC1D,IAAI,MAAM,IAAI,IAAI,EAAE;oBAChB,OAAO,MAAM,CAAC,QAAQ,EAAE;iBAC3B;aACJ;SACR;QACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDL;IAEC,CAAC;IAGM,UAAU;QACb,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACM,QAAQ,CAAC,KAAY,EAAE,KAAoB;QAC9C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;;;;;;;ACvMM,MAAM,eAAe;IAC1B,QAAQ,KAAI,CAAC;;8EADF,eAAe;+FAAf,eAAe;QCP5B,4EAAiC;;;;;;;;;;;;;;ACCjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAE1B;AACZ;AAIO;AAEnC,MAAM,UAAW,SAAQ,kEAAW;IAI/C,YAAY,EAAU,EAAE,KAAkB,EAAE,KAAa,EAAE,OAAe;QACtE,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEzC,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,IAAI,8FAAW,CAAC,WAAW,EAAE,wBAAwB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5G,IAAI,KAAU,CAAC;QACf,KAAK,GAAG,IAAI,CAAC;QACb,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;QAGtD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,UAAU;QACN,IAAI,IAAI,GAAC,IAAI,0DAAO,CAAC,YAAY,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAEH;;;;;;;;;;;;;AC3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqF;AACD;AAC7B;AAGb;AAEQ;AACF;AAEjC,MAAM,EAAG,SAAQ,kEAAW;IAKvC,YAAY,SAAsB,EAAE,KAAa,EAAE,OAAe,EAAE,OAA2B,EAAE,OAAqB;QAClH,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,CAAC;QACR,IAAI,cAAc,CAAC;QAEX,IAAI,IAAI,CAAC,SAAS,YAAY,wDAAe,EAAE;YAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC9D,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACpC,CAAC,EAAE;gBACH,IAAI,OAAO,YAAY,kGAAU,EAAE;oBAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAC7D,IAAI,UAAU,YAAY,6FAAgB,EAAE;wBACxC,QAAQ,GAAG,UAAU;wBACrB,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;4BAC/B,IAAI,KAAK,IAAI,IAAI,EAAE;gCACf,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gCACjI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gCACvB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gCAEnD,IAAI,MAAM,IAAI,IAAI,EAAE;oCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;oCAElC,OAAO,MAAM;iCAChB;6BACJ;yBACJ;qBACJ;yBAAM,IAAI,UAAU,YAAY,KAAK,EAAE;wBACpC,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;wBACjI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;wBACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC9D,IAAI,MAAM,IAAI,IAAI,EAAE;4BAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;4BAClC,OAAO,MAAM;yBAChB;qBACJ;iBACJ;YACL,CAAC,CAAC,CAAC;SACN;QAET,IAAG,IAAI,CAAC,OAAO,IAAE,IAAI,EAAC;YAClB,IAAI,SAAS,CAAC;YACd,IAAI,IAAI,CAAC,OAAO,YAAY,wDAAe,EAAE;gBACzC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC7D,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACjC,CAAC,EAAE,CAAC;oBACJ,IAAI,OAAO,YAAY,kGAAU,EAAE;wBAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;wBAC5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;4BACxC,QAAQ,GAAG,UAAU;4BACrB,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gCAChC,IAAI,KAAK,IAAI,IAAI,EAAE;oCACf,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oCACpD,IAAI,MAAM,IAAI,IAAI,EAAE;wCAChB,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;wCAC3B,OAAO,MAAM;qCAChB;iCACJ;6BACJ;yBAEJ;6BAAM,IAAI,UAAU,YAAY,KAAK,EAAE;4BACpC,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;4BAChI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;4BACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;4BAC/D,IAAI,MAAM,IAAI,IAAI,EAAE;gCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;gCAClC,OAAO,MAAM;6BAChB;yBACJ;qBACJ;gBACL,CAAC,CAAC,CAAC;aAEN;iBAAM;aAEN;SAEJ;IACL,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAKJ;;;;;;;;;;;;;AC5GD;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEN;AACjB;AAEjB,MAAM,UAAW,SAAQ,kEAAW;IAK/C,YAAY,UAAsB,EAAC,QAAe,EAAE,UAAuB,EAAE,IAAY,EAAE,OAAe;QACtG,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,QAAQ,GAAC,QAAQ;QACtB,IAAI,CAAC,UAAU,GAAE,UAAU;IAC/B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,gCAAgC;QAChC,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE;YAC5C,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;gBAC1E,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;aAClM;iBAAK;gBACF,IAAI,WAAW,CAAC,SAAS,IAAI,IAAI,IAAI,WAAW,CAAC,SAAS,IAAI,IAAI,EAAE;oBAChE,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;iBAClM;qBAAI;oBACD,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;wBACjC,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;4BACpC,IAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACxG,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACrK;6BAAM;4BACH,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBAC1I;qBACJ;yBAAM,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;wBACxC,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;4BACpC,IAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACxG,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACrK;6BAAM;4BACH,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBAC1I;qBACJ;iBACJ;aACJ;SACJ;IACL,CAAC;CAEJ;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAKO;AAEnC,MAAM,UAAW,SAAQ,kEAAW;IAIjD,YAAY,OAAe,EAAE,IAAY,EAAE,OAAe;QAExD,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,OAAO;IACxB,CAAC;IACM,WAAW;QAChB,IAAI,IAAI,GAAE,IAAI,0DAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,cAAc;QACzD,IAAI,UAAU,GAAE,IAAI,0DAAO,CAAC,IAAI,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAE/B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC5C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CAEF;;;;;;;;;;;;;AC9BD;AAAA;AAAA,MAAM,OAAQ,SAAQ,KAAkB;IAEpC,YAAY,GAAe;QACvB,KAAK,EAAE,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,GAAG,CAAC,GAAe;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,cAAc;QACxB,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YACvB,OAAO,sCAAsC,CAAC;SACjD;QACD,OAAO,yBAAyB,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,QAAQ;QAClB,IAAI,GAAG,GAAQ,EAAE,CAAC;QAClB,GAAG,IAAE,UAAU,CAAC;QACZ,GAAG,IAAE,YAAY,CAAC;QACd,GAAG,IAAE,kCAAkC,CAAC;QAC5C,GAAG,IAAE,aAAa,CAAC;QACnB,GAAG,IAAE,8BAA8B,CAAC;QAChC,GAAG,IAAE,0BAA0B,CAAC;QAC5B,GAAG,IAAE,8CAA8C,CAAC;QACpD,GAAG,IAAE,yCAAyC,CAAC;QAC3C,GAAG,IAAE,QAAQ,CAAC;QACV,GAAG,IAAE,4DAA4D,CAAC;QACtE,GAAG,IAAE,SAAS,CAAC;QACf,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACrC,GAAG,IAAE,QAAQ,CAAC;YACV,GAAG,IAAE,MAAM,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,GAAC,WAAW;gBACxD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAC,WAAW;gBACvC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAC,WAAW;gBACvC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,GAAC,SAAS,CAAC;YAC7C,GAAG,IAAE,SAAS,CAAC;SAClB;QACL,GAAG,IAAE,YAAY,CAAC;QACtB,GAAG,IAAE,UAAU,CAAC;QACpB,GAAG,IAAE,WAAW,CAAC;QACrB,GAAG,IAAE,WAAW,CAAC;QAEjB,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,MAAM,CAAC,KAAK;QACf,OAAM,IAAI,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACxB;IACL,CAAC;CACJ;AACe;;;;;;;;;;;;;ACtDhB;AAAA;AAAA;AAAA;AAAuD;AAEN;AAElC,MAAM,QAAS,SAAQ,kEAAW;IAG7C,YAAY,aAAqB,EAAE,IAAY,EAAE,OAAe;QAC5D,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC5C,OAAO,IAAI;IACb,CAAC;CAEJ;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAwE;AAKzD,MAAM,KAAK;IAkDxB,YAAY,aAAmC;QAlBvC,YAAO,GAAW,EAAE,CAAC;QAmB3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,8EAAa,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAe,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAe,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAa,CAAC;IAC9C,CAAC;IApDM,WAAW;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,UAAU,CAAC,WAAqB;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;IACtC,CAAC;IAGM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,YAAY,CAAC,KAAyB;QAC3C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IACM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAyB;QAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,gBAAgB,CAAC,KAA2B;QACjD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,UAAU,CAAC,KAAa;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACM,gBAAgB,CAAC,QAAgB;QACtC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,CAAC;IAChD,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAoB;QACxC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;CAUF;;;;;;;;;;;;;AC9DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACa;AACF;AACA;AACT;AACqB;AACG;AACoB;AACf;AACf;AACN;AACwB;AAClB;AACN;AACsB;AACO;AAC7B;AACiB;AAC6B;AAC5C;AACA;AAEJ;AACG;AACG;AACyC;AAC3B;AACc;AACsB;AACA;;AAsCtG,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,EAAE,YAlBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0EAAgB;YAChB,qEAAa;YACb,sEAAgB;YAChB,6FAAuB;YACvB,2EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,sFAAqB;YACrB,uEAAc;YACd,uEAAc;YACd,yEAAe;YACf,0DAAW;YACX,kEAAmB;SACpB;oIAIU,SAAS,mBAnClB,2DAAY;QACZ,gFAAe;QACf,mFAAgB;QAChB,uGAAsB;QACtB,wFAAiB;QACjB,0FAAgB;QAChB,iGAAmB;QACnB,kHAAwB;QACxB,iHAAyB;QACzB,sFAAgB;QAChB,oGAAoB;QACpB,0HAA4B;QAC5B,0HAA4B,aAG5B,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0EAAgB;QAChB,qEAAa;QACb,sEAAgB;QAChB,6FAAuB;QACvB,2EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,sFAAqB;QACrB,uEAAc;QACd,uEAAc;QACd,yEAAe;QACf,0DAAW;QACX,kEAAmB;;;;;;;;;;;;;AC9DvB;AAAA;AAAA;AAAA;AAAuD;AAEN;AAElC,MAAM,KAAM,SAAQ,kEAAW;IAE1C,YAAY,SAAuB,EAAE,IAAY,EAAE,OAAe;QAC9D,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAE,SAAS;IAC7B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAEJ;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAEgC;AACzB;AACoB;AAGvD,MAAM,IAAK,SAAQ,kEAAW;IAGzC,YAAY,MAAc,EAAE,IAAY,EAAE,OAAe;QACrD,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,MAAM;IAC3B,CAAC;IAED,WAAW,CAAC,KAAY,EAAE,KAAoB;QAE1C,OAAO,IAAI,CAAC,SAAS;IACzB,CAAC;IACD,WAAW;QACP,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB;QAC1D,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,eAAe,CAAC,GAAY,EAAE,GAAW,EAAE,OAAsB;QAC7D,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAE;YACnC,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACvC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;gBACxB,IAAI,GAAG,YAAY,uFAAO,EAAE;oBACxB,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;wBAC7B,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;4BAChC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE,GAAC,IAAI;wBACtC,CAAC,CAAC,CAAC;qBACN;oBACD,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,8EAAa,EAAE;wBACzC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;qBACjD;iBACJ;aACJ;SACJ;IACL,CAAC;CACJ;;;;;;;;;;;;;AA5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAEgC;AACzB;AACoB;AAGvD,MAAM,IAAK,SAAQ,kEAAW;IAGzC,YAAY,MAAc,EAAE,IAAY,EAAE,OAAe;QACrD,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,MAAM;IAC3B,CAAC;IAED,WAAW,CAAC,KAAY,EAAE,KAAoB;QAE1C,OAAO,IAAI,CAAC,SAAS;IACzB,CAAC;IACD,WAAW;QACP,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB;QAC1D,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,eAAe,CAAC,GAAY,EAAE,GAAW,EAAE,OAAsB;QAC7D,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAE;YACnC,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACvC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;gBACxB,IAAI,GAAG,YAAY,uFAAO,EAAE;oBACxB,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;wBAC7B,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;4BAChC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE,GAAC,IAAI;wBACtC,CAAC,CAAC,CAAC;qBACN;oBACD,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,8EAAa,EAAE;wBACzC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;qBACjD;iBACJ;aACJ;SACJ;IACL,CAAC;CACJ;;;;;;;;;;;;;AC5CD;AAAA;AAAe,MAAM,WAAW;IAiB9B,YAAY,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,OAAe;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAjBM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAOM,WAAW;QAChB,OAAO,CACL,aAAa;YACb,IAAI,CAAC,SAAS;YACd,SAAS;YACT,IAAI,CAAC,IAAI;YACT,gBAAgB;YAChB,IAAI,CAAC,IAAI;YACT,kBAAkB;YAClB,IAAI,CAAC,OAAO;YACZ,IAAI,CACL,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAuD;AAEN;AAElC,MAAM,KAAM,SAAQ,kEAAW;IAE1C,YAAY,SAAqB,EAAE,IAAY,EAAE,OAAe;QAC5D,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAE,SAAS;IAC7B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,yBAAyB;QACzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAEJ;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AACxB;AAEhB;AACN;AACd;AACoB;AACd;AACQ;AACN;AACF;AACS;AAED;AAElC,MAAM,oBAAqB,SAAQ,kEAAW;IAKzD,YAAY,OAAoB,EAAE,WAAwB,EAAE,SAAsB,EAAE,IAAY,EAAE,OAAe;QAC7G,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,OAAO;QACzB,IAAI,CAAC,cAAc,GAAG,WAAW;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,sFAAsF;QACtF,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,IAAI,IAAI,CAAC,UAAU,YAAY,0DAAO,EAAE;gBACpC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBACjD,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrB,MAAM,IAAI,MAAM,GAAG,GAAG;aAEzB;iBAAM,IAAI,IAAI,CAAC,UAAU,YAAY,gEAAa,EAAE;gBACjD,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBACjD,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrB,MAAM,IAAI,MAAM,GAAG,GAAG;aACzB;SACJ;QACD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC7B,IAAI,KAAK,GAAG,MAAM,CAAC;YACnB,IAAI,IAAI,CAAC,cAAc,YAAY,KAAK,EAAE;gBACtC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;oBAC/B,IAAI,QAAQ,GAAY,CAAC;oBACzB,IAAI,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC7C,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,KAAK;iBACxC;aACJ;SACJ;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS,YAAY,6DAAU,EAAE;gBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBACzF,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBACpM,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAClE;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBACrM,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAClE;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC/J,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;iBAC7B;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAChK,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;iBAC7B;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBAC5C;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,IAAI,MAAM,GAAG,IAAI,8DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;oBAChK,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;oBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;iBAC7B;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,4GAAY,CAAC,IAAI,CAAC,IAAI,+EAAW,CAAC,qBAAqB,EAAC,wBAAwB,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC3G,OAAO,EAAE;iBACZ;qBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAChG,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBACzE;qBAAM;oBACH,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;iBACzE;aAEJ;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAM,EAAE;gBACzC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,6DAAU,EAAE;gBAC7C,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,sDAAG,EAAE;gBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAM,EAAE;gBACzC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,gEAAa,EAAE;gBAChD,4BAA4B;aAC/B;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,0DAAO,EAAE;gBAC1C,4BAA4B;aAC/B;SAGJ;IACL,CAAC;CAEJ;;;;;;;;;;;;;ACrID;AAAA;AAAA;AAAA;AAAiF;AACK;AAMvE,MAAM,KAAM,SAAQ,mGAAW;IAG1C,YAAY,SAAsB,EAAE,KAAa,EAAE,OAAe;QAC9D,KAAK,CAAC,IAAI,uFAAI,CAAC,wFAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAE/B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QACtE,IAAI,IAAI,CAAC,SAAS,YAAY,mGAAW,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC9D,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACrC,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,eAAe,GAAG,KAAK,CAAC,CAAC;YAC5D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAChD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,UAAU,GAAG,CAAC,CAAC;YAC5C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,UAAU,GAAG,CAAC,CAAC;YAC5C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAa;QAChC,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY;QACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QACxD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,CAAC;QACtD,IAAI,IAAI,GAAW,KAAK,GAAG,EAAE,CAAC;QAC9B,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,QAAQ,MAAM,EAAE;gBACZ,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,QAAQ,IAAI,IAAI,EAAE;wBAAE,MAAM,GAAG,CAAC,CAAC;wBAAC,SAAS;qBAAE;oBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,QAAQ,EAAE,CAAC,CAAC;oBACjE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,MAAM;iBACT;gBACD,KAAK,CAAC;oBACF;wBACI,IAAI,KAAK,GAAG,CAAC,CAAC;wBACd,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BAC/B,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BACrC,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACpC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACnC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,CAAC,CAAC;yBAAE;6BACnC;4BACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;4BACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;4BACxC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACvD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;yBAC3C;wBACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;wBACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;wBAC1C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBACxC,MAAM,GAAG,CAAC,CAAC;wBACX,MAAM;qBACT;aACR;SAEJ;QACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACzE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,UAAU,QAAQ,SAAS,GAAG,CAAC,CAAC;QAEpE,OAAO,KAAK,UAAU,EAAE;IAC5B,CAAC;CAEJ;;;;;;;;;;;;;;;;;;;;IC5FS,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;IAKlE,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAKzD,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAK5D,yEAAsC;IAAC,sEAAU;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAI9D,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAG1D,yEAAsC;IAAC,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAG5D,yEAAsC;IAAC,qEAAS;IAAA,4DAAK;;;IACrD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAG/D,oEAA4D;;;IAC5D,oEAAkE;;ACtCnE,MAAM,sBAAsB;IAWjC;QAVA,qBAAgB,GAAa;YAC3B,IAAI;YACJ,MAAM;YACN,QAAQ;YACR,WAAW;YACX,OAAO;YACP,SAAS;YACT,UAAU;SACX,CAAC;QACF,eAAU,GAAG,EAAE,CAAC;IACD,CAAC;IAChB,QAAQ;QAEN,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAC9B,CAAC;;4FAnBU,sBAAsB;sGAAtB,sBAAsB;QDPnC,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,yEAAmB;QACf,2EAAoE;QAMhE,2EAAgC;QAC9B,gHAAgD;QAChD,gHAAuE;QACzE,qEAAe;QAGf,2EAAkC;QAChC,gHAAiD;QACjD,gHAA8D;QAChE,qEAAe;QAGf,4EAAoC;QAClC,kHAAmD;QACnD,kHAAiE;QACnE,qEAAe;QAGf,4EAAuC;QACrC,kHAAsD;QACtD,kHAAmE;QACrE,qEAAe;QAEf,4EAAmC;QACjC,kHAAkD;QAClD,kHAA+D;QACjE,qEAAe;QACf,4EAAqC;QACnC,kHAAoD;QACpD,kHAAiE;QACnE,qEAAe;QACf,6EAAsC;QACpC,kHAAqD;QACrD,kHAAkE;QACpE,qEAAe;QAEf,mHAA4D;QAC5D,mHAAkE;QACpE,4DAAQ;QACd,4DAAM;;QA7Ce,0DAAyB;QAAzB,sFAAyB;QA0ClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;AE1CnE;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAOpB,MAAM,gBAAgB;IAS3B;QAPA,aAAQ,GAAC,CAAC,CAAC;QACX,WAAM,GAAC,EAAE,CAAC;QACV,eAAU,GAAG,EAAE,CAAC;QAChB,UAAK,GAAG,IAAI,CAAC;QACb,UAAK,GAAG,IAAI,CAAC;QACb,YAAO,GAAG,IAAI,CAAC;QACf,mBAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEtD,MAAC,GAAG,CAAC,CAAC;IADU,CAAC;IAGjB,QAAQ;QAEN,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,IAAI,SAAS,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QAGtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,EAAC,KAAK,EAAC,CAAC;QAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAC,KAAK,CAAC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAC,SAAS,EAAC,KAAK,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;SAClD;QACD,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,EAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAC,CAAC;SACpD;QACD,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC;SACzC;QAGD,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,IAAI,OAAO,GAAG;YACZ,KAAK,EAAC;gBACJ,WAAW,EAAE,CAAC;gBACd,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACH,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAC,SAAS;iBACvB;gBACD,IAAI,EAAC;oBACH,KAAK,EAAC,SAAS;oBACf,IAAI,EAAE,gBAAgB;iBACrB;aACN;YACC,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,IAAI,EAAE,aAAa;oBACnB,cAAc,EAAE,UAAU;oBAC1B,SAAS,EAAE,GAAG;iBACf;aACF;YACD,MAAM,EAAE;gBACN,UAAU,EAAE,SAAS;gBACrB,cAAc,EAAC,IAAI;gBAEnB,YAAY,EAAE;oBAEZ,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,SAAS;iBACtB;aACF;YAED,OAAO,EAAE,KAAK;SACf,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,2CAAW,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,MAAM;YACxC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS;gBAC5C,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,GAAY,EAAE,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,MAAc,EAAE,KAAY;QAElD,IAAI,GAAG,GAAG,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC;QAC/B,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC;YACE,KAAK,EAAE;YACP,IAAI,CAAC,CAAC,EAAE;YACR,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,KAAK,EAAE,GAAG,EAAC,IAAI,CAAC,CAAC,EAAC,CAAC;YACzC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAC,KAAK,EAAC,CAAC;YAEnE,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;YACpD,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpD,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC/C;QACD,OAAO,GAAG;IACZ,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;gFAjHQ,gBAAgB;gGAAhB,gBAAgB;QCN7B,oEAA0B;;;;;;;;;;;;;;ACF1B;AAAA;AAAA;AAAA;AAAA;AAAuD;AAER;AAIG;AAGnC,MAAM,SAAU,SAAQ,kEAAW;IAM9C,YAAY,SAAsB,EAAE,OAA2B,EAAE,KAAa,EAAE,OAAe,EAAE,OAAqB;QAClH,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAE7E,IAAI,KAAU,CAAC;QACf,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAElB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAChB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,YAAY,kEAAW,EAAE;oBAC1B,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;iBACjD;gBACD,MAAM,GAAC,IAAI,CAAC,OAAO;aACtB;SAEJ;aAAM;YAEH,IAAI,IAAI,CAAC,OAAO,YAAY,kEAAW,EAAE;gBACrC,IAAI,IAAI,CAAC,OAAO,YAAY,6DAAQ,EAAE;oBAClC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAC1D,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBACvC,IAAI,MAAM,IAAI,IAAI,EAAE;wBAChB,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE;wBAC1B,OAAO,MAAM;qBAChB;iBACJ;qBAAM;oBACH,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBAE7D;aACJ;iBAAM;gBACH,MAAM,GAAG,IAAI,CAAC,OAAO;aACxB;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;SAGtB;QACD,OAAO,MAAM,CAAC;IAGlB,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAKJ;;;;;;;;;;;;;AC1ED;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAIO;AAEnC,MAAM,aAAc,SAAQ,kEAAW;IAOpD,YAAY,aAAqB,EAAE,IAAY,EAAE,OAAe;QAC9D,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;IACnD,CAAC;IATD,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAQM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC/E,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAChE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,GAAG,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CAGF;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAiF;AACK;AAMvE,MAAM,KAAM,SAAQ,mGAAW;IAG1C,YAAY,SAAsB,EAAE,KAAa,EAAE,OAAe;QAC9D,KAAK,CAAC,IAAI,uFAAI,CAAC,wFAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAE/B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QACtE,IAAI,IAAI,CAAC,SAAS,YAAY,mGAAW,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC9D,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACrC,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,eAAe,GAAG,KAAK,CAAC,CAAC;YAC5D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAChD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,UAAU,GAAG,CAAC,CAAC;YAC5C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,UAAU,GAAG,CAAC,CAAC;YAC5C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACxC,OAAO,GAAG,CAAC;SACd;IACL,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ,CAAC,KAAY,EAAE,KAAa;QAChC,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY;QACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QACxD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,CAAC;QACtD,IAAI,IAAI,GAAW,KAAK,GAAG,EAAE,CAAC;QAC9B,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,QAAQ,MAAM,EAAE;gBACZ,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,QAAQ,IAAI,IAAI,EAAE;wBAAE,MAAM,GAAG,CAAC,CAAC;wBAAC,SAAS;qBAAE;oBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,QAAQ,EAAE,CAAC,CAAC;oBACjE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,MAAM;iBACT;gBACD,KAAK,CAAC;oBACF;wBACI,IAAI,KAAK,GAAG,CAAC,CAAC;wBACd,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BAC/B,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BACrC,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACpC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACnC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,CAAC,CAAC;yBAAE;6BACnC;4BACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;4BACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;4BACxC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACvD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;yBAC3C;wBACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;wBACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;wBAC1C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBACxC,MAAM,GAAG,CAAC,CAAC;wBACX,MAAM;qBACT;aACR;SAEJ;QACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACzE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,UAAU,QAAQ,SAAS,GAAG,CAAC,CAAC;QAEpE,OAAO,KAAK,UAAU,EAAE;IAC5B,CAAC;CAEJ;;;;;;;;;;;;;ACrGD;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAGO;AAGnC,MAAM,iBAAkB,SAAQ,kEAAW;IAGtD,YAAY,MAAc,EAAC,SAAqB,EAAE,IAAY,EAAE,OAAe;QAC3E,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,MAAM;QACvB,IAAI,CAAC,SAAS,GAAC,SAAS;IAC5B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;IAE9C,CAAC;IACD,WAAW;QACP,IAAI,IAAI,GAAE,IAAI,0DAAO,CAAC,UAAU,CAAC,CAAC,CAAC,cAAc;QACjD,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAC;YACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAEpD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACN;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAc;AAEyC;AACZ;AACU;AAGH;AAEnC,MAAM,MAAO,SAAQ,kEAAW;IAK7C,YACE,QAAiB,EACjB,IAAY,EACZ,OAAe,EACf,KAAkB,EAClB,KAAmB;QAEnB,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC9B;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAEM,WAAW;;QAChB,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,KAAK,0CAAE,WAAW,GAAG,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,KAAK,0CAAE,WAAW,GAAG,CAAC;SAChD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB;;QACnD,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;QACpB,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACjD,IAAI,KAAK,YAAY,gEAAW;gBAAE,OAAO,KAAK,CAAC;SAChD;aAAM;YACL,GAAG,SAAG,IAAI,CAAC,KAAK,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC5C,IAAI,GAAG,YAAY,gEAAW;gBAAE,OAAO,GAAG,CAAC;YAC3C,GAAG,SAAG,IAAI,CAAC,KAAK,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC5C,IAAI,GAAG,YAAY,gEAAW;gBAAE,OAAO,GAAG,CAAC;SAC5C;QACD,oBAAoB;QACpB,QAAQ,IAAI,CAAC,OAAO,EAAE;YACpB,KAAK,OAAO,CAAC,GAAG;gBACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACnC,KAAK,OAAO,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACnC,KAAK,OAAO,CAAC,GAAG;gBACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEzC,OAAO,CAAC,KAAK,CAAC;SACjB;IACH,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,IAAY,OAIX;AAJD,WAAY,OAAO;IACjB,iCAAE;IACF,mCAAG;IACH,mCAAG;AACL,CAAC,EAJW,OAAO,KAAP,OAAO,QAIlB;;;;;;;;;;;;;AC5ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACY;AAC3B;AACZ;AAEQ;AAGD;AACF;AACV;AACZ;AAC1B,MAAM,MAAM,GAAG,mBAAO,CAAC,iFAAqE,CAAC;AAE9E,MAAM,UAAW,SAAQ,kEAAW;IAOjD,YAAY,MAAc,EAAE,SAAsB,EAAE,IAAY,EAAE,OAAe,EAAE,MAAe;QAEhG,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAHlD,cAAS,GAAW,EAAE,CAAC;QAIrB,IAAI,CAAC,KAAK,GAAG,MAAM;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM;QACpB,IAAI,CAAC,SAAS,GAAG,SAAS;IAC5B,CAAC;IACM,WAAW;QAChB,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc;QACrD,IAAI,UAAU,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,iCAAiC;YACjC,IAAI,WAAW,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAE1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAClD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAGD,sCAAsC;IACtC,mHAAmH;IAC5G,WAAW,CAAC,KAAY,EAAE,KAAoB;QACnD,yBAAyB;QACzB,OAAO;QACP,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAC3B,yBAAyB;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,OAAO,GAAiB,IAAI,6FAAa,EAAE,CAAC;YAChD,IAAI,MAAM,GAAG,EAAE;YACf,IAAI,KAAK,GAAG,EAAE;YAEd,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAc,EAAE;gBAC5C,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE;oBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAClC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;iBAC7B;qBAAM;oBACL,OAAO,kBAAkB;iBAC1B;aACF;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,+DAAU,EAAE;aAEhD;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,mDAAU,EAAC;gBAC9C,IAAG,IAAI,CAAC,eAAe,KAAG,GAAG,EAAC;oBAC5B,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;wBAChC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;qBACzB;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,OAAO;iBACf;qBAAI;oBACH,uDAAuD;oBACvD,IAAI,QAAQ,GAAC,KAAK,CAAC,aAAa;oBAChC,IAAG,QAAQ,IAAE,IAAI,EAAC;wBAEhB,KAAI,IAAI,CAAC,IAAI,QAAQ,CAAC,WAAW,EAAC;4BAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;4BACtC,KAAI,IAAI,CAAC,IAAI,MAAM,CAAC,kBAAkB,EAAC;gCACrC,IAAI,CAAC,CAAC,aAAa,KAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,OAAO,IAAE,QAAQ,EAAC;oCAC5D,OAAO,yCAAyC;iCACjD;6BACF;4BACD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;yBACvB;qBACF;yBAAI;wBACH,MAAM,GAAC,yCAAyC;qBACjD;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,OAAO;iBACf;aACF;iBAAK,IAAI,IAAI,CAAC,SAAS,YAAY,6CAAI,EAAE;gBACxC,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAChC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;iBACzB;gBACD,IAAI,MAAM,IAAI,EAAE,EAAE;oBAChB,OAAO,MAAM;iBACd;gBACD,OAAO,OAAO;aACf;iBAAM;gBACL,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAEhC,IAAI,GAAG,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE;wBAElD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;wBACnC,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,6FAAa,EAAE;4BAC3C,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gCACzC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;6BACzB;yBAEF;6BACI;4BACH,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;yBACvM;qBACF;yBAAM;wBACL,KAAK,GAAG,qBAAqB,CAAC;wBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpB;iBAEF;gBACD,IAAI,MAAM,IAAI,EAAE,EAAE;oBAChB,OAAO,MAAM;iBACd;qBAAM,IAAI,KAAK,IAAI,EAAE,EAAE;oBACtB,OAAO,KAAK;iBACb;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,OAAO;aAEf;SAEF;aAAM,EAAU,0FAA0F;YACzG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,aAAa;YACb,IAAI,OAAO,GAAG,IAAI,6FAAa,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,EAAE;YAEf,mDAAmD;YACnD,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAc,EAAE;gBAC5C,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE;oBAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;iBAC7B;gBACD,OAAO,IAAI,CAAC,eAAe;aAC5B;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,6CAAI,EAAE;aAC1C;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,mDAAU,EAAC;gBAC9C,IAAG,IAAI,CAAC,eAAe,KAAG,GAAG,EAAC;oBAC5B,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;wBAChC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;qBACzB;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,OAAO;iBACf;qBAAI;oBACH,uDAAuD;oBACvD,IAAI,QAAQ,GAAC,KAAK,CAAC,aAAa;oBAChC,IAAG,QAAQ,IAAE,IAAI,EAAC;wBAEhB,KAAI,IAAI,CAAC,IAAI,QAAQ,CAAC,WAAW,EAAC;4BAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;4BACtC,KAAI,IAAI,CAAC,IAAI,MAAM,CAAC,kBAAkB,EAAC;gCACrC,IAAI,CAAC,CAAC,aAAa,KAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,OAAO,IAAE,QAAQ,EAAC;oCAC5D,OAAO,yCAAyC;iCACjD;6BACF;4BACD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;yBACvB;qBACF;yBAAI;wBACH,MAAM,GAAC,yCAAyC;qBACjD;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,OAAO;iBACf;aACF;iBAAK;gBAEJ,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAChC,IAAI,GAAG,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE;wBAClD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;wBACnC,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,6FAAa,EAAE;4BAC3C,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gCACzC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;6BACzB;yBAEF;6BACI;4BACH,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;yBACvM;qBACF;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;oBAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;oBACpB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC;oBAC1B,OAAO,OAAO;iBACf;aACF;SACF;IAEH,CAAC;IACD,UAAU,CAAC,GAAY,EAAE,GAAW,EAAE,OAAsB;QAC1D,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAE;YACrC,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACzC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;gBACxB,IAAI,GAAG,YAAY,uFAAO,EAAE;oBAC1B,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;wBAC/B,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;4BAClC,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,IAAI;wBAC9B,CAAC,CAAC,CAAC;qBACJ;oBACD,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,6FAAa,EAAE;wBAC3C,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;qBACnC;iBACF;aACF;SACF;IACH,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAC3B,yBAAyB;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,OAAO,GAAG,IAAI,6FAAa,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,EAAE;YACf,IAAI,KAAK,GAAG,EAAE;YAEd,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAc,EAAE;gBAC5C,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE;oBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAClC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;iBAC7B;gBACD,OAAO,QAAQ;aAChB;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,+DAAU,EAAE;aAEhD;iBAAM;gBACL,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAChC,IAAI,GAAG,CAAC,gBAAgB,EAAE,IAAI,QAAQ,EAAE;wBACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;wBACnC,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,6FAAa,EAAE;4BAC3C,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gCACzC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;6BACzB;yBAEF;6BACI;4BACH,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;yBACvM;qBACF;yBAAM;wBACL,KAAK,GAAG,qBAAqB,CAAC;wBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpB;iBAEF;gBACD,IAAI,MAAM,IAAI,EAAE,EAAE;oBAChB,OAAO,MAAM;iBACd;qBAAM,IAAI,KAAK,IAAI,EAAE,EAAE;oBACtB,OAAO,KAAK;iBACb;gBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpB,OAAO,OAAO;aAEf;SAEF;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,aAAa;YACb,IAAI,OAAO,GAAG,IAAI,6FAAa,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,EAAE;YAEf,mDAAmD;YACnD,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAc,EAAE;gBAC5C,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE;oBAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;iBAC7B;gBACD,OAAO,QAAQ;aAChB;iBAAM;gBAEL,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE;oBAChC,IAAI,GAAG,CAAC,gBAAgB,EAAE,IAAI,QAAQ,EAAE;wBACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;wBACnC,IAAI,GAAG,CAAC,QAAQ,EAAE,YAAY,6FAAa,EAAE;4BAC3C,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gCACzC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;6BACzB;yBAEF;6BACI;4BACH,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;yBACvM;qBACF;oBACD,IAAI,MAAM,IAAI,EAAE,EAAE;wBAChB,OAAO,MAAM;qBACd;oBACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;oBAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;oBACpB,OAAO,OAAO;iBACf;aACF;SACF;IACH,CAAC;CAIF;;;;;;;;;;;;;ACpUD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AACxB;AAEhB;AAEN;AACjB;AAEjB,MAAM,UAAW,SAAQ,kEAAW;IAG/C,YAAY,QAAe,EAAE,UAAuB,EAAE,IAAY,EAAE,OAAe;QAC/E,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,GAAC,QAAQ;QAClB,IAAI,CAAC,SAAS,GAAE,UAAU;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,gCAAgC;QAChC,IAAI,QAAQ,GAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACvD,IAAG,IAAI,CAAC,IAAI,KAAG,KAAK,EAAC;YACjB,IAAG,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAC;gBACjC,OAAO,QAAQ,GAAC,QAAQ,CAAC,SAAS;aACrC;SACJ;aAAK,IAAG,IAAI,CAAC,IAAI,KAAG,QAAQ,EAAC;YAC1B,IAAG,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAC;gBACjC,OAAO,WAAW,GAAC,QAAQ,CAAC,SAAS;aACxC;SACJ;aAAK,IAAG,IAAI,CAAC,IAAI,KAAG,OAAO,EAAC;YACzB,IAAG,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAC;gBACjC,OAAO,UAAU,GAAC,QAAQ,CAAC,SAAS;aACvC;SACJ;aAAK,IAAG,IAAI,CAAC,IAAI,KAAG,MAAM,EAAC;YACxB,IAAG,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAC;gBACjC,OAAO,SAAS,GAAC,QAAQ,CAAC,SAAS;aACtC;SACJ;aAAI;YACD,sDAAsD;YACtD,4GAAY,CAAC,IAAI,CAAC,IAAI,+EAAW,CAAC,wBAAwB,EAAE,wCAAwC,EAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SACjI;IAEL,CAAC;CAEJ;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEN;AACjB;AAEjB,MAAM,UAAW,SAAQ,kEAAW;IAK/C,YAAY,UAAuB,EAAE,QAAgB,EAAE,UAAuB,EAAE,IAAY,EAAE,OAAe;QACzG,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAAC,UAAU,GAAG,UAAU;IAChC,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,gCAAgC;QAChC,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE;YAC5C,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;gBAC1E,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;oBACvB,yBAAyB;oBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAK;wBACF,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBAClM;iBACJ;qBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAC9B,yBAAyB;oBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAK;wBACF,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBAClM;iBACJ;qBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAC9B,yBAAyB;oBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAK;wBACF,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBAClM;iBACJ;qBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;oBAC9B,yBAAyB;oBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;oBAAC,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBAC9B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;wBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBACvL;yBAAK;wBACF,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;qBAClM;iBAEJ;aACJ;iBAAM;gBACH,uFAAuF;gBACvF,IAAI,WAAW,CAAC,SAAS,IAAI,IAAI,IAAI,WAAW,CAAC,SAAS,IAAI,IAAI,EAAE;oBAChE,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;wBACvB,yBAAyB;wBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBAC7K;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;qBACJ;yBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAC9B,yBAAyB;wBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;qBACJ;yBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAC9B,yBAAyB;wBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM;yBAEN;qBACJ;yBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAC9B,yBAAyB;wBACzB,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC5B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;wBAAC,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC9B,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;6BAAM,IAAI,WAAW,CAAC,SAAS,IAAI,CAAC,EAAE;4BACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvL;qBAEJ;iBACJ;qBAAM;oBACH,wDAAwD;oBACxD,6JAA6J;oBAC7J,4BAA4B;oBAC5B,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;wBACjC,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;4BACpC,IAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACxG,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACrK;6BAAM;4BACH,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBAC1I;qBACJ;yBAAM,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;wBACxC,IAAI,IAAI,CAAC,UAAU,YAAY,gDAAO,EAAE;4BACpC,IAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACxG,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACrK;6BAAM;4BACH,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,IAAI,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACzG,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBAC1I;qBACJ;iBACJ;aACJ;SACJ;IACL,CAAC;CAEJ;;;;;;;;;;;;ACpJD,oFAAsC;AACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuEE;AACF,IAAI,QAAQ,GAAG,CAAC;IAChB,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,KAAI,CAAC,GAAC,CAAC,IAAE,EAAE,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC;QAAC,CAAC,QAAO,CAAC,GAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;IACxM,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,SAAS,KAAK,KAAM,CAAC;QAC1C,EAAE,EAAE,EAAE;QACN,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,aAAa,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,SAAS,EAAC,CAAC,EAAC,kBAAkB,EAAC,CAAC,EAAC,eAAe,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,SAAS,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC;QACrT,UAAU,EAAE,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,kBAAkB,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC;QACltH,aAAa,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY;YACzH,mBAAmB;YAEnB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvB,QAAQ,OAAO,EAAE;gBACjB,KAAK,CAAC;oBACL,OAAO,8BAA8B,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBAChD,MAAM;gBACN,KAAK,CAAC;oBAGU,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,8BAA8B,GAAE,oBAAoB,GAAC,KAAK;oBAExF,MAAM;gBACN,KAAK,CAAC;oBAGU,IAAI,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,+BAA+B;oBAE7D,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,mCAAmC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC;oBAE1E,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,0BAA0B,GAAC,EAAE,CAAC,EAAE,CAAC;oBAExD,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,iHAAiH,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,MAAM,GAAC,EAAE,CAAC,EAAE,CAAC;oBAE5K,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,iGAAiG,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAE,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,MAAM,GAAC,EAAE,CAAC,EAAE,CAAC;oBAE7J,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,oIAAoI,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,KAAK,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,KAAK;oBAE/M,MAAM;gBACN,KAAK,CAAC;oBAEU,IAAI,CAAC,CAAC,GAAC,2HAA2H,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,KAAK,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,KAAK;oBAEtM,MAAM;gBACN,KAAK,EAAE;oBAES,IAAI,CAAC,CAAC,GAAC,+CAA+C,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,OAAO;oBAErF,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,CAAC,GAAC,EAAE;oBACT,MAAM;gBACN,KAAK,EAAE;oBAES,IAAI,CAAC,CAAC,GAAC,6CAA6C,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,IAAI;oBAEzF,MAAM;gBACN,KAAK,EAAE;oBAES,IAAI,CAAC,CAAC,GAAC,gCAAgC,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,IAAI;oBAEnE,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAEA,IAAI,CAAC,CAAC,GAAC,gEAAgE,GAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,MAAM,GAAC,EAAE,CAAC,EAAE,CAAC,GAAC,MAAM;oBAErH,MAAM;aACL;QACD,CAAC;QACD,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;QACpqB,cAAc,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QACzB,UAAU,EAAE,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI;YACtC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB;iBAAM;gBACH,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,KAAK,CAAC;aACf;QACL,CAAC;QACD,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK;YACvB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YACxK,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;gBACnB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;oBAClD,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClC;aACJ;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;YACtC,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,WAAW,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,WAAW,EAAE;gBACpC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACrB;YACD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACnD,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,EAAE;gBACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;aAC5D;YACD,SAAS,QAAQ,CAAC,CAAC;gBACf,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,CAAC;YACD,YAAY,EACR,IAAI,GAAG,GAAG;gBACN,IAAI,KAAK,CAAC;gBACV,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;gBAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBACzC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACN,IAAI,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACxF,OAAO,IAAI,EAAE;gBACT,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC5B,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBACvC;qBAAM;oBACH,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;wBACjD,MAAM,GAAG,GAAG,EAAE,CAAC;qBAClB;oBACD,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACW,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACvE,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,QAAQ,GAAG,EAAE,CAAC;oBACd,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;wBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;4BAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;yBACnD;qBACJ;oBACD,IAAI,KAAK,CAAC,YAAY,EAAE;wBACpB,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC;qBACpL;yBAAM;wBACH,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;qBAC7J;oBACD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACpB,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM;wBACxC,IAAI,EAAE,KAAK,CAAC,QAAQ;wBACpB,GAAG,EAAE,KAAK;wBACV,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC;iBACN;gBACL,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,IAAI,KAAK,CAAC,mDAAmD,GAAG,KAAK,GAAG,WAAW,GAAG,MAAM,CAAC,CAAC;iBACvG;gBACD,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;oBACnB,KAAK,CAAC;wBACF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,GAAG,IAAI,CAAC;wBACd,IAAI,CAAC,cAAc,EAAE;4BACjB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;4BAC1B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;4BACrB,IAAI,UAAU,GAAG,CAAC,EAAE;gCAChB,UAAU,EAAE,CAAC;6BAChB;yBACJ;6BAAM;4BACH,MAAM,GAAG,cAAc,CAAC;4BACxB,cAAc,GAAG,IAAI,CAAC;yBACzB;wBACD,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;wBACtC,KAAK,CAAC,EAAE,GAAG;4BACP,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;4BACzD,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;4BAC9C,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC7D,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW;yBACrD,CAAC;wBACF,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG;gCACb,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;6BACrC,CAAC;yBACL;wBACD,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE;4BAChC,MAAM;4BACN,MAAM;4BACN,QAAQ;4BACR,WAAW,CAAC,EAAE;4BACd,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM;4BACN,MAAM;yBACT,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC1B,OAAO,CAAC,CAAC;yBACZ;wBACD,IAAI,GAAG,EAAE;4BACL,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;4BACrC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;yBACtC;wBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrB,MAAM;oBACV,KAAK,CAAC;wBACF,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,EAAC,CAAC;IAKC,IAAI,OAAO,GAAG,EAAE;IAChB,IAAI,QAAQ,GAAG,EAAE;IACrB,kCAAkC;IAClC,IAAI,KAAK,GAAG,CAAC;QACb,IAAI,KAAK,GAAG,CAAC;YAEb,GAAG,EAAC,CAAC;YAEL,UAAU,EAAC,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI;gBAChC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;YACL,CAAC;YAEL,mCAAmC;YACnC,QAAQ,EAAC,UAAU,KAAK,EAAE,EAAE;gBACpB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC7C,IAAI,CAAC,cAAc,GAAG,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,CAAC;oBACf,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,CAAC;iBACjB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,+CAA+C;YAC/C,KAAK,EAAC;gBACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBACnB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBACxC,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC1B;gBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,OAAO,EAAE,CAAC;YACd,CAAC;YAEL,iDAAiD;YACjD,KAAK,EAAC,UAAU,EAAE;gBACV,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAC9D,qBAAqB;gBACrB,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;gBACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE/D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBACrC;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBAE1B,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAClC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;oBACtC,WAAW,EAAE,KAAK,CAAC,CAAC;wBAChB,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;8BAC9D,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG;iBACnC,CAAC;gBAEF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,6EAA6E;YAC7E,IAAI,EAAC;gBACG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,kJAAkJ;YAClJ,MAAM,EAAC;gBACC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,kIAAkI,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBAC9N,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBAEN;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,yCAAyC;YACzC,IAAI,EAAC,UAAU,CAAC;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;YAEL,0DAA0D;YAC1D,SAAS,EAAC;gBACF,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3E,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAC,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC/E,CAAC;YAEL,mDAAmD;YACnD,aAAa,EAAC;gBACN,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;oBAClB,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACpF,CAAC;YAEL,2FAA2F;YAC3F,YAAY,EAAC;gBACL,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5C,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;YACvD,CAAC;YAEL,8EAA8E;YAC9E,UAAU,EAAC,UAAS,KAAK,EAAE,YAAY;gBAC/B,IAAI,KAAK,EACL,KAAK,EACL,MAAM,CAAC;gBAEX,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,eAAe;oBACf,MAAM,GAAG;wBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE;4BACJ,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;4BAClC,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;4BACtC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;yBACvC;wBACD,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB,CAAC;oBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBACpD;iBACJ;gBAED,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBACjC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;oBACrC,WAAW,EAAE,KAAK,CAAC,CAAC;wBACP,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;iBACzD,CAAC;gBACF,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjE;gBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC;iBAChB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,kBAAkB;oBAClB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;wBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACvB;oBACD,OAAO,KAAK,CAAC,CAAC,+EAA+E;iBAChG;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;YAEL,6BAA6B;YAC7B,IAAI,EAAC;gBACG,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,IAAI,KAAK,EACL,KAAK,EACL,SAAS,EACT,KAAK,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,SAAS,IAAI,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;wBAChE,KAAK,GAAG,SAAS,CAAC;wBAClB,KAAK,GAAG,CAAC,CAAC;wBACV,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;4BAC9B,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;gCACjB,OAAO,KAAK,CAAC;6BAChB;iCAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gCACxB,KAAK,GAAG,KAAK,CAAC;gCACd,SAAS,CAAC,wDAAwD;6BACrE;iCAAM;gCACH,8FAA8F;gCAC9F,OAAO,KAAK,CAAC;6BAChB;yBACJ;6BAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;4BAC3B,MAAM;yBACT;qBACJ;iBACJ;gBACD,IAAI,KAAK,EAAE;oBACP,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;wBACjB,OAAO,KAAK,CAAC;qBAChB;oBACD,8FAA8F;oBAC9F,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;oBACpB,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,wBAAwB,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBACpH,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBACN;YACL,CAAC;YAEL,qCAAqC;YACrC,GAAG,EAAC,SAAS,GAAG;gBACR,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE;oBACH,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;iBACrB;YACL,CAAC;YAEL,wGAAwG;YACxG,KAAK,EAAC,SAAS,KAAK,CAAE,SAAS;gBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,CAAC;YAEL,0EAA0E;YAC1E,QAAQ,EAAC,SAAS,QAAQ;gBAClB,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;iBACpC;qBAAM;oBACH,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;YACL,CAAC;YAEL,4FAA4F;YAC5F,aAAa,EAAC,SAAS,aAAa;gBAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBACnF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBACrF;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;iBAC3C;YACL,CAAC;YAEL,oJAAoJ;YACpJ,QAAQ,EAAC,SAAS,QAAQ,CAAE,CAAC;gBACrB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,EAAE;oBACR,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACH,OAAO,SAAS,CAAC;iBACpB;YACL,CAAC;YAEL,6BAA6B;YAC7B,SAAS,EAAC,SAAS,SAAS,CAAE,SAAS;gBAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1B,CAAC;YAEL,qDAAqD;YACrD,cAAc,EAAC,SAAS,cAAc;gBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACtC,CAAC;YACL,OAAO,EAAE,EAAC,kBAAkB,EAAC,IAAI,EAAC;YAClC,aAAa,EAAE,SAAS,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,yBAAyB,EAAC,QAAQ;gBAC3E,IAAI,OAAO,GAAC,QAAQ,CAAC;gBACrB,QAAO,yBAAyB,EAAE;oBAClC,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;wBACtE,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;wBAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAC7D,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAC,GAAG,CAAC,MAAM,GAAC,KAAK,CAAC,CAAC;wBAAC,OAAO,EAAE;wBAC/E,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAAC,OAAO,EAAE;wBACtC,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAA,IAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,IAAI,EAAE;4BAAG,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAA,IAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,IAAI,EAAE;4BAAE,OAAO,CAAC,CAAC;wBAC/J,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAE,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAC,OAAO,CAAC,CAAC;wBACvF,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAE,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAC,OAAO,CAAC,CAAC;wBACvF,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;wBAC9B,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjE,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjE,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;wBACpC,MAAM;iBACL;YACD,CAAC;YACD,KAAK,EAAE,CAAC,cAAc,EAAC,YAAY,EAAC,gBAAgB,EAAC,UAAU,EAAC,WAAW,EAAC,iBAAiB,EAAC,SAAS,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,+BAA+B,EAAC,SAAS,EAAC,gBAAgB,EAAC,WAAW,EAAC,WAAW,EAAC,SAAS,CAAC;YACrV,UAAU,EAAE,EAAC,YAAY,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,WAAW,EAAC,KAAK,EAAC,EAAC,KAAK,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC;SACxU,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACb,CAAC,CAAC,EAAE,CAAC;IACL,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,SAAS,MAAM;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;IAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACjD,OAAO,IAAI,MAAM,CAAC;AAClB,CAAC,CAAC,EAAE,CAAC;AAGL,IAAI,IAAgE,EAAE;IACtE,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IACjC,OAAO,CAAC,KAAK,GAAG,cAAc,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,OAAO,CAAC,IAAI,GAAG,SAAS,YAAY,CAAE,IAAI;QACtC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,OAAO,CAAC,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;QACD,IAAI,MAAM,GAAG,mBAAO,CAAC,WAAI,CAAC,CAAC,YAAY,CAAC,mBAAO,CAAC,aAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpF,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,IAAI,KAA6B,IAAI,4CAAY,KAAK,MAAM,EAAE;QAC5D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;CACA;;;;;;;;;;;;;;AC9sBD;AAAA;AAAA;AAA2E;AAM5D,MAAM,KAAK;IA6FxB,YAAY,aAAiC;QAlBrC,YAAO,GAAW,EAAE,CAAC;QAmB3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,8EAAa,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAe,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAgB,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,EAAE;QACb,IAAI,CAAC,CAAC,GAAG,CAAC;QACV,wBAAwB;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAU,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,KAAK,EAAU,CAAC;QAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACxD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,qBAAqB;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,mCAAmC;QACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,kBAAkB;QAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAClE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,iBAAiB;QACvE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;QAC9D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,gBAAgB;QAChB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACxD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAClE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,UAAU;QAChE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAE,GAAG;QAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG;QAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAElC,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,yBAAwB;QAC5D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,yBAAwB;QAC5E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,iBAAiB;QACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,kBAAkB;QAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,SAAS;QACT,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,cAAc;QACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAS;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,aAAa;QACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAS;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,kBAAkB;QAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;QACzF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC9F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC9F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,gBAAe;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,WAAU;QAC9D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,WAAU;QAC9D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,oCAAoC;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAU,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAQ,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,IAAG;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAG;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAtcM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW,CAAC,QAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAGM,UAAU,CAAC,aAAqB;QACrC,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IAAI,QAAQ,CAAC,gBAAgB,EAAE,IAAI,aAAa,EAAE;gBAChD,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;aACtC;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,eAAe,CAAC,aAAqB,EAAE,KAAa,EAAE,OAAe;QAC1E,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,IAAI,aAAa,EAAE;gBAC3D,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC7B,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzB,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC3B,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAEnC,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAGM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAyB;QAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAIM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,gBAAgB,CAAC,KAAyB;QAC/C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,UAAU,CAAC,KAAa;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACM,gBAAgB,CAAC,QAAgB;QACtC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,CAAC;IAChD,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACM,cAAc,CAAC,KAAoB;QACxC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IA+XD,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC1B,CAAC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC1B,CAAC;IACD,YAAY,CAAC,QAAgB;QAC3B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK;IACxB,CAAC;IACD,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK;IACzB,CAAC;CACF;;;;;;;;;;;;;AClfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAc;AAEyC;AACZ;AACU;AAEH;AAGhB;AACI;AAGvB,MAAM,MAAO,SAAQ,kEAAW;IAK7C,YACE,QAAiB,EACjB,IAAY,EACZ,OAAe,EACf,KAAkB,EAClB,KAAmB;QAEnB,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC9B;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAEM,UAAU;;QACf,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,KAAK,0CAAE,UAAU,GAAG,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,KAAK,0CAAE,UAAU,GAAG,CAAC;SAC/C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;;QAC/E,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;QACpB,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YAC1D,IAAI,KAAK,YAAY,gEAAW;gBAAE,OAAO,KAAK,CAAC;SAChD;aAAM;YACL,GAAG,SAAG,IAAI,CAAC,KAAK,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YACrD,IAAG,IAAI,CAAC,KAAK,YAAY,mDAAU,EAAC;gBAClC,IAAI,KAAK;gBACT,IAAI,KAAK;gBACT,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1C,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1C,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;oBACxB,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;wBACxB,IAAI,cAAc,GAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;wBAC5C,GAAG,GAAE,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAC,GAAG,CAAC,QAAQ,EAAC,GAAG,CAAC,UAAU,CAAC;qBACxE;iBACF;gBACD,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;oBACxB,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;wBACxB,IAAI,cAAc,GAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;wBAC5C,GAAG,GAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAC,GAAG,CAAC,QAAQ,EAAC,cAAc,CAAE;qBACzE;iBACF;aACF;YACD,IAAI,GAAG,YAAY,gEAAW,EAAC;gBAC7B,OAAO,GAAG,CAAC;aACZ;iBAAM,IAAI,IAAI,CAAC,KAAK,YAAY,iDAAQ,EAAE;gBACzC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE;iBACzB;aAEF;YACD,IAAI,aAAa;YACjB,IAAI;gBACF,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;aAC7C;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI;oBACF,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC;oBAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,OAAO,CAAC;iBAC9C;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;iBAC7C;aACF;YACD,GAAG,SAAG,IAAI,CAAC,KAAK,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YACrD,IAAG,IAAI,CAAC,KAAK,YAAY,mDAAU,EAAC;gBAClC,IAAI,KAAK;gBACT,IAAI,KAAK;gBACT,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1C,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1C,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;oBACxB,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;wBACxB,IAAI,SAAS,GAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;wBACvC,GAAG,GAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAC,GAAG,CAAC,QAAQ,EAAC,GAAG,CAAC,UAAU,CAAE;qBACpE;iBACF;gBACD,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;oBACxB,IAAG,KAAK,IAAE,uDAAQ,CAAC,MAAM,EAAC;wBACxB,IAAI,SAAS,GAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;wBACvC,GAAG,GAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAC,GAAG,CAAC,QAAQ,EAAC,SAAS,CAAE;qBACpE;iBACF;aACF;YACD,IAAI,GAAG,YAAY,gEAAW,EAAE;gBAC9B,OAAO,GAAG,CAAC;aACZ;iBAAK,IAAI,IAAI,CAAC,KAAK,YAAY,iDAAQ,EAAE;gBACxC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE;iBACzB;aAEF;YACD,IAAI,cAAc;YAClB,IAAI;gBACF,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;aAC7C;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI;oBACF,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC;oBAChC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,OAAO,CAAC;iBAC9C;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;iBAC7C;aACF;SACF;QACD,oBAAoB;QACpB,QAAQ,IAAI,CAAC,OAAO,EAAE;YACpB,KAAK,OAAO,CAAC,GAAG;gBACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACnC,KAAK,OAAO,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACnC,KAAK,OAAO,CAAC,GAAG;gBACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEzC,OAAO,CAAC,KAAK,CAAC;SACjB;IACH,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,iBAAiB,CAAC,KAAU,EAAE,QAAgB,EAAE,KAAU;QACxD,QAAQ,QAAQ,EAAE;YAChB,KAAK,IAAI;gBACP,OAAO,KAAK,IAAI,KAAK,CAAC;YACxB,KAAK,IAAI;gBACP,OAAO,KAAK,IAAI,KAAK,CAAC;YACxB,KAAK,GAAG;gBACN,OAAO,KAAK,GAAG,KAAK,CAAC;YACvB,KAAK,IAAI;gBACP,OAAO,KAAK,IAAI,KAAK,CAAC;YACxB,KAAK,GAAG;gBACN,OAAO,KAAK,GAAG,KAAK,CAAC;YACvB,KAAK,IAAI;gBACP,OAAO,KAAK,IAAI,KAAK,CAAC;YACxB;gBACE,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;CACF;AAED,IAAY,OAIX;AAJD,WAAY,OAAO;IACjB,iCAAE;IACF,mCAAG;IACH,mCAAG;AACL,CAAC,EAJW,OAAO,KAAP,OAAO,QAIlB;;;;;;;;;;;;;AC/KD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAa;AAE0C;AACZ;AACU;AAGH;AAEnC,MAAM,UAAW,SAAQ,kEAAW;IAIjD,YACE,QAAsB,EACtB,IAAY,EACZ,OAAe,EACf,KAAkB,EAClB,KAAkB;QAElB,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB;QACnD,IAAI,GAAG,EAAE,GAAG,CAAC;QACb,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,GAAG,YAAY,gEAAW;YAAE,OAAO,GAAG,CAAC;QAC3C,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,GAAG,YAAY,gEAAW;YAAE,OAAO,GAAG,CAAC;QAC3C,IACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM,EAChD;YACA,OAAO,IAAI,gEAAW,CACpB,iBAAiB,EACjB,yEAAyE,EACzE,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,uDAAQ,CAAC,MAAM,EAChD;YACA,OAAO,IAAI,gEAAW,CACpB,iBAAiB,EACjB,yEAAyE,EACzE,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,QAAQ,CAAC,CAAC;YACzC,QAAQ,IAAI,CAAC,QAAQ,EAAE;gBACrB,KAAK,YAAY,CAAC,KAAK;oBACrB,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,SAAS;oBACzB,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,KAAK;oBACrB,OAAO,GAAG,GAAG,GAAG,CAAC;gBACnB,KAAK,YAAY,CAAC,UAAU;oBAC1B,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB,KAAK,YAAY,CAAC,KAAK;oBACrB,OAAO,GAAG,GAAG,GAAG,CAAC;gBACnB,KAAK,YAAY,CAAC,UAAU;oBAC1B,OAAO,GAAG,IAAI,GAAG,CAAC;gBACpB;oBACE,OAAO,MAAM,CAAC;aACjB;SACF;IACH,CAAC;IACD,YAAY,CAAC,QAAqB,EAAE,KAAY,EAAE,KAAoB;QACpE,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/C,QAAQ,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;YACnC,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzB,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;YAC3B,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;gBACpB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,GAAG,CAAC;YACb,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC;gBACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAC7B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvB,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,EAAE,GAAG,KAAK,CAAC;SACrB;IACH,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,IAAY,YAQX;AARD,WAAY,YAAY;IACtB,iDAAK;IACL,yDAAS;IACT,iDAAK;IACL,iDAAK;IACL,2DAAU;IACV,2DAAU;IACV,qDAAO;AACT,CAAC,EARW,YAAY,KAAZ,YAAY,QAQvB;;;;;;;;;;;;;;;;;;;;;ACxGM,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,mFAA6B;QAEvB,6EAA6B;QACzB,kFAA6C;QACjD,4DAAW;QACX,6EAA6B;QAC7B,kFAA6C;QAC7C,4DAAW;QACX,6EAA6B;QAC7B,kFAA6C;QAC7C,4DAAW;QACb,4DAAgB;;;;;;;;;;;;;;ACTpB;AAAA;AAAe,MAAM,OAAO;IAY1B,YAAY,IAAU,EAAE,aAAqB,EAAE,KAAa,EAAE,OAAe,EAAE,MAAa,EAAE,KAAW,EAAC,SAAkB;QATpH,aAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAU3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAE,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;IACrB,CAAC;IACD,mBAAmB;IACZ,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACM,OAAO,CAAC,KAAW;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IACM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,gBAAgB,CAAC,KAAa;QACnC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,QAAQ,CAAC,KAAU;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,eAAe,CAAC,IAAY,EAAE,IAAY,EAAC,KAAY,EAAE,OAAc,EAAE,GAAU;QACxF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;IACvB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW,CAAC,QAA6B;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAE3B,CAAC;IACM,gBAAgB;QACrB,OAAO,IAAI,CAAC,KAAK;IACnB,CAAC;IACM,kBAAkB;QACvB,OAAO,IAAI,CAAC,OAAO;IACrB,CAAC;IACM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU;IACxB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAGM,WAAW,CAAC,QAAe;QAChC,IAAI,CAAC,WAAW,GAAC,QAAQ;IAC3B,CAAC;IACM,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW;IACzB,CAAC;IACM,cAAc;QACnB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,MAAM;QACzB,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;IACM,kBAAkB,CAAC,GAAW;QACnC,IAAI,CAAC,QAAQ,GAAE,GAAG;IACpB,CAAC;IACM,iBAAiB;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;CACF;;;;;;;;;;;;ACrGD,oFAAsC;AACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuEE;AACF,IAAI,sBAAsB,GAAG,CAAC;IAC9B,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,KAAI,CAAC,GAAC,CAAC,IAAE,EAAE,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC;QAAC,CAAC,QAAO,CAAC,GAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,GAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACzM,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,SAAS,KAAK,KAAM,CAAC;QAC1C,EAAE,EAAE,EAAE;QACN,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,aAAa,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,SAAS,EAAC,CAAC,EAAC,kBAAkB,EAAC,CAAC,EAAC,eAAe,EAAC,EAAE,EAAC,aAAa,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,SAAS,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC;QACpS,UAAU,EAAE,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,kBAAkB,EAAC,EAAE,EAAC,eAAe,EAAC,EAAE,EAAC,kBAAkB,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAC;QACjM,YAAY,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAChH,aAAa,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY;YACzH,mBAAmB;YAEnB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvB,QAAQ,OAAO,EAAE;gBACjB,KAAK,CAAC;oBACJ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBAAC,OAAO,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;oBACzC,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;oBACb,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;oBACjB,MAAM;gBACN,KAAK,CAAC;oBACL,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;oBACxC,MAAM;gBACN,KAAK,CAAC;oBACL,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACnB,MAAM;gBACN,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;oBACd,IAAI,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACrG,MAAM;gBACN,KAAK,CAAC;oBACN,IAAI,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACvG,MAAM;gBACN,KAAK,EAAE;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACvG,MAAM;gBACN,KAAK,EAAE;oBACP,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;oBAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;oBACvC,MAAM;gBACN,KAAK,EAAE;oBACL,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACN,KAAK,EAAE,CAAC;gBAAC,KAAK,EAAE;oBAChB,IAAI,CAAC,CAAC,GAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,UAAU,EAAC,EAAE,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBACvF,MAAM;aACL;QACD,CAAC;QACD,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;QAC3mB,cAAc,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QACzB,UAAU,EAAE,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI;YACtC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB;iBAAM;gBACH,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,KAAK,CAAC;aACf;QACL,CAAC;QACD,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK;YACvB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YACxK,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE;gBACnB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;oBAClD,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClC;aACJ;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;YACtC,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,WAAW,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,WAAW,EAAE;gBACpC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACrB;YACD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACnD,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,EAAE;gBACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;aAC5D;YACD,SAAS,QAAQ,CAAC,CAAC;gBACf,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,CAAC;YACD,YAAY,EACR,IAAI,GAAG,GAAG;gBACN,IAAI,KAAK,CAAC;gBACV,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;gBAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBACzC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACN,IAAI,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACxF,OAAO,IAAI,EAAE;gBACT,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC5B,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBACvC;qBAAM;oBACH,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;wBACjD,MAAM,GAAG,GAAG,EAAE,CAAC;qBAClB;oBACD,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACW,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACvE,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,QAAQ,GAAG,EAAE,CAAC;oBACd,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;wBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE;4BAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;yBACnD;qBACJ;oBACD,IAAI,KAAK,CAAC,YAAY,EAAE;wBACpB,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC;qBACpL;yBAAM;wBACH,MAAM,GAAG,sBAAsB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;qBAC7J;oBACD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACpB,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM;wBACxC,IAAI,EAAE,KAAK,CAAC,QAAQ;wBACpB,GAAG,EAAE,KAAK;wBACV,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC;iBACN;gBACL,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,IAAI,KAAK,CAAC,mDAAmD,GAAG,KAAK,GAAG,WAAW,GAAG,MAAM,CAAC,CAAC;iBACvG;gBACD,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;oBACnB,KAAK,CAAC;wBACF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,GAAG,IAAI,CAAC;wBACd,IAAI,CAAC,cAAc,EAAE;4BACjB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;4BACtB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;4BAC1B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;4BACrB,IAAI,UAAU,GAAG,CAAC,EAAE;gCAChB,UAAU,EAAE,CAAC;6BAChB;yBACJ;6BAAM;4BACH,MAAM,GAAG,cAAc,CAAC;4BACxB,cAAc,GAAG,IAAI,CAAC;yBACzB;wBACD,MAAM;oBACV,KAAK,CAAC;wBACF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;wBACtC,KAAK,CAAC,EAAE,GAAG;4BACP,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;4BACzD,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;4BAC9C,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC7D,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW;yBACrD,CAAC;wBACF,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG;gCACb,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;6BACrC,CAAC;yBACL;wBACD,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE;4BAChC,MAAM;4BACN,MAAM;4BACN,QAAQ;4BACR,WAAW,CAAC,EAAE;4BACd,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM;4BACN,MAAM;yBACT,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;4BAC1B,OAAO,CAAC,CAAC;yBACZ;wBACD,IAAI,GAAG,EAAE;4BACL,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;4BACrC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;yBACtC;wBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrB,MAAM;oBACV,KAAK,CAAC;wBACF,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,EAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,mBAAO,CAAC,oCAAwB,CAAC,CAAC;IACnD,MAAM,IAAI,GAAE,mBAAO,CAAC,6BAAiB,CAAC,CAAC;IACvC,MAAM,MAAM,GAAE,mBAAO,CAAC,kCAAsB,CAAC,CAAC;IAC9C,MAAM,QAAQ,GAAE,mBAAO,CAAC,mCAAuB,CAAC;IAChD,MAAM,YAAY,GAAE,mBAAO,CAAC,uCAA2B,CAAC;IACxD,MAAM,MAAM,GAAG,mBAAO,CAAC,8EAAkE,CAAC;IAGtF,IAAI,OAAO,GAAG,EAAE;IAChB,IAAI,QAAQ,GAAG,EAAE;IACrB,kCAAkC;IAClC,IAAI,KAAK,GAAG,CAAC;QACb,IAAI,KAAK,GAAG,CAAC;YAEb,GAAG,EAAC,CAAC;YAEL,UAAU,EAAC,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI;gBAChC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;YACL,CAAC;YAEL,mCAAmC;YACnC,QAAQ,EAAC,UAAU,KAAK,EAAE,EAAE;gBACpB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC7C,IAAI,CAAC,cAAc,GAAG,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,CAAC;oBACf,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,CAAC;iBACjB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,+CAA+C;YAC/C,KAAK,EAAC;gBACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBACnB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBACxC,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC1B;gBAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,OAAO,EAAE,CAAC;YACd,CAAC;YAEL,iDAAiD;YACjD,KAAK,EAAC,UAAU,EAAE;gBACV,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAC9D,qBAAqB;gBACrB,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;gBACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE/D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBACrC;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBAE1B,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAClC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;oBACtC,WAAW,EAAE,KAAK,CAAC,CAAC;wBAChB,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;8BAC9D,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG;iBACnC,CAAC;gBAEF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,6EAA6E;YAC7E,IAAI,EAAC;gBACG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,kJAAkJ;YAClJ,MAAM,EAAC;gBACC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,kIAAkI,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBAC9N,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBAEN;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAEL,yCAAyC;YACzC,IAAI,EAAC,UAAU,CAAC;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;YAEL,0DAA0D;YAC1D,SAAS,EAAC;gBACF,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3E,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,EAAC,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC/E,CAAC;YAEL,mDAAmD;YACnD,aAAa,EAAC;gBACN,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;oBAClB,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjD;gBACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACpF,CAAC;YAEL,2FAA2F;YAC3F,YAAY,EAAC;gBACL,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5C,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;YACvD,CAAC;YAEL,8EAA8E;YAC9E,UAAU,EAAC,UAAS,KAAK,EAAE,YAAY;gBAC/B,IAAI,KAAK,EACL,KAAK,EACL,MAAM,CAAC;gBAEX,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;oBAC9B,eAAe;oBACf,MAAM,GAAG;wBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE;4BACJ,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;4BAClC,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;4BACtC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;yBACvC;wBACD,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;wBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB,CAAC;oBACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBACpD;iBACJ;gBAED,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,GAAG;oBACV,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBACjC,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC;oBAC5B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;oBACrC,WAAW,EAAE,KAAK,CAAC,CAAC;wBACP,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;iBACzD,CAAC;gBACF,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjE;gBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;gBACD,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC;iBAChB;qBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;oBACxB,kBAAkB;oBAClB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;wBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACvB;oBACD,OAAO,KAAK,CAAC,CAAC,+EAA+E;iBAChG;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;YAEL,6BAA6B;YAC7B,IAAI,EAAC;gBACG,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,IAAI,KAAK,EACL,KAAK,EACL,SAAS,EACT,KAAK,CAAC;gBACV,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,SAAS,IAAI,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;wBAChE,KAAK,GAAG,SAAS,CAAC;wBAClB,KAAK,GAAG,CAAC,CAAC;wBACV,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;4BAC9B,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;gCACjB,OAAO,KAAK,CAAC;6BAChB;iCAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gCACxB,KAAK,GAAG,KAAK,CAAC;gCACd,SAAS,CAAC,wDAAwD;6BACrE;iCAAM;gCACH,8FAA8F;gCAC9F,OAAO,KAAK,CAAC;6BAChB;yBACJ;6BAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;4BAC3B,MAAM;yBACT;qBACJ;iBACJ;gBACD,IAAI,KAAK,EAAE;oBACP,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7C,IAAI,KAAK,KAAK,KAAK,EAAE;wBACjB,OAAO,KAAK,CAAC;qBAChB;oBACD,8FAA8F;oBAC9F,OAAO,KAAK,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;oBACpB,OAAO,IAAI,CAAC,GAAG,CAAC;iBACnB;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,wBAAwB,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;wBACpH,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,IAAI,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBACN;YACL,CAAC;YAEL,qCAAqC;YACrC,GAAG,EAAC,SAAS,GAAG;gBACR,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE;oBACH,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;iBACrB;YACL,CAAC;YAEL,wGAAwG;YACxG,KAAK,EAAC,SAAS,KAAK,CAAE,SAAS;gBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,CAAC;YAEL,0EAA0E;YAC1E,QAAQ,EAAC,SAAS,QAAQ;gBAClB,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;iBACpC;qBAAM;oBACH,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;YACL,CAAC;YAEL,4FAA4F;YAC5F,aAAa,EAAC,SAAS,aAAa;gBAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBACnF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBACrF;qBAAM;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;iBAC3C;YACL,CAAC;YAEL,oJAAoJ;YACpJ,QAAQ,EAAC,SAAS,QAAQ,CAAE,CAAC;gBACrB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,EAAE;oBACR,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACH,OAAO,SAAS,CAAC;iBACpB;YACL,CAAC;YAEL,6BAA6B;YAC7B,SAAS,EAAC,SAAS,SAAS,CAAE,SAAS;gBAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1B,CAAC;YAEL,qDAAqD;YACrD,cAAc,EAAC,SAAS,cAAc;gBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACtC,CAAC;YACL,OAAO,EAAE,EAAC,kBAAkB,EAAC,IAAI,EAAC;YAClC,aAAa,EAAE,SAAS,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,yBAAyB,EAAC,QAAQ;gBAC3E,IAAI,OAAO,GAAC,QAAQ,CAAC;gBACrB,QAAO,yBAAyB,EAAE;oBAClC,KAAK,CAAC;wBACN,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAAC,OAAO,EAAE;wBACtC,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAA,IAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,IAAI,EAAE;4BAAG,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAA,IAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,IAAI,EAAE;4BAAE,OAAO,CAAC,CAAC;wBAC/J,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAE,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAC,OAAO,CAAC,CAAC;wBACvF,MAAM;oBACN,KAAK,CAAC;wBAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wBAAE,OAAO,EAAE,CAAC;wBAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;wBAAC,OAAO,GAAG,EAAE,CAAC;wBAAC,OAAO,CAAC,CAAC;wBACvF,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;wBAC7B,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,EAAE;wBAChB,MAAM;oBACN,KAAK,CAAC;wBAAC,OAAO,CAAC;wBACf,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE;wBACjB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjE,MAAM;oBACN,KAAK,EAAE;wBAAE,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;wBAAC,OAAO,EAAE,CAAC;wBACjE,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,EAAE,CAAC;wBAClB,MAAM;oBACN,KAAK,EAAE;wBAAC,OAAO,CAAC;wBAChB,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBACP,MAAM;oBACN,KAAK,EAAE;wBAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,8BAA8B,GAAC,GAAG,CAAC,MAAM,EAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;wBAAC,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAC,GAAG,CAAC,MAAM,GAAE,UAAU,GAAE,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBACxS,MAAM;iBACL;YACD,CAAC;YACD,KAAK,EAAE,CAAC,mCAAmC,EAAC,SAAS,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,yCAAyC,EAAC,SAAS,EAAC,gBAAgB,EAAC,WAAW,EAAC,WAAW,EAAC,SAAS,CAAC;YAC7S,UAAU,EAAE,EAAC,YAAY,EAAC,EAAC,OAAO,EAAC,EAAE,EAAC,WAAW,EAAC,KAAK,EAAC,EAAC,KAAK,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC,SAAS,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,EAAC;SAC9S,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACb,CAAC,CAAC,EAAE,CAAC;IACL,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,SAAS,MAAM;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;IAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACjD,OAAO,IAAI,MAAM,CAAC;AAClB,CAAC,CAAC,EAAE,CAAC;AAGL,IAAI,IAAgE,EAAE;IACtE,OAAO,CAAC,MAAM,GAAG,sBAAsB,CAAC;IACxC,OAAO,CAAC,MAAM,GAAG,sBAAsB,CAAC,MAAM,CAAC;IAC/C,OAAO,CAAC,KAAK,GAAG,cAAc,OAAO,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9G,OAAO,CAAC,IAAI,GAAG,SAAS,YAAY,CAAE,IAAI;QACtC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,OAAO,CAAC,CAAC;YACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;QACD,IAAI,MAAM,GAAG,mBAAO,CAAC,WAAI,CAAC,CAAC,YAAY,CAAC,mBAAO,CAAC,aAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpF,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,IAAI,KAA6B,IAAI,4CAAY,KAAK,MAAM,EAAE;QAC5D,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;CACA;;;;;;;;;;;;;;AClqBD;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEN;AACjB;AAEjB,MAAM,MAAO,SAAQ,kEAAW;IAG3C,YAAY,QAAe,EAAE,UAAuB,EAAE,IAAY,EAAE,OAAe;QAC/E,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAC,QAAQ;QACtB,IAAI,CAAC,SAAS,GAAE,UAAU;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,gCAAgC;QAChC,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3D,IAAI,WAAW,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAE;gBACnC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;aACpK;iBAAK;gBACF,IAAI,WAAW,CAAC,SAAS,IAAI,IAAI,EAAG;oBAChC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;iBACpK;qBAAI;oBACD,IAAI,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;wBACjC,IAAI,IAAI,CAAC,SAAS,YAAY,gDAAO,EAAE;4BACnC,IAAI,GAAG,GAAI,WAAW,CAAC,QAAQ,GAAE,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE;4BACnE,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;yBACvI;qBACJ;iBACJ;aACJ;SACJ;IACL,CAAC;CAEJ;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACN;AACd;AACoB;AACd;AACQ;AACN;AACF;AACS;AAED;AAClC,MAAM,UAAW,SAAQ,kEAAW;IAI/C,YAAY,OAAoB,EAAE,SAAsB,EAAE,IAAY,EAAE,OAAe;QACnF,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,OAAO;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,oDAAoD;QACpD,IAAI,GAAY;QAChB,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,IAAI,IAAI,CAAC,UAAU,YAAY,0DAAO,EAAE;gBACpC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBACjD,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrB,MAAM,IAAI,CAAC,CAAC,SAAS,GAAG,GAAG;aAE9B;iBAAM,IAAI,IAAI,CAAC,UAAU,YAAY,gEAAa,EAAE;gBACjD,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBACjD,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrB,MAAM,IAAI,CAAC,CAAC,SAAS,GAAG,GAAG;aAC9B;iBAAM;gBACH,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACpC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,GAAG;aAC7C;SACJ;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS,YAAY,6DAAU,EAAE;gBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,IAAI,CAAC,CAAC,WAAW,IAAI,MAAM,IAAI,CAAC,CAAC,WAAW,IAAI,MAAM,EAAE;oBACpD,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBACzF,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC3I,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBACtI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,EAAE;qBACZ;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBACzE;yBAAM;wBACH,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBACzE;iBACJ;qBAAM;oBACH,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBACzF,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC/K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBACpM,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAClE;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBACrM,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAClE;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC/J,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;qBAC7B;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAChK,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;qBAC7B;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAC9K,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBAC5C;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,wCAAwC,EAAE,UAAU,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;wBAChK,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;wBACxB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI;qBAC7B;yBAAM,IAAI,CAAC,CAAC,WAAW,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;wBAChG,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBACzE;yBAAM;wBACH,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;qBACzE;iBACJ;aACJ;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAM,EAAE;gBACzC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,6DAAU,EAAE;gBAC7C,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,sDAAG,EAAE;gBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,yDAAM,EAAE;gBACzC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAChD,OAAO,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG;aACzE;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,gEAAa,EAAE;gBAChD,4BAA4B;gBAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBACpD,OAAO,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS;aACxC;iBAAM,IAAI,IAAI,CAAC,SAAS,YAAY,0DAAO,EAAE;gBAC1C,4BAA4B;gBAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;gBAEpD,IAAI,MAAM,GAAG,KAAK,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC;gBAEhE,IAAI,MAAM,IAAI,EAAE,EAAE;oBACd,IAAI,MAAM,GAAG,IAAI,6DAAS,CAAC,mEAAmE,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;oBACjL,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;iBAC3B;gBAED,OAAO,MAAM;aAChB;SAGJ;IACL,CAAC;CAGJ;;;;;;;;;;;;;AC1KD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAE1B;AACZ;AAIO;AAChB;AAEnB,MAAM,UAAW,SAAQ,kEAAW;IAYjD,YACE,QAAoB,EACpB,IAAY,EACZ,OAAe,EACf,GAAgB,EAChB,GAAiB;QAEjB,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAV1C,cAAS,GAAG,EAAE;QACd,iBAAY,GAAG,EAAE;QAUvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,GAAG;YAAE,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;aAC9B;YACH,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACtB;IACH,CAAC;IAxBD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAuBM,UAAU;;QACf,IAAI,IAAI,GAAG,IAAI,0DAAO,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,SAAS,0CAAE,UAAU,GAAG,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,OAAC,IAAI,CAAC,SAAS,0CAAE,UAAU,GAAG,CAAC;SACnD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;;QAC/E,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAClB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC9B,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YAC5D,IAAI,GAAG,YAAY,8FAAW;gBAAE,OAAO,GAAG,CAAC;SAC5C;aAAM;YACL,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YACzD,IAAI,IAAI,CAAC,SAAS,YAAY,iDAAQ,EAAE;gBACtC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE;iBACzB;gBACD,IAAI,aAAa;gBACjB,IAAI;oBACF,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;oBAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;iBACjD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI;wBACF,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC;wBAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,OAAO,CAAC;qBAClD;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;qBACjD;iBACF;aACF;YACD,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;YACzD,IAAI,IAAI,CAAC,SAAS,YAAY,iDAAQ,EAAE;gBACtC,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE;iBACzB;gBACD,IAAI,aAAa;gBACjB,IAAI;oBACF,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;oBAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;iBACjD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI;wBACF,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC;wBAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,OAAO,CAAC;qBAClD;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAQ,CAAC,MAAM,CAAC;qBACjD;iBACF;aACF;SACF;QACD,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,UAAU,CAAC,IAAI;gBAClB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACtC,KAAK,UAAU,CAAC,KAAK;gBACnB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBAC9C,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,UAAU,CAAC,cAAc;gBAC5B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,UAAU,CAAC,QAAQ;gBACtB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1C,KAAK,UAAU,CAAC,SAAS;gBACvB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACrC,KAAK,UAAU,CAAC,QAAQ;gBACtB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACjC;gBACE,OAAO,IAAI,8FAAW,CACpB,iBAAiB,EACjB,mBAAmB,EACnB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACL;IACH,CAAC;IAED,2HAA2H;IACnH,aAAa,CAAC,GAAQ;;QAC5B,IAAI,IAAI,SAAG,IAAI,CAAC,aAAa,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAClD,QAAQ,IAAI,EAAE;YACZ,KAAK,uDAAQ,CAAC,MAAM;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;gBAC1C,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,KAAK,uDAAQ,CAAC,OAAO;gBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;gBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;SACjC;IACH,CAAC;IACD,oHAAoH;IAC5G,aAAa,CAAC,GAAQ,EAAE,GAAQ;;QACtC,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,QACA,GAAG,CAAC,YAAY;UACd;YACA,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SACzC;IACH,CAAC;IACO,OAAO,CAAC,MAAc,EAAE,GAAQ,EAAE,GAAQ,EAAE,GAAQ;QAC1D,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QACjC,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAE1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC3D,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aAC9B;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,iBAAiB;oBACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC/D,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aAChC;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,IAAI,GAAG,IAAI,MAAM;wBAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC5C,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvB,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;oBACrB,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC/B,OAAO,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAChE,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,OAAO,EAAE,gBAAgB;oBACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;gBACxB,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,CAAC;oBACf,OAAO,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,UAAU;YACV,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC7E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC9B,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC7E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAChC,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,MAAM,GAAG,GAAG,CAAC;oBACjB,OAAO,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC;gBAC3B,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,CAAC;oBACf,IAAI,KAAK,GAAG,GAAG,CAAC;oBAChB,OAAO,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC;gBAC3B;oBACE,iBAAiB;oBACjB,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;IACH,CAAC;IACD,qHAAqH;IAC7G,cAAc,CAAC,GAAQ,EAAE,GAAQ;;QACvC,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,QACA,GAAG,CAAC,YAAY;UACd;YACA,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC1C;IACH,CAAC;IACO,QAAQ,CAAC,MAAc,EAAE,GAAQ,EAAE,GAAQ,EAAE,GAAQ;QAC3D,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QAClC,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC3D,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAC7B;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,iBAAiB;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC/D,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAC/B;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YAEtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC3D,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;oBACrB,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;oBAC/B,OAAO,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAChE;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,UAAU;YACV,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC9B,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAChC;oBACE,iBAAiB;oBACjB,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;IACH,CAAC;IACD,8HAA8H;IACtH,cAAc,CAAC,GAAQ,EAAE,GAAQ;;QACvC,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,QACA,GAAG,CAAC,YAAY;UACd;YACA,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC1C;IACH,CAAC;IACO,QAAQ,CAAC,MAAc,EAAE,GAAQ,EAAE,GAAQ,EAAE,GAAQ;QAC3D,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QAClC,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAC7B;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,iBAAiB;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAC/B;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,UAAU;YACV,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC9B,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAChC;oBACE,iBAAiB;oBACjB,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;IACH,CAAC;IACD,wHAAwH;IAChH,iBAAiB,CAAC,GAAQ,EAAE,GAAQ;;QAC1C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,QACA,GAAG,CAAC,YAAY;UACd;YACA,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5C,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5C,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5C,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5C,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7C;IACH,CAAC;IACO,WAAW,CAAC,MAAc,EAAE,GAAQ,EAAE,GAAQ,EAAE,GAAQ;QAC9D,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QAClC,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;wBAC/B,CAAC,CAAC,gCAAgC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;wBACnC,CAAC,CAAC,gCAAgC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,QAAQ,EAAE,gBAAgB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;wBACrB,CAAC,CAAC,gCAAgC,CAAC;gBACvC;oBACE,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,iBAAiB;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;wBACnC,CAAC,CAAC,gCAAgC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;wBACnC,CAAC,CAAC,gCAAgC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,QAAQ,EAAE,iBAAiB;oBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBAClB,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3B,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG;wBACvB,CAAC,CAAC,gCAAgC,CAAC;gBACvC;oBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,OAAO;oBACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;SACF;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,UAAU;YACV,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC;wBACtB,CAAC,CAAC,gCAAgC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;oBACnB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,GAAG,IAAI,CAAC;wBACb,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC;wBACxB,CAAC,CAAC,gCAAgC,CAAC;gBACvC;oBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,iBAAiB;oBACjB,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;aACL;SACF;IACH,CAAC;IAED,0HAA0H;IAClH,YAAY,CAAC,GAAQ,EAAE,GAAQ;;QACrC,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,GAAG,SAAG,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7C,QACA,GAAG,CAAC,YAAY;UACd;YACA,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,uDAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,uDAAQ,CAAC,MAAM;gBAClB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACvC,KAAK,uDAAQ,CAAC,QAAQ;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SACxC;IACH,CAAC;IACO,MAAM,CAAC,MAAc,EAAE,GAAQ,EAAE,GAAQ,EAAE,GAAQ;QACzD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QAClC,IAAI,MAAM,IAAI,CAAC,EAAE;YACf,QAAQ;YACR,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,gBAAgB;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,CAAC;oBAC1C,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvC,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aAE5C;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,QACA,GAAG,CAAC,YAAY;cACd;gBACA,KAAK,uDAAQ,CAAC,MAAM,EAAE,iBAAiB;oBACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAK,uDAAQ,CAAC,OAAO,EAAE,iBAAiB;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,kCAAkC;oBAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aAE5C;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC7C;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,SAAS;YACT,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;aAAM,IAAI,MAAM,IAAI,CAAC,EAAE;YACtB,UAAU;YACV,OAAO;YACP,OAAO,IAAI,8FAAW,CACpB,WAAW,EACX,2BAA2B,EAC3B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;IACH,CAAC;CACF;AACD,IAAY,UAQX;AARD,WAAY,UAAU;IACpB,2CAAI;IACJ,6CAAK;IACL,+DAAc;IACd,mDAAQ;IACR,mDAAQ;IACR,qDAAS;IACT,mDAAQ;AACV,CAAC,EARW,UAAU,KAAV,UAAU,QAQrB;;;;;;;;;;;;;ACzlCD;AAAA;AAAO,MAAe,WAAW;IAI7B,YAAY,IAAU,EAAE,IAAY,EAAE,OAAe;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CAIF;;;;;;;;;;;;;ACZH;AAAA;AAAO,MAAe,WAAW;IAI/B,YAAY,IAAU,EAAE,IAAY,EAAE,OAAe;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CAMF;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEZ;AAEO;AAEnC,MAAM,sBAAuB,SAAQ,kEAAW;IAI3D,YAAY,aAAqB,EAAE,UAAsB,EAAE,IAAY,EAAE,OAAe;QACpF,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAE,UAAU;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,WAAW;QACP,IAAI,IAAI,GAAE,IAAI,0DAAO,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc;QACtD;;;;;;;WAOG;QACH,IAAG,IAAI,CAAC,aAAa,IAAE,IAAI,EAAC;YACxB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAExC;QAED,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAC;YAEpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAEpD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACN;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAuD;AAEN;AAElC,MAAM,YAAa,SAAQ,kEAAW;IAKjD,YAAY,UAAsB,EAAC,QAAe,EAAE,UAAuB,EAAE,IAAY,EAAE,OAAe;QACtG,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,QAAQ,GAAC,QAAQ;QACtB,IAAI,CAAC,UAAU,GAAE,UAAU;IAC/B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,wBAAwB;QACxB,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,MAAM,GAAC,EAAE;QACb,MAAM,IAAG,WAAW,CAAC,SAAS,GAAC,GAAG,GAAC,WAAW,CAAC,SAAS,CAAC;QACzD,OAAO,MAAM;IACjB,CAAC;CAEJ;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAAuE;AAGP;AACQ;AACW;AAIpE,MAAM,QAAS,SAAQ,gGAAW;IAO/C,YAAY,aAAqB,EAAE,KAAa,EAAE,KAAa,EAAE,OAAe;QAC9E,KAAK,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACnB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB;QACnD,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;IAC1G,CAAC;IAEM,OAAO;QAEZ,IAAI,IAAI,GAAG,IAAI,wFAAO,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB;QAEpD,IAAI,kBAAkB,GAAG,IAAI,wFAAO,CAAC,eAAe,CAAC,CAAC,CAAC,qBAAqB;QAC5E,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,GAAG,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,OAAO,CAAC,CAAC,CAAC,qBAAqB;QACvD,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAG3B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,IAAI,OAAO;QACX,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY;QACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACrE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,CAAC;QAEtD,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACnC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,QAAQ,MAAM,EAAE;gBACd,KAAK,CAAC,CAAC,CAAC;oBACN,IAAI,QAAQ,IAAI,IAAI,EAAE;wBAAE,MAAM,GAAG,CAAC,CAAC;wBAAC,SAAS;qBAAE;oBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,QAAQ,EAAE,CAAC,CAAC;oBACjE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,MAAM;iBACP;gBACD,KAAK,CAAC;oBACJ;wBACE,IAAI,KAAK,GAAG,CAAC,CAAC;wBACd,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BAC/B,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE,CAAC;yBAAE;6BACrC,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACpC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,EAAE;yBAAE;6BACnC,IAAI,QAAQ,IAAI,GAAG,EAAE;4BAAE,KAAK,GAAG,CAAC,CAAC;yBAAE;6BACnC;4BACH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;4BACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;4BACxC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;4BACvD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;yBACzC;wBACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;wBACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;wBAC1C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBACxC,MAAM,GAAG,CAAC,CAAC;wBACX,MAAM;qBACP;aACJ;SAEF;QACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACzE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,UAAU,QAAQ,SAAS,GAAG,CAAC,CAAC;QAGpE,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,UAAU,EAAE,EAAE;IACxI,CAAC;CACF;;;;;;;;;;;;;AC5GD;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAIO;AAEnC,MAAM,kBAAmB,SAAQ,kEAAW;IAIvD,YAAY,MAAc,EAAE,UAAsB,EAAE,IAAY,EAAE,OAAe;QAC7E,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,MAAM;QAC3B,IAAI,CAAC,SAAS,GAAE,UAAU;IAC9B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC1C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,WAAW;QACP,IAAI,IAAI,GAAE,IAAI,0DAAO,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc;QAClD;;;;;;;WAOG;QACH,IAAG,IAAI,CAAC,aAAa,IAAE,IAAI,EAAC;YACxB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAExC;QAED,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAC;YAEpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAEpD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACN;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACqB;AACL;AACH;AACuB;AACM;AACxB;AACc;AACsB;AACN;;;AAEvG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gHAAyB,EAAE;IAC7D,uDAAuD;IACtD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,wFAAiB,EAAE;IAC7C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qFAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mGAAoB,EAAE;IACtD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,mFAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,gFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yHAA4B,EAAE;IAC3D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,uGAAsB,EAAE;IACvD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mHAAyB,EAAE;IAEjE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAe,EAAE;IACxC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;oGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;oIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAAA;AAAuD;AAKL;AAEnC,MAAM,WAAY,SAAQ,kEAAW;IAOhD,YAAY,QAAqB,EAAE,SAAsB,EAAE,IAAY,EAAE,IAAY,EAAE,KAAa,EAAE,OAAe;QACjH,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAC7E,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI;QACnB,IAAI,MAAM,GAAC,EAAE;QAEb,KAAK,IAAI,KAAK,GAAG,GAAG,EAAE,KAAK,IAAG,GAAG,EAAE,KAAK,EAAE,EAAE;YACxC,MAAM,IAAE,GAAG,GAAC,KAAK,GAAG,IAAI;SAE3B;QACD,OAAO,MAAM,CAAC;IAGlB,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;ACxCD;AAAA;AAAe,MAAM,OAAO;IAY1B,YAAY,IAAU,EAAE,aAAqB,EAAE,KAAa,EAAE,OAAe,EAAE,MAAa,EAAE,KAAW,EAAC,SAAkB;QATpH,aAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAU3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAE,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;IACrB,CAAC;IACD,mBAAmB;IACZ,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACM,OAAO,CAAC,KAAW;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IACM,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACM,gBAAgB,CAAC,KAAa;QACnC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,QAAQ,CAAC,KAAU;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,eAAe,CAAC,IAAY,EAAE,IAAY,EAAC,KAAY,EAAE,OAAc,EAAE,GAAU;QACxF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;QACjB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;IACvB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW,CAAC,QAA6B;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAE3B,CAAC;IACM,gBAAgB;QACrB,OAAO,IAAI,CAAC,KAAK;IACnB,CAAC;IACM,kBAAkB;QACvB,OAAO,IAAI,CAAC,OAAO;IACrB,CAAC;IACM,aAAa;QAClB,OAAO,IAAI,CAAC,UAAU;IACxB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAGM,WAAW,CAAC,QAAe;QAChC,IAAI,CAAC,WAAW,GAAC,QAAQ;IAC3B,CAAC;IACM,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW;IACzB,CAAC;IACM,cAAc;QACnB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,MAAM;QACzB,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;IACM,kBAAkB,CAAC,GAAW;QACnC,IAAI,CAAC,QAAQ,GAAE,GAAG;IACpB,CAAC;IACM,iBAAiB;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;CACF;;;;;;;;;;;;;ACpGD;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AAKO;AAEnC,MAAM,IAAK,SAAQ,kEAAW;IAI3C,YAAY,MAAc,EAAC,SAAqB,EAAE,IAAY,EAAE,OAAe;QAE7E,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,GAAG,MAAM;QAClB,IAAI,CAAC,SAAS,GAAE,SAAS;IAC3B,CAAC;IACM,WAAW;QAChB,IAAI,IAAI,GAAE,IAAI,0DAAO,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc;QAC7C,IAAI,UAAU,GAAE,IAAI,0DAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC/B,IAAG,IAAI,CAAC,SAAS,IAAE,IAAI,EAAC;YAElB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SACtD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC5C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF;;;;;;;;;;;;;AC/BD;AAAA;AAAO,MAAgB,WAAW;IAKhC,YAAY,IAAU,EAAE,IAAY,EAAE,OAAe;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CAIF;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAGb;AAEQ;AACV;AAGzB,MAAM,OAAQ,SAAQ,kEAAW;IAM5C,YAAY,aAAqB,EAAE,UAAyB,EAAE,IAAU,EAAE,MAAqB,EAAE,KAAa,EAAE,OAAe;QAC3H,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QACtE,IAAI,cAAc,GAAC,EAAE;QACrB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC9B,IAAG,OAAO,YAAY,oDAAW,EAAC;oBAC9B,cAAc,IAAG,OAAO,CAAC,IAAI;iBAChC;YAGL,CAAC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,IAAI,yDAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,GAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACjJ,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;YAC1B,IAAI,OAAO,GAAG,IAAI,yDAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9H,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;SAE7B;aAAM;YACH,IAAI,OAAO,GAAG,IAAI,yDAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,GAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACpI,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;SAC7B;IAGL,CAAC;IAED,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAG8B;AAC/B;AACJ;AACR;AAGK;AAEhC,MAAM,GAAI,SAAQ,kEAAW;IAMxC,YAAY,QAAgB,EAAE,SAA+B,EAAE,OAA6B,EAAE,KAAa,EAAE,OAAe;QACxH,KAAK,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB,EAAE,QAA0B;QAEtE,IAAI,IAAI,CAAC,SAAS,YAAY,kEAAW,EAAE;YACvC,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,MAAM,IAAI,IAAI,EAAE;gBAChB,qDAAqD;gBACrD,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;gBAE/D,IAAI,OAAO,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;gBAChI,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;gBAC1B,6CAA6C;gBAC7C,0EAA0E;gBAC1E,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;oBACtB,IAAI,IAAI,CAAC,OAAsB,EAAE;wBAC7B,IAAI,IAAI,GAA6B,IAAI,CAAC,OAAO;wBACjD,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;wBAClD,IAAI,IAAI,YAAY,6DAAQ,EAAE;4BAC1B,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;4BACrC,IAAI,OAAO,IAAI,IAAI,EAAE;gCACjB,OAAO,OAAO,CAAC,QAAQ,EAAE;6BAC5B;yBACJ;6BAAM;4BACH,OAAO,GAAG;yBACb;qBAEJ;yBAAM;wBACH,IAAI,IAAI,CAAC,OAAiB,EAAE;4BACxB,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC;4BAChC,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;4BACxD,IAAI,MAAM,IAAI,IAAI,EAAE;gCAChB,OAAO,MAAM;6BAChB;yBACJ;qBACJ;iBACJ;qBAAM;oBACH,OAAO,EAAE;iBACZ;aAEJ;iBAAM;gBACH,4EAA4E;aAC/E;SAEJ;aAAM,IAAI,IAAI,CAAC,SAAS,YAAY,KAAK,EAAE;YACxC,IAAI,GAAG,CAAC;YACR,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,cAAc,GAAG,IAAI,CAAC;YAC1B,IAAI,OAAO,GAAkB,IAAI,+DAAa,EAAE,CAAC;YACjD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;YACpC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC7B,CAAC,EAAE;gBACH,IAAI,OAAqB,EAAE;oBACvB,qDAAqD;oBACrD,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;oBAC5D,IAAI,UAAU,YAAY,6FAAgB,EAAE;wBACxC,QAAQ,GAAG,UAAU;wBACrB,IAAI,CAAC,IAAI,QAAQ,EAAE;4BACf,IAAI,KAAK,IAAI,IAAI,EAAE;gCACf,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC;gCAC7D,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gCAC5H,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;gCACtB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;oCACtB,IAAI,IAAI,CAAC,OAAO,YAAY,6DAAQ,EAAE;wCAClC,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;wCAC3D,IAAI,MAAM,IAAI,IAAI,EAAE;4CAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;4CAClC,OAAO,MAAM;yCAChB;qCACJ;yCAAM;wCACH,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;wCACxD,IAAI,MAAM,IAAI,IAAI,EAAE;4CAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;4CAClC,OAAO,MAAM;yCAChB;qCACJ;iCACJ;6BACJ;yBACJ;qBAEJ;oBACD,IAAI,UAAU,YAAY,KAAK,EAAE;wBAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;wBACvB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;4BAEtB,IAAI,IAAI,CAAC,OAAO,YAAY,6DAAQ,EAAE;gCAClC,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;gCACpC,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gCAC7B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gCAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,GAAG,CAAC,CAAC;gCAClD,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gCAC5H,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;gCACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gCAC3D,IAAI,MAAM,IAAI,IAAI,EAAE;oCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;oCAClC,OAAO,MAAM;iCAChB;6BACJ;4BACD,IAAI,IAAI,CAAC,OAAiB,EAAE;gCACxB,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC;gCAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;gCACpC,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gCAC7B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gCAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,GAAG,CAAC,CAAC;gCAClD,GAAG,GAAG,IAAI,yDAAO,CAAC,IAAI,sDAAI,CAAC,uDAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;gCAC5H,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;gCACtB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;gCACxD,IAAI,MAAM,IAAI,IAAI,EAAE;oCAChB,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE;oCAClC,OAAO,MAAM;iCAChB;6BACJ;yBACJ;qBAEJ;iBAEJ;YACL,CAAC,CAAC,CAAC;YACH,IAAI,MAAM,IAAI,EAAE,EAAE;gBACd,OAAO,MAAM;aAChB;YACD,IAAI,cAAc,IAAI,IAAI,EAAE;gBAExB,OAAO,cAAc;aACxB;YACD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,OAAO,OAAO;aACjB;SAEJ;IAGL,CAAC;IACD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC/C,CAAC;CAEJ;;;;;;;;;;;;;ACjKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACZ;AAED;AACQ;AAExB;AACD;AAC0C;AAGhF,MAAM,MAAO,SAAQ,gGAAW;IAO7C,YAAY,aAAqB,EAAE,SAAiB,EAAE,iBAA6B,EAAE,EAAE,YAAsB,EAAE,KAAa,EAAE,OAAe;QAC3I,KAAK,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,KAAY,EAAE,KAAoB;QACnD,IAAI,OAAO,CAAC;QAGZ,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACpC,IAAI,CAAC,CAAC,aAAa,IAAI,UAAU,EAAE;oBACjC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC5B;aACF;SACF;QAGD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAE7B,IAAI,EAAE,GAAG,IAAI,+DAAa,EAAE,CAAC,CAAC,iBAAiB;YAC/C,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,4BAA4B;gBACjE,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACnB;YACD,OAAO,GAAG,IAAI,uFAAO,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;YAC3I,+EAA+E;SAChF;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAEjC,mCAAmC;YACnC,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,OAAO,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnC;iBAAM,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,YAAY,EAAE;gBAC9C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC/D;iBAAM,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,OAAO,EAAE;gBACzC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClC,EAAE;gBACF;0EAC0D;aAC3D;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aACjC;YAED,OAAO,GAAG,IAAI,uFAAO,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAExJ;aAAM;YACL,4GAAY,CAAC,IAAI,CAAC,IAAI,gEAAW,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,GAAG,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/G;QAGD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,IAAG,IAAI,CAAC,aAAa,IAAE,KAAK,EAAC;gBAG7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;oBACjC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAEpC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC;iBAEtE;aACF;SACA;QAED,OAAO,OAAO,CAAC;IAEjB,CAAC;IAGD,YAAY,CAAC,CAAC;QACZ,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAGM,OAAO;QACZ,IAAI,IAAI,GAAG,IAAI,wFAAO,CAAC,SAAS,CAAC,CAAC;QAClC,IAAI,QAAQ,GAAG,IAAI,wFAAO,CAAC,QAAQ,CAAC;QACpC,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,GAAG,CAAC;QAC5B,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;QAC9B,IAAI,kBAAkB,GAAG,IAAI,wFAAO,CAAC,eAAe,CAAC,CAAC;QAEtD,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QAC5C,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,GAAG,CAAC;QAC5B,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;QAI9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,aAAa,CAAC,CAAC;YACvC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,iBAAiB,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACjC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aACnC;YACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC7B,IAAI,KAAK,GAAG,IAAI,wFAAO,CAAC,eAAe,CAAC,CAAC;YACzC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC/B,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aACnC;YACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ,CAAC,KAAY,EAAE,KAAoB;QACzC,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAE7B,IAAI,EAAE,GAAG,IAAI,+DAAa,EAAE,CAAC,CAAC,iBAAiB;YAE/C,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,4BAA4B;gBAC9D,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACnB;YACD,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACpC,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC7B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,GAAG,CAAC,CAAC;YAClD,OAAO,GAAG,IAAI,uFAAO,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,EAAE,EAAE,KAAK,QAAQ,EAAE,CAAC,CAAC;SAE9I;aAEI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAE/B,mCAAmC;YACnC,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,OAAO,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnC;iBAAM,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,YAAY,EAAE;gBAC9C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC/D;iBAAM,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,OAAO,EAAE;gBACzC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClC,EAAE;gBACF;0EAC0D;aAC3D;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC/K;YAED,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY;YACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,OAAO,OAAO,GAAG,CAAC,CAAC;YAEtD,IAAI,IAAI,GAAW,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACvC,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,QAAQ,MAAM,EAAE;oBACd,KAAK,CAAC,CAAC,CAAC;wBACN,IAAI,QAAQ,IAAI,IAAI,EAAE;4BAAE,MAAM,GAAG,CAAC,CAAC;4BAAC,SAAS;yBAAE;wBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,QAAQ,EAAE,CAAC,CAAC;wBACjE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;wBAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBACxC,MAAM;qBACP;oBACD,KAAK,CAAC;wBACJ;4BACE,IAAI,KAAK,GAAG,CAAC,CAAC;4BACd,IAAI,QAAQ,IAAI,GAAG,EAAE;gCAAE,KAAK,GAAG,EAAE,CAAC;6BAAE;iCAC/B,IAAI,QAAQ,IAAI,IAAI,EAAE;gCAAE,KAAK,GAAG,EAAE,CAAC;6BAAE;iCACrC,IAAI,QAAQ,IAAI,IAAI,EAAE;gCAAE,KAAK,GAAG,EAAE;6BAAE;iCACpC,IAAI,QAAQ,IAAI,GAAG,EAAE;gCAAE,KAAK,GAAG,EAAE;6BAAE;iCACnC,IAAI,QAAQ,IAAI,GAAG,EAAE;gCAAE,KAAK,GAAG,CAAC,CAAC;6BAAE;iCACnC;gCACH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;gCACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gCAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;gCACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gCACxC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;gCACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gCAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gCACvD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;6BACzC;4BACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BACrD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAE/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;4BAC1C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;4BACxC,MAAM,GAAG,CAAC,CAAC;4BACX,MAAM;yBACP;iBACJ;aAEF;YACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACxC,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACvC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YACzE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,UAAU,QAAQ,SAAS,GAAG,CAAC,CAAC;YACpE,OAAO,GAAG,IAAI,uFAAO,CAAC,IAAI,oFAAI,CAAC,qFAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,UAAU,EAAE,CAAC,CAAC;SAE5J;QAID,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAE/B,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;aAGtF;SACF;QAED,OAAO,OAAO;IAChB,CAAC;CACF;;;;;;;;;;;;;AC/PD;AAAA;AAAA;AAAe,MAAM,IAAI;IAErB,YAAY,KAAe;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACM,OAAO,CAAC,IAAc;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IACM,KAAK,CAAC,OAAa;QACxB,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;CACF;AAED,IAAY,QAkBX;AAlBD,WAAY,QAAQ;IAClB,2CAAM;IACN,2CAAM;IACN,2CAAM;IACN,qDAAW;IACX,uCAAI;IACJ,yCAAK;IACL,uCAAI;IACJ,iDAAS;IACT,mCAAE;IACF,6CAAO;IACP,gDAAQ;IACR,8CAAO;IACP,gDAAQ;IACR,gDAAQ;IACR,4CAAM;IACN,gDAAQ;AAEV,CAAC,EAlBW,QAAQ,KAAR,QAAQ,QAkBnB;;;;;;;;;;;;;;;;;;;;ICzBO,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;IAKlE,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAKzD,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAK5D,yEAAsC;IAAC,sEAAU;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAI9D,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAG1D,yEAAsC;IAAC,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAG5D,yEAAsC;IAAC,qEAAS;IAAA,4DAAK;;;IACrD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAG/D,oEAA4D;;;IAC5D,oEAAkE;;ACtCnE,MAAM,4BAA4B;IAWvC;QAVA,qBAAgB,GAAa;YAC3B,MAAM;YACN,IAAI;YACJ,OAAO;YACP,SAAS;YACT,QAAQ;YACR,OAAO;YACP,KAAK;SACN,CAAC;QACF,eAAU,GAAG,EAAE,CAAC;IACA,CAAC;IAEjB,QAAQ;QACN,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAC9B,CAAC;;wGAnBU,4BAA4B;4GAA5B,4BAA4B;QDPzC,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QACjC,yEAAmB;QACf,2EAAoE;QAMhE,2EAAgC;QAC9B,sHAAgD;QAChD,sHAAuE;QACzE,qEAAe;QAGf,2EAAkC;QAChC,sHAAiD;QACjD,sHAA8D;QAChE,qEAAe;QAGf,4EAAoC;QAClC,wHAAmD;QACnD,wHAAiE;QACnE,qEAAe;QAGf,4EAAuC;QACrC,wHAAsD;QACtD,wHAAmE;QACrE,qEAAe;QAEf,4EAAmC;QACjC,wHAAkD;QAClD,wHAA+D;QACjE,qEAAe;QACf,4EAAqC;QACnC,wHAAoD;QACpD,wHAAiE;QACnE,qEAAe;QACf,6EAAsC;QACpC,wHAAqD;QACrD,wHAAkE;QACpE,qEAAe;QAEf,yHAA4D;QAC5D,yHAAkE;QACpE,4DAAQ;QACd,4DAAM;;QA7Ce,0DAAyB;QAAzB,sFAAyB;QA0ClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;;;;;AE7CpB;AAGF;AACY;AACV;AACJ;AAE3C,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACbpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAuD;AAEN;AAGlC,MAAM,aAAc,SAAQ,kEAAW;IAEpD,YAAY,aAAqB,EAAE,IAAY,EAAE,OAAe;QAC9D,KAAK,CAAC,IAAI,qDAAI,CAAC,sDAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IACD,WAAW,CAAC,KAAY,EAAE,KAAoB;QAC5C,OAAO,EAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAC,CAAC;IACzC,CAAC;CACF","file":"main.js","sourcesContent":["import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Predicados extends Instruccion {\r\n    public Identificador: string;\r\n    public Corchetes: Instruccion\r\n    constructor(select: string, lcorchetes:Instruccion, fila: number, columna: number){\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Identificador = select\r\n        this.Corchetes= lcorchetes\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo= new nodoAST('PREDICADO'); //PADRE SELECT\r\n        /**TIPOS DE ATRIBUTOS\r\n         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)\r\n         * ATRIBUTOS SELECT\r\n         * ATRIBUTOS MULTIPLICACION\r\n         * ATRIBUTOS IDENTIFICADOR L_CORCHETES\r\n         */\r\n        if(this.Identificador!=null){\r\n           \r\n            nodo.agregarHijo(this.Identificador);\r\n            \r\n        }\r\n        \r\n        if(this.Corchetes!=null){\r\n            \r\n            nodo.agregarHijoAST(this.Corchetes.getNodosAST())\r\n            \r\n        }\r\n        \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar grammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,15],$V1=[1,5],$V2=[1,14],$V3=[1,11],$V4=[1,8],$V5=[1,9],$V6=[1,10],$V7=[1,12],$V8=[5,14,15,23,25,77,78,79,80],$V9=[1,38],$Va=[1,33],$Vb=[1,34],$Vc=[1,35],$Vd=[1,36],$Ve=[1,37],$Vf=[1,23],$Vg=[1,24],$Vh=[1,25],$Vi=[1,26],$Vj=[1,27],$Vk=[1,28],$Vl=[1,29],$Vm=[1,30],$Vn=[8,9,10,14,23,26,27,48,49,50,52,53,54,55,56,57,58,59],$Vo=[2,100],$Vp=[20,22],$Vq=[2,13],$Vr=[2,14],$Vs=[1,47],$Vt=[1,50],$Vu=[1,69],$Vv=[1,62],$Vw=[1,65],$Vx=[1,66],$Vy=[1,67],$Vz=[1,55],$VA=[1,56],$VB=[1,57],$VC=[1,58],$VD=[1,59],$VE=[1,60],$VF=[1,68],$VG=[1,70],$VH=[1,71],$VI=[1,72],$VJ=[1,61],$VK=[1,63],$VL=[1,64],$VM=[10,13,14,20,22,23,26,27,30,31,33,36,37,38,39,40,43,44,48,52,53,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$VN=[10,13,14,20,22,23,26,27,30,31,33,36,37,38,39,40,44,48,52,53,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$VO=[2,66],$VP=[42,43],$VQ=[1,77],$VR=[1,76],$VS=[20,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$VT=[2,58],$VU=[1,87],$VV=[9,14,23,26,27,48,49,50,52,53,54,55,56,57,58,59],$VW=[10,13,14,22,23,26,27,30,31,33,36,37,38,39,40,44,48,52,53,57,58,61,62,64,65,66,67,69,70,71,72,73],$VX=[10,13,14,22,23,26,27,30,31,33,36,37,38,39,40,44,52,53,57,58],$VY=[1,110],$VZ=[1,118],$V_=[1,107],$V$=[1,108],$V01=[1,109],$V11=[1,112],$V21=[1,113],$V31=[1,115],$V41=[1,116],$V51=[1,117],$V61=[1,120],$V71=[1,121],$V81=[1,122],$V91=[1,119],$Va1=[10,13,14,20,22,23,26,27,30,31,33,36,37,38,39,40,42,43,44,48,52,53,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$Vb1=[13,14,23,26,27,30,31,33,36,37,38,39,40,52,53,57,58],$Vc1=[2,39],$Vd1=[2,40];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"FUNCION\":4,\"EOF\":5,\"VOIDS\":6,\"TIPO\":7,\"MAIN\":8,\"PARIZQ\":9,\"PARDER\":10,\"LLAVEIZQ\":11,\"INSTRUCCIONES\":12,\"LLAVEDER\":13,\"IDENTIFICADOR\":14,\"INCLUDE\":15,\"LIBRERIA\":16,\"DECLARACION_MULTIPLE\":17,\"DECLARACION\":18,\"TIPODECLARACION\":19,\"COMA\":20,\"TERMINO\":21,\"PTCOMA\":22,\"TEMPORAL\":23,\"L_CORCHETES\":24,\"DOUBLE\":25,\"STACK\":26,\"HEAP\":27,\"INSTRUCCION\":28,\"ASIGNACION\":29,\"EXIT\":30,\"IF\":31,\"EXPRESION\":32,\"GOTO\":33,\"DOSPUNTOS\":34,\"TIPO_PRINT\":35,\"UNSET\":36,\"RETURN_INS\":37,\"IMPRIMIR\":38,\"IMPRIMIRF\":39,\"SNPRINT\":40,\"TEMPORALES\":41,\"IGUAL\":42,\"CORCHETEIZQ\":43,\"CORCHETEDER\":44,\"OPLOGICA\":45,\"OPBIT\":46,\"OPRELACIONAL\":47,\"MENOS\":48,\"NOT_BIT\":49,\"NOT\":50,\"OPARITMETICA\":51,\"RA\":52,\"PILA\":53,\"ENTERO\":54,\"DECIMAL\":55,\"CADENA\":56,\"PUNTERO\":57,\"VALOR_RET\":58,\"AND_BIT\":59,\"UNARIO\":60,\"AND\":61,\"OR\":62,\"XOR\":63,\"MENORQUE\":64,\"MAYORQUE\":65,\"MENORIGUAL\":66,\"MAYORIGUAL\":67,\"IGUALQUE\":68,\"NOIGUAL\":69,\"MAS\":70,\"MULTIPLICACION\":71,\"DIVISION\":72,\"MODULO\":73,\"SHIFTDER\":74,\"OR_BIT\":75,\"XOR_BIT\":76,\"INT\":77,\"FLOAT\":78,\"CHAR\":79,\"VOID\":80,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",8:\"MAIN\",9:\"PARIZQ\",10:\"PARDER\",11:\"LLAVEIZQ\",13:\"LLAVEDER\",14:\"IDENTIFICADOR\",15:\"INCLUDE\",16:\"LIBRERIA\",20:\"COMA\",22:\"PTCOMA\",23:\"TEMPORAL\",25:\"DOUBLE\",26:\"STACK\",27:\"HEAP\",30:\"EXIT\",31:\"IF\",33:\"GOTO\",34:\"DOSPUNTOS\",36:\"UNSET\",37:\"RETURN_INS\",38:\"IMPRIMIR\",39:\"IMPRIMIRF\",40:\"SNPRINT\",42:\"IGUAL\",43:\"CORCHETEIZQ\",44:\"CORCHETEDER\",48:\"MENOS\",49:\"NOT_BIT\",50:\"NOT\",52:\"RA\",53:\"PILA\",54:\"ENTERO\",55:\"DECIMAL\",56:\"CADENA\",57:\"PUNTERO\",58:\"VALOR_RET\",59:\"AND_BIT\",61:\"AND\",62:\"OR\",63:\"XOR\",64:\"MENORQUE\",65:\"MAYORQUE\",66:\"MENORIGUAL\",67:\"MAYORIGUAL\",68:\"IGUALQUE\",69:\"NOIGUAL\",70:\"MAS\",71:\"MULTIPLICACION\",72:\"DIVISION\",73:\"MODULO\",74:\"SHIFTDER\",75:\"OR_BIT\",76:\"XOR_BIT\",77:\"INT\",78:\"FLOAT\",79:\"CHAR\",80:\"VOID\"},\r\nproductions_: [0,[3,2],[4,2],[4,1],[6,7],[6,7],[6,2],[6,1],[6,1],[17,3],[17,3],[17,2],[17,2],[19,1],[19,1],[18,4],[18,4],[18,4],[12,2],[12,1],[28,1],[28,2],[28,2],[28,1],[28,12],[28,8],[28,3],[28,2],[28,3],[28,2],[28,5],[28,4],[28,5],[28,4],[28,2],[28,3],[35,1],[35,1],[35,1],[29,3],[29,4],[29,3],[24,4],[24,3],[32,1],[32,3],[32,3],[32,3],[32,3],[32,2],[32,2],[32,2],[32,3],[32,4],[21,1],[21,1],[21,1],[21,1],[21,2],[21,1],[21,1],[21,1],[21,1],[21,1],[21,2],[21,2],[21,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[60,1],[60,1],[60,1],[47,1],[47,1],[47,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,1],[51,1],[51,1],[51,1],[51,1],[46,1],[46,1],[46,1],[46,1],[46,1],[7,1],[7,1],[7,1],[7,1],[7,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 2: case 18:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 3: case 19:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 4: case 5:\r\nthis.$= new Funcion.default($$[$0-6]+\" \"+$$[$0-5]+\" \"+$$[$0-4]+\" \"+$$[$0-3]+\" \"+$$[$0-2]+\"\\n\",$$[$0-1],_$[$0-6].first_line,_$[$0-6].first_column);\r\nbreak;\r\ncase 6: case 12:\r\nthis.$=$$[$0-1]+$$[$0]+\"\\n\"\r\nbreak;\r\ncase 7: case 8: case 13: case 14: case 20: case 36: case 37: case 38: case 44: case 55: case 63: case 66: case 68: case 69: case 70: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 99: case 100: case 101:\r\nthis.$=$$[$0]\r\nbreak;\r\ncase 9:\r\nthis.$=$$[$0-2]+\" \"+$$[$0-1]+$$[$0]+\" \"\r\nbreak;\r\ncase 10:\r\nthis.$= new Declaracion.default($$[$0-2],$$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 11:\r\nthis.$=$$[$0-1]+$$[$0]+\" \"\r\nbreak;\r\ncase 15: case 16: case 17:\r\nthis.$= new Declaracion.default($$[$0-3]+\" \"+$$[$0-2]+\"[\",$$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\ncase 21: case 64:\r\nthis.$=$$[$0-1]\r\nbreak;\r\ncase 22:\r\nthis.$= new Exit.default(_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 23:\r\nthis.$= new Exit.default(_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 24:\r\nthis.$= new SaltoCondicional.default($$[$0-9],$$[$0-6],$$[$0-3],$$[$0-1],_$[$0-11].first_line,_$[$0-11].first_column);\r\nbreak;\r\ncase 25:\r\nthis.$= new SaltoCondicional.default($$[$0-5],$$[$0-2],$$[$0],$$[$02],_$[$0-7].first_line,_$[$0-7].first_column);\r\nbreak;\r\ncase 26:\r\nthis.$= new SaltoIncondicional.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 27:\r\nthis.$= new SaltoIncondicional.default($$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 28:\r\nthis.$= new Etiqueta.default($$[$0-2],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 29:\r\nthis.$= new Etiqueta.default($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 30:\r\nthis.$= new Print.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column);\r\nbreak;\r\ncase 31:\r\nthis.$= new Print.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\ncase 32:\r\nthis.$= new Unset.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column);\r\nbreak;\r\ncase 33:\r\nthis.$= new Unset.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\ncase 34:\r\nthis.$= new Sentencia.default(null,_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 35:\r\nthis.$= new Sentencia.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 39:\r\nthis.$= new Asignacion.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 40:\r\nthis.$= new AsignacionEstructura.default($$[$0-3],$$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\ncase 41:\r\nthis.$= new Llamada.default($$[$0-2],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 42:\r\n$$[$0-3].push($$[$0-1]); this.$ = $$[$0-3];\r\nbreak;\r\ncase 43:\r\nthis.$ = [$$[$0-1]];\r\nbreak;\r\ncase 45:\r\nthis.$= new multiplecoma.default($$[$0-2],$$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 46:\r\nthis.$= new logica.default($$[$0-2],$$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 47:\r\nthis.$= new bit.default($$[$0-2],$$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 48:\r\nthis.$= new relacional.default($$[$0-2],$$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 49: case 50: case 51:\r\nthis.$= new unario.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 52:\r\nthis.$= new aritmetica.default($$[$0-2],$$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 53:\r\nthis.$= new conversion.default($$[$0-2],$$[$0],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\ncase 54: case 67:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.TEMPORAL),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 56:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.PILA),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 57:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.ENTERO),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 58: case 65:\r\nthis.$= new Estructura.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 59: case 71:\r\nthis.$ = new identificador.default($$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 60:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.DECIMAL),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 61:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.CADENA),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 62: case 72:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.PUNTERO),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 73:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.STACK),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 74:\r\nthis.$=new termino.default(new Tipo.default(Tipo.tipoDato.HEAP),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,7:4,14:$V0,15:$V1,17:6,18:7,19:13,23:$V2,25:$V3,77:$V4,78:$V5,79:$V6,80:$V7},{1:[3]},{5:[1,16],6:17,7:4,14:$V0,15:$V1,17:6,18:7,19:13,23:$V2,25:$V3,77:$V4,78:$V5,79:$V6,80:$V7},o($V8,[2,3]),{8:[1,18],9:$V9,14:[1,19],19:20,21:21,23:[1,22],26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{16:[1,39]},o($V8,[2,7]),o($V8,[2,8]),o($Vn,[2,97]),o($Vn,[2,98]),o($Vn,[2,99]),o([8,9,14,23,48,49,50,52,53,54,55,56,57,58,59],$Vo,{26:[1,40],27:[1,41]}),o($Vn,[2,101]),{20:[1,42],22:[1,43]},o($Vp,$Vq),o($Vp,$Vr),{1:[2,1]},o($V8,[2,2]),{9:[1,44]},o([20,22,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$Vr,{24:46,9:[1,45],43:$Vs}),{20:[1,48]},{20:$Vt,22:[1,49],45:51,46:52,47:53,48:$Vu,51:54,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL},o([20,22,43,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],$Vq),o($VM,[2,55]),o($VM,[2,56]),o($VN,[2,57]),o($VN,[2,60]),o($VN,[2,61]),o($VM,[2,62]),o($VM,[2,63]),{23:[1,73]},{24:74,43:$Vs},o($VN,$VO),o($VP,[2,73]),o($VP,[2,74]),{9:$V9,14:$VQ,21:75,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:78,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:79,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{7:80,25:[1,81],77:$V4,78:$V5,79:$V6,80:$V7},o($V8,[2,6]),{24:82,43:$Vs},{24:83,43:$Vs},o($V8,[2,11]),o($V8,[2,12]),{10:[1,84]},{10:[1,85]},o($VS,$VT,{22:[1,86],43:$VU}),{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:88,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($V8,[2,9]),o($V8,[2,10]),{9:$V9,14:$VQ,21:90,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:91,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:92,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:93,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:94,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($VV,[2,81]),o($VV,[2,82]),o($VV,[2,83]),o($VV,[2,84]),o($VV,[2,85]),o($VV,[2,86]),o($VV,[2,92]),o($VV,[2,94]),o($VV,[2,95]),o($VV,[2,96]),o($VV,[2,78]),o($VV,[2,79]),o($VV,[2,80]),o($VV,[2,87]),o($VV,[2,88]),o($VV,[2,89]),o($VV,[2,90]),o($VV,[2,91]),o($VN,[2,64]),o($VN,[2,65],{43:$VU}),o($VW,[2,49],{45:51,46:52,47:53,51:54,20:$Vt,59:$Vv,63:$Vy,68:$VD,74:$VJ,75:$VK,76:$VL}),o($VM,[2,54]),o($VN,[2,59],{24:95,43:$Vs}),o($VW,[2,50],{45:51,46:52,47:53,51:54,20:$Vt,59:$Vv,63:$Vy,68:$VD,74:$VJ,75:$VK,76:$VL}),o($VW,[2,51],{45:51,46:52,47:53,51:54,20:$Vt,59:$Vv,63:$Vy,68:$VD,74:$VJ,75:$VK,76:$VL}),{10:[1,96]},{10:$Vo},{22:[1,97],43:$VU},{22:[1,98],43:$VU},{11:[1,99]},{11:[1,100]},o($V8,[2,15]),{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:101,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($VS,$VO,{44:[1,102]}),o($VX,[2,44],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VX,[2,45],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VX,[2,46],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VX,[2,47],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VX,[2,48],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VX,[2,52],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),o($VN,$VT,{43:$VU}),{9:$V9,14:$VQ,21:103,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($V8,[2,16]),o($V8,[2,17]),{12:104,14:$VY,23:$VZ,26:$Va,27:$Vb,28:105,29:106,30:$V_,31:$V$,33:$V01,35:111,36:$V11,37:$V21,38:$V31,39:$V41,40:$V51,41:114,52:$V61,53:$V71,57:$V81,58:$V91},{12:123,14:$VY,23:$VZ,26:$Va,27:$Vb,28:105,29:106,30:$V_,31:$V$,33:$V01,35:111,36:$V11,37:$V21,38:$V31,39:$V41,40:$V51,41:114,52:$V61,53:$V71,57:$V81,58:$V91},o($VS,$VO,{44:[1,124]}),o($Va1,[2,43]),o($VX,[2,53],{45:51,46:52,47:53,51:54,20:$Vt,48:$Vu,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL}),{13:[1,125],14:$VY,23:$VZ,26:$Va,27:$Vb,28:126,29:106,30:$V_,31:$V$,33:$V01,35:111,36:$V11,37:$V21,38:$V31,39:$V41,40:$V51,41:114,52:$V61,53:$V71,57:$V81,58:$V91},o($Vb1,[2,19]),o($Vb1,[2,20],{22:[1,127]}),o($Vb1,[2,23],{22:[1,128]}),{9:[1,129]},{14:[1,130]},o($VP,[2,71],{9:[1,132],34:[1,131]}),{9:[1,133]},{9:[1,134]},{9:$V9,14:$VQ,21:89,22:[1,135],23:$VR,26:$Va,27:$Vb,32:136,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{24:138,42:[1,137],43:$Vs},{9:[2,36]},{9:[2,37]},{9:[2,38]},o($VP,[2,67]),o($VP,[2,68]),o($VP,[2,69]),o($VP,[2,70]),o($VP,[2,72]),{13:[1,139],14:$VY,23:$VZ,26:$Va,27:$Vb,28:126,29:106,30:$V_,31:$V$,33:$V01,35:111,36:$V11,37:$V21,38:$V31,39:$V41,40:$V51,41:114,52:$V61,53:$V71,57:$V81,58:$V91},o($Va1,[2,42]),o($V8,[2,4]),o($Vb1,[2,18]),o($Vb1,[2,21]),o($Vb1,[2,22]),{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:140,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($Vb1,[2,27],{22:[1,141]}),o($Vb1,[2,29],{22:[1,142]}),{10:[1,143]},{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:144,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{9:$V9,14:$VQ,21:145,23:$VR,26:$Va,27:$Vb,32:32,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},o($Vb1,[2,34]),o($VS,$VO,{22:[1,146]}),{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:147,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{42:[1,148],43:$VU},o($V8,[2,5]),o($VS,$VO,{10:[1,149]}),o($Vb1,[2,26]),o($Vb1,[2,28]),o([13,14,22,23,26,27,30,31,33,36,37,38,39,40,52,53,57,58],[2,41]),o($VS,$VO,{10:[1,150]}),{10:[1,151],20:$Vt,45:51,46:52,47:53,48:$Vu,51:54,59:$Vv,61:$Vw,62:$Vx,63:$Vy,64:$Vz,65:$VA,66:$VB,67:$VC,68:$VD,69:$VE,70:$VF,71:$VG,72:$VH,73:$VI,74:$VJ,75:$VK,76:$VL},o($Vb1,[2,35]),o($VS,$VO,{13:$Vc1,14:$Vc1,22:$Vc1,23:$Vc1,26:$Vc1,27:$Vc1,30:$Vc1,31:$Vc1,33:$Vc1,36:$Vc1,37:$Vc1,38:$Vc1,39:$Vc1,40:$Vc1,52:$Vc1,53:$Vc1,57:$Vc1,58:$Vc1}),{9:$V9,14:$VQ,21:89,23:$VR,26:$Va,27:$Vb,32:152,41:31,48:$Vc,49:$Vd,50:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm},{33:[1,153]},o($Vb1,[2,31],{22:[1,154]}),o($Vb1,[2,33],{22:[1,155]}),o($VS,$VO,{13:$Vd1,14:$Vd1,22:$Vd1,23:$Vd1,26:$Vd1,27:$Vd1,30:$Vd1,31:$Vd1,33:$Vd1,36:$Vd1,37:$Vd1,38:$Vd1,39:$Vd1,40:$Vd1,52:$Vd1,53:$Vd1,57:$Vd1,58:$Vd1}),{14:[1,156]},o($Vb1,[2,30]),o($Vb1,[2,32]),{22:[1,157],33:[1,158]},{33:[1,159]},{14:[1,160]},{14:[1,161]},o($Vb1,[2,25]),{22:[1,162]},{14:[1,163]},{34:[1,164]},o($Vb1,[2,24])],\r\ndefaultActions: {16:[2,1],81:[2,100],115:[2,36],116:[2,37],117:[2,38]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\n\r\nconst CErrores= require(\"./Errores/NodoErrores\")\r\nconst inicio = require(\"../../componentes/contenido-inicio/contenido-inicio.component\")\r\nconst Tipo= require(\"./Simbolo/Tipo\");\r\nconst aritmetica= require(\"./Expresion/Aritmetica\");\r\nconst logica= require(\"./Expresion/Logica\");\r\nconst bit= require(\"./Expresion/Bit\");\r\nconst concatenacion= require(\"./Expresion/Concatenar\");\r\nconst relacional= require(\"./Expresion/Relacional\");\r\nconst conversion= require(\"./Expresion/Conversion\");\r\nconst unario= require(\"./Expresion/Unario\");\r\nconst Sentencia= require(\"./Expresion/Sentencia\");\r\nconst termino= require(\"./Expresion/Termino\");\r\nconst identificador= require(\"./Expresion/Identificador\");\r\nconst multiplecoma= require(\"./Expresion/MultipleComa\");\r\n//instrucciones\r\nconst Llamada= require(\"./Instrucciones/Llamada\");\r\nconst Asignacion= require(\"./Instrucciones/Asignacion\");\r\nconst Declaracion= require(\"./Instrucciones/Declaracion\");\r\nconst Funcion= require(\"./Instrucciones/Funcion\");\r\nconst AsignacionEstructura= require(\"./Instrucciones/AsignacionEstructura\");\r\nconst Estructura= require(\"./Instrucciones/Estructura\");\r\nconst Etiqueta= require(\"./Instrucciones/Etiqueta\");\r\nconst Exit= require(\"./Instrucciones/Exit\");\r\nconst Print= require(\"./Instrucciones/Print\");\r\nconst SaltoCondicional= require(\"./Instrucciones/SaltoCondicional\");\r\nconst SaltoIncondicional= require(\"./Instrucciones/SaltoIncondicional\");\r\nconst Unset= require(\"./Instrucciones/Unset\");\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:\r\nbreak;\r\ncase 2:\r\nbreak;\r\ncase 3:return 54\r\nbreak;\r\ncase 4:return 77\r\nbreak;\r\ncase 5:return 25\r\nbreak;\r\ncase 6:return 78 \r\nbreak;\r\ncase 7:return 79        \r\nbreak;\r\ncase 8:return 33\r\nbreak;\r\ncase 9:return 30\r\nbreak;\r\ncase 10:return 'ABS'\r\nbreak;\r\ncase 11:return 38\r\nbreak;\r\ncase 12:return 39\r\nbreak;\r\ncase 13:return 40\r\nbreak;\r\ncase 14:return 36\r\nbreak;\r\ncase 15:return 31\r\nbreak;\r\ncase 16:return 63\r\nbreak;\r\ncase 17:return 'READ'\r\nbreak;\r\ncase 18:return 'ARRAY'\r\nbreak;\r\ncase 19:return 27\r\nbreak;\r\ncase 20:return \"STACK\"\r\nbreak;\r\ncase 21:return 80\r\nbreak;\r\ncase 22:return 8\r\nbreak;\r\ncase 23:return \"RETURN_INS\"\r\nbreak;\r\ncase 24:return 'NUMBER'\r\nbreak;\r\ncase 25:return 23\r\nbreak;\r\ncase 26:return 58\r\nbreak;\r\ncase 27:return 53\r\nbreak;\r\ncase 28:return 52\r\nbreak;\r\ncase 29:return 57\r\nbreak;\r\ncase 30:return 16\r\nbreak;\r\ncase 31:return 15\r\nbreak;\r\ncase 32:return 14;\r\nbreak;\r\ncase 33: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 56; \r\nbreak;\r\ncase 34: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 'CARACTER'; \r\nbreak;\r\ncase 35:return 55;\r\nbreak;\r\ncase 36:return 70\r\nbreak;\r\ncase 37:return 48\r\nbreak;\r\ncase 38:return 71\r\nbreak;\r\ncase 39:return 72\r\nbreak;\r\ncase 40:return 73\r\nbreak;\r\ncase 41:return 68\r\nbreak;\r\ncase 42:return 42\r\nbreak;\r\ncase 43:return 66\r\nbreak;\r\ncase 44:return 67\r\nbreak;\r\ncase 45:return 64\r\nbreak;\r\ncase 46:return 65\r\nbreak;\r\ncase 47:return 69\r\nbreak;\r\ncase 48:return 50\r\nbreak;\r\ncase 49:return 63\r\nbreak;\r\ncase 50:return 76\r\nbreak;\r\ncase 51:return 49\r\nbreak;\r\ncase 52:return 9\r\nbreak;\r\ncase 53:return 10\r\nbreak;\r\ncase 54:return 43\r\nbreak;\r\ncase 55:return 44\r\nbreak;\r\ncase 56:return 11\r\nbreak;\r\ncase 57:return 13\r\nbreak;\r\ncase 58:return 20\r\nbreak;\r\ncase 59:return 'VALCHAR';\r\nbreak;\r\ncase 60:return 'VALNUM';\r\nbreak;\r\ncase 61:return 'VALDEC';\r\nbreak;\r\ncase 62:return 59  \r\nbreak;\r\ncase 63:return 75     \r\nbreak;\r\ncase 64:return 61  \r\nbreak;\r\ncase 65:return 62  \r\nbreak;\r\ncase 66:return 22\r\nbreak;\r\ncase 67:return 34\r\nbreak;\r\ncase 68:return 74\r\nbreak;\r\ncase 69:return 'SHIFTIZQ'\r\nbreak;\r\ncase 70:return 5\r\nbreak;\r\ncase 71:inicio.listaErrores.push(new CNodoErrores.default(\"Lexico Optimizacion\",\"No se esperaba el caracter: \"+yy_.yytext,yy_.yylloc.first_line,yy_.yylloc.first_column)); console.log(\"Lexico, No se esperaba el caracter: \"+yy_.yytext +\" Linea: \"+ yy_.yylloc.first_line + \"Columna: \" + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i,/^(?:\\/\\/.*)/i,/^(?:([0-9]+(\\.[0-9]+)?))/i,/^(?:int\\b)/i,/^(?:double\\b)/i,/^(?:float\\b)/i,/^(?:char\\b)/i,/^(?:goto\\b)/i,/^(?:exit\\b)/i,/^(?:abs\\b)/i,/^(?:print\\b)/i,/^(?:printf\\b)/i,/^(?:snprintf\\b)/i,/^(?:unset\\b)/i,/^(?:if\\b)/i,/^(?:xor\\b)/i,/^(?:read\\b)/i,/^(?:array\\b)/i,/^(?:heap\\b)/i,/^(?:stack\\b)/i,/^(?:void\\b)/i,/^(?:main\\b)/i,/^(?:return\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:[$][t]([a-zA-Z_0-9])+)/i,/^(?:[$][v]([0-9]+)?)/i,/^(?:[s][p])/i,/^(?:[$][r][a]([0-9]+)?)/i,/^(?:[h][p])/i,/^(?:[<]([a-zA-Z\".\"]+)[>])/i,/^(?:#include\\b)/i,/^(?:([a-zA-Z])[a-zA-Z0-9_Ññáéíúó]*)/i,/^(?:\"[^\\\"]*\")/i,/^(?:'[^\\']*')/i,/^(?:[0-9]+(\\.[0-9]+)\\b)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:==)/i,/^(?:=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:xor\\b)/i,/^(?:\\\\\\^)/i,/^(?:~)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:,)/i,/^(?:%c\\b)/i,/^(?:%e\\b)/i,/^(?:%d\\b)/i,/^(?:&)/i,/^(?:\\|)/i,/^(?:&&)/i,/^(?:\\|\\|)/i,/^(?:;)/i,/^(?::)/i,/^(?:>>)/i,/^(?:<<)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = grammar;\r\nexports.Parser = grammar.Parser;\r\nexports.parse = function () { return grammar.parse.apply(grammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport Simboloxml from \"src/app/Backend/XML/Analizador/Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Aritmetica from '../Expresiones/Aritmetica';\r\nimport Identificador from '../Expresiones/Identificador';\r\nimport AtributoSimple from '../../../XPATH/Analizador/Instrucciones/AtributosSimples'\r\nimport SelectRoot from '../../../XPATH/Analizador/Instrucciones/SelectRoot';\r\nimport Todo from '../../../XPATH/Analizador/Instrucciones/Todo';\r\nimport Relacional from \"../Expresiones/Relacional\";\r\nimport ForSimple from \"./ForSimple\";\r\nconst inicio = require(\"../../../../componentes/contenido-inicio/contenido-inicio.component\")\r\n\r\nexport default class BarrasNodo extends Instruccion {\r\n\r\n  public Barra: string;\r\n  public Barra2: string;\r\n  public Operacion: Instruccion   //Nodo\r\n  contenido: string = \"\";\r\n  constructor(barra1: string, expresion: Instruccion, fila: number, columna: number, barra2?: string) {\r\n\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.Barra = barra1\r\n    this.Barra2 = barra2\r\n    this.Operacion = expresion\r\n  }\r\n  public getNodoAST(): nodoAST {\r\n    var nodo = new nodoAST('INSTRUCCION'); //PADRE SELECT\r\n    var nodsBarras = new nodoAST(this.Barra)\r\n    nodo.agregarHijoAST(nodsBarras)\r\n    if (this.Barra2 != null) {\r\n      /*nodo.agregarHijo(this.Barra2)*/\r\n      var nodsBarras2 = new nodoAST(this.Barra2)\r\n      nodo.agregarHijoAST(nodsBarras2)\r\n    }\r\n    if (this.Operacion != null) {\r\n\r\n      nodo.agregarHijoAST(this.Operacion.getNodoAST())\r\n    }\r\n\r\n    return nodo;\r\n  }\r\n\r\n\r\n  //BARRA: SELECCIONA DESDE EL NODO RAIZ\r\n  //DOBLE BARRA: SELECCIONA LOS NODOS QUE HAGAN MATCH EN EL DOCUMENTO NO IMPORTANDO DONDE ESTEN DESDE EL NODO ACTUAL \r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    //arbol.gettablaGlobal();\r\n    //BARRA\r\n    console.log('BARRA')\r\n    console.log(tabla)\r\n    let variable = this.Operacion.interpretar(arbol, tabla, tablaxml)\r\n    console.log(this.Operacion)\r\n    //if (variable != null) {\r\n    if (this.Barra2 == null) {\r\n      console.log(\"Aqui esta el arbol\");\r\n      let salidas: tablaSimbolosxml = new tablaSimbolosxml();\r\n      let cadena = ''\r\n      let error = ''\r\n\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          console.log(this.Operacion.cadena)\r\n          return this.Operacion.cadena\r\n        } else {\r\n          return \"No hay atributos\"\r\n        }\r\n      } else if (this.Operacion instanceof Aritmetica) {\r\n\r\n      } else if (this.Operacion instanceof Relacional) {\r\n        if (\r\n          this.Operacion.cond1.tipoDato.getTipo() == tipoDato.CADENA &&\r\n          this.Operacion.cond2.tipoDato.getTipo() != tipoDato.CADENA\r\n        ) {\r\n\r\n          ///SE HACE LA COMPARACION PARA RETORNAR SI ES DE BARRANODO Y HAY CADENA\r\n          for (var simb of tablaxml.getAnterior().getTabla()) {\r\n            var bloqueaceptado: Simbolo = simb\r\n            if (simb.getidentificador() == ForSimple.prototype.variableanterior) {\r\n\r\n              for (let key of simb.getvalor().getTabla()) {\r\n                try {\r\n                  for (let sim of key.getvalor().getTabla()) {\r\n\r\n                  }\r\n                } catch (error) {\r\n\r\n                  if (this.busquedaCondicion(variable.condicion1, key, variable.condicion2, variable.operador, this.Operacion.cond2.tipoDato)) {\r\n                    for (let where of simb.getvalor().getTabla()) {\r\n                      salidas.setVariable(where)\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n        } else if (\r\n          this.Operacion.cond2.tipoDato.getTipo() == tipoDato.CADENA &&\r\n          this.Operacion.cond1.tipoDato.getTipo() != tipoDato.CADENA\r\n        ) {\r\n          for (var simb of tablaxml.getAnterior().getTabla()) {\r\n            var bloqueaceptado: Simbolo = simb\r\n            if (simb.getidentificador() == ForSimple.prototype.variableanterior) {\r\n\r\n              for (let key of simb.getvalor().getTabla()) {\r\n                try {\r\n                  for (let sim of key.getvalor().getTabla()) {\r\n\r\n                  }\r\n                } catch (error) {\r\n\r\n                  if (this.busquedaCondicion(variable.condicion2, key, variable.condicion1, variable.operador, this.Operacion.cond2.tipoDato)) {\r\n                    for (let where of simb.getvalor().getTabla()) {\r\n                      salidas.setVariable(where)\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n        }else if (\r\n          this.Operacion.cond2.tipoDato.getTipo() == tipoDato.CADENA &&\r\n          this.Operacion.cond1.tipoDato.getTipo() == tipoDato.CADENA\r\n        ) {\r\n          var cond1= this.Operacion.cond1.interpretar(arbol,tabla,tablaxml)\r\n          var cond2= this.Operacion.cond2.interpretar(arbol,tabla,tablaxml)\r\n          var operador= this.Operacion.TipoOperando()\r\n          for (var simb of tablaxml.getAnterior().getTabla()) {\r\n            if (simb.getidentificador() == ForSimple.prototype.variableanterior) {\r\n\r\n              for (let key of simb.getvalor().getTabla()) {\r\n                try {\r\n                  for (let sim of key.getvalor().getTabla()) {\r\n\r\n                  }\r\n                } catch (error) {\r\n\r\n                  if (this.busquedaCondicion(cond1, key, cond2, operador, this.Operacion.cond2.tipoDato)) {\r\n                    for (let where of simb.getvalor().getTabla()) {\r\n                      salidas.setVariable(where)\r\n                    }\r\n                  }else if(this.busquedaCondicion(cond2, key, cond1, operador, this.Operacion.cond2.tipoDato)){\r\n                    for (let where of simb.getvalor().getTabla()) {\r\n                      salidas.setVariable(where)\r\n                    }\r\n                    \r\n                  }\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (salidas != null) {\r\n          return salidas\r\n        }\r\n      } else if (this.Operacion instanceof SelectRoot) {\r\n        if (variable === \".\") {\r\n          for (var key of tablaxml.getTabla()) {\r\n            salidas.setVariable(key)\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        } else {\r\n          //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR\r\n          var temporal = tablaxml.tablaAnterior\r\n          if (temporal != null) {\r\n\r\n            for (var i of temporal.tablaActual) {\r\n              console.log(inicio.ArbolGlobalReporte)\r\n              for (var b of inicio.ArbolGlobalReporte) {\r\n                if (b.identificador === i.identificador && b.entorno == \"Global\") {\r\n                  return \"Nodo no encontado: [object XMLDocument]\"\r\n                }\r\n              }\r\n              salidas.setVariable(i)\r\n            }\r\n          } else {\r\n            cadena = \"Nodo no encontado: [object XMLDocument]\"\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }\r\n      } else if (this.Operacion instanceof Todo) {\r\n        for (var key of tablaxml.getTabla()) {\r\n          salidas.setVariable(key)\r\n        }\r\n        if (cadena != '') {\r\n          return cadena\r\n        }\r\n        return salidas\r\n      } else {\r\n        var devolver: Array<Simboloxml> = new Array<Simboloxml>();\r\n        for (var key of tablaxml.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            ForSimple.prototype.variableanterior = variable\r\n            console.log(key.getidentificador())\r\n            try {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n            } catch (error) {\r\n              devolver.push(key)\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          } else {\r\n            error = \"Nodo no encontrado \";\r\n            console.log(error);\r\n          }\r\n        }\r\n        if (cadena != '') {\r\n          return devolver\r\n        } else if (error != '') {\r\n          return error\r\n        }\r\n        console.log(\"OBJETOSSALIDA\")\r\n        console.log(salidas)\r\n        salidas.setAnterior(tablaxml)\r\n        return salidas\r\n\r\n      }\r\n\r\n    } else {         // **************************************ESTE ES DOBLE BARRA******************************\r\n      console.log(\"entro doble barra\")\r\n      //DOBLE BARRA\r\n      let salidas = new tablaSimbolosxml();\r\n      let cadena = ''\r\n\r\n      /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          return this.Operacion.cadena\r\n        }\r\n        return variable\r\n      } else if (this.Operacion instanceof Todo) {\r\n      } else if (this.Operacion instanceof SelectRoot) {\r\n        if (variable === \".\") {\r\n          for (var key of tablaxml.getTabla()) {\r\n            salidas.setVariable(key)\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        } else {\r\n          //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR\r\n          var temporal = tabla.tablaAnterior\r\n          if (temporal != null) {\r\n\r\n            for (var i of temporal.tablaActual) {\r\n              console.log(inicio.ArbolGlobalReporte)\r\n              for (var b of inicio.ArbolGlobalReporte) {\r\n                if (b.identificador === i.identificador && b.entorno == \"Global\") {\r\n                  return \"Nodo no encontado: [object XMLDocument]\"\r\n                }\r\n              }\r\n              salidas.setVariable(i)\r\n            }\r\n          } else {\r\n            cadena = \"Nodo no encontado: [object XMLDocument]\"\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }\r\n      } else {\r\n\r\n        var devolver: Array<Simboloxml> = new Array<Simboloxml>();\r\n        for (var key of tablaxml.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            console.log(key.getidentificador())\r\n            try {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n            } catch (error) {\r\n              devolver.push(key)\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          } else {\r\n            console.log(\"NO SE ENCONTRO NODO\")\r\n          }\r\n        }\r\n        if (cadena != '') {\r\n          return devolver\r\n        }\r\n        console.log(\"OBJETOSSALIDA\")\r\n        console.log(salidas)\r\n        salidas.setAnterior(tablaxml)\r\n        return salidas\r\n      }\r\n    }\r\n\r\n  }\r\n  /**\r\n   * BUSQUEDA DE LA CONDICION CON ALGUNA ETIQUETA REALMENTE PARA LA FUNCION DE FOR Y LOS DERIVADOS DE WHERE\r\n   * @param id \r\n   * @param tabla \r\n   * @returns \r\n   */\r\n  busquedaCondicion(id: String, sim: Simboloxml, condicion2: any, operador: String, tipodato: Tipo): Boolean {\r\n    if (id == sim.getidentificador()) {\r\n      var condicion1 = this.cambiartipo(tipodato, sim.getvalor().trim())\r\n      return this.hacerOperacion(condicion1, operador, condicion2)\r\n    }\r\n    return null\r\n  }\r\n  /**\r\n   * ESTE HACE LA OPERACION Y DEVUELVE UN TRUE PARA \r\n   * @param cond1 \r\n   * @param Operador \r\n   * @param cond2 \r\n   * @returns \r\n   */\r\n  hacerOperacion(cond1: any, Operador: String, cond2: any): Boolean {\r\n    switch (Operador) {\r\n      case \"==\":\r\n        return cond1 == cond2;\r\n      case \"!=\":\r\n        return cond1 != cond2;\r\n      case \"<\":\r\n        return cond1 < cond2;\r\n      case \"<=\":\r\n        return cond1 <= cond2;\r\n      case \">\":\r\n        return cond1 > cond2;\r\n      case \">=\":\r\n        return cond1 >= cond2;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n  /**\r\n   * CAMBIAR TIPO PARA HACER COMPARACION\r\n   * @param tipodato \r\n   * @param valor \r\n   * @returns \r\n   */\r\n  cambiartipo(tipodato: Tipo, valor: any) {\r\n    switch (tipodato.getTipo()) {\r\n      case tipoDato.ENTERO:\r\n        return parseInt(valor);\r\n      case tipoDato.DECIMAL:\r\n        return parseFloat(valor);\r\n      case tipoDato.CARACTER:\r\n        var da = valor + '';\r\n        var res = da.charCodeAt(0);\r\n        return res;\r\n      case tipoDato.BOOLEANO:\r\n        let dats = valor + '';\r\n        let otr = dats.toLowerCase();\r\n        return parseInt(otr);\r\n      case tipoDato.CADENA:\r\n        return '' + valor;\r\n    }\r\n  }\r\n  /////////////////////////////////FALTA COMPONER ESTA PARTE PARA QUE TAMBIEN HAGA LA COMPARACION CON CODIGO 3D\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    let variable = this.Operacion.codigo3D(arbol, tabla);\r\n    console.log(this.Operacion)\r\n    //if (variable != null) {\r\n    if (this.Barra2 == null) {\r\n      console.log(\"Aqui esta el arbol\");\r\n      let salidas = new tablaSimbolos();\r\n      let cadena = ''\r\n      let error = ''\r\n\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          console.log(this.Operacion.cadena)\r\n          return this.Operacion.cadena\r\n        }\r\n        return variable\r\n      } else if (this.Operacion instanceof Aritmetica) {\r\n\r\n      } else {\r\n        for (var key of tabla.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          } else {\r\n            error = \"Nodo no encontrado \";\r\n            console.log(error);\r\n          }\r\n\r\n        }\r\n        if (cadena != '') {\r\n          return cadena\r\n        } else if (error != '') {\r\n          return error\r\n        }\r\n        console.log(\"OBJETOSSALIDA\")\r\n        console.log(salidas)\r\n        return salidas\r\n\r\n      }\r\n\r\n    } else {\r\n      console.log(\"entro doble barra\")\r\n      //DOBLE BARRA\r\n      let salidas = new tablaSimbolos();\r\n      let cadena = ''\r\n\r\n      /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          return this.Operacion.cadena\r\n        }\r\n        return variable\r\n      } else {\r\n\r\n        for (var key of tabla.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          console.log(\"OBJETOSSALIDA\")\r\n          console.log(salidas)\r\n          return salidas\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport { reporteOp } from \"../Reportes/reporteOp\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class SaltoCondicional extends Instruccion {\r\n\r\n    public identificadorVerdadero: string;\r\n    public identificadorFalso: string;\r\n    public Expresion: Instruccion;\r\n    public saltoVerdadero: string;\r\n    constructor(expresion:Instruccion, identificadorVerdadero: string,identificadorFalso: string,saltoVerdadero:string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificadorVerdadero = identificadorVerdadero;\r\n        this.identificadorFalso = identificadorFalso;\r\n        this.Expresion= expresion;\r\n        this.saltoVerdadero=saltoVerdadero;\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        let a=this.Expresion.interpretar(arbol,tabla);\r\n     \r\n        if(!isNaN(a.operadorizq)&&!isNaN(a.operadorder)){\r\n            // los operadores son numeros\r\n            switch(a.operador){\r\n                case \"==\": \r\n              \r\n                    if(a.operadorizq===a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                            return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n                case \"<=\": \r\n                if(a.operadorizq<=a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n                case \">=\": \r\n                if(a.operadorizq>=a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n                case \"<\": \r\n                if(a.operadorizq<a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n                case \">\": \r\n                if(a.operadorizq>a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n                case \"!=\": \r\n                if(a.operadorizq!==a.operadorder){\r\n                    let report = new reporteOp(\"Eliminar salto falso\", \"Regla 3\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                    `goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`, this.fila+\"\", this.columna.toString())\r\n                    arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                    else{\r\n                        let report = new reporteOp(\"Eliminar salto verdadero\", \"Regla 4\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                        `goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                        arbol.setReporte(report);\r\n                        return ` goto ${this.identificadorFalso.toUpperCase()};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n                    }\r\n                break;\r\n    \r\n            }\r\n\r\n\r\n        }else{\r\n        switch(a.operador){\r\n            case \"==\": \r\n          \r\n                if(a.operadorizq===a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}!=${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                    return `if(${a.operadorizq}!=${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n                }\r\n            break;\r\n            case \"<=\": \r\n            if(a.operadorizq<=a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                return `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n            }\r\n            break;\r\n            case \">=\": \r\n            if(a.operadorizq>=a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                return `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n            }\r\n            break;\r\n            case \"<\": \r\n            if(a.operadorizq<a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                return `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n            }\r\n            break;\r\n            case \">\": \r\n            if(a.operadorizq>a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                return `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n            }\r\n            break;\r\n            case \"!=\": \r\n            if(a.operadorizq!==a.operadorder){\r\n                let report = new reporteOp(\"Negacion del if\", \"Regla 2\",`if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`,\r\n                `if(${a.operadorizq}==${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila+\"\", this.columna.toString())\r\n                arbol.setReporte(report);\r\n                return `if(${a.operadorizq}==${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`\r\n            }\r\n            break;\r\n\r\n        }\r\n    }\r\n        return `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\\ngoto ${this.identificadorFalso};\\n${this.saltoVerdadero.toUpperCase()}:`\r\n \r\n    }\r\n\r\n}","export default class nodoAST {\r\n  private listaNodos: Array<nodoAST>;\r\n  private valor: string;\r\n\r\n  constructor(valor: string) {\r\n    this.listaNodos = new Array<nodoAST>();\r\n    this.valor = valor;\r\n  }\r\n  public agregarHijo(val: string, ambito?: string, operador?: number): void {\r\n    if (ambito != undefined) {\r\n      switch (ambito) {\r\n        case 'ar':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '+';\r\n              break;\r\n            case 1:\r\n              val = '-';\r\n              break;\r\n            case 2:\r\n              val = '*';\r\n              break;\r\n            case 3:\r\n              val = '/';\r\n              break;\r\n            case 4:\r\n              val = '^';\r\n              break;\r\n            case 5:\r\n              val = '%';\r\n              break;\r\n          }\r\n          break;\r\n        case 'log':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '||';\r\n              break;\r\n            case 1:\r\n              val = '&&';\r\n              break;\r\n            case 2:\r\n              val = '!';\r\n              break;\r\n          }\r\n          break;\r\n        case 'rel':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '==';\r\n              break;\r\n            case 1:\r\n              val = '!=';\r\n              break;\r\n            case 2:\r\n              val = '>';\r\n              break;\r\n            case 3:\r\n              val = '<';\r\n              break;\r\n            case 4:\r\n              val = '>=';\r\n              break;\r\n            case 5:\r\n              val = '<=';\r\n              break;\r\n          }\r\n          break;\r\n      }\r\n      this.listaNodos.push(new nodoAST(val));\r\n    } else this.listaNodos.push(new nodoAST(val));\r\n  }\r\n  public agregarHijoAST(hijo: nodoAST | undefined): void {\r\n    if (hijo != undefined) this.listaNodos.push(hijo);\r\n  }\r\n  public getValor(): string {\r\n    return this.valor;\r\n  }\r\n  public getHijos(): Array<nodoAST> {\r\n    return this.listaNodos;\r\n  }\r\n}\r\n","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from 'src/app/Backend/XPATH/Analizador/Simbolos/Tipo';\r\n\r\n\r\nexport default class Identificador extends Instruccion {\r\n  public identificador: string;\r\n  constructor(identificador: string, fila: number, columna: number) {\r\n    super(new Tipo(tipoDato.CADENA), fila, columna);\r\n    this.identificador = identificador.toLowerCase();\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST(this.identificador);\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    return this.identificador;\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport BarrasNodo from \"src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Variable from \"../Expresiones/Variable\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport CondicionSimple from \"./CondicionSimple\";\r\n\r\nexport default class IfFuncion extends Instruccion {\r\n    public condicion1: Instruccion;\r\n    public instruccionThen: Array<Instruccion> | null;\r\n    public condicion2: Instruccion;\r\n    public instruccionThen2: Array<Instruccion> | null;\r\n    public instruccionElse: Instruccion | null;\r\n\r\n\r\n    constructor(condicion1: Instruccion, instruccionThen: Array<Instruccion>, condicion2: Instruccion, instruccionThen2: Array<Instruccion>, instruccionElse: Instruccion, linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.condicion1 = condicion1;\r\n        this.instruccionThen = instruccionThen;\r\n        this.condicion2 = condicion2;\r\n        this.instruccionThen2 = instruccionThen2;\r\n        this.instruccionElse = instruccionElse;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var value: any;\r\n        value = this.condicion1.interpretar(arbol, tabla, tablaxml);\r\n        console.log(\"condicion 1\")\r\n        console.log(value)\r\n\r\n        var result = null;\r\n        if (Boolean(value)) {\r\n            for (let m of this.instruccionThen) {\r\n                result = m.interpretar(arbol, tabla, tablaxml)\r\n\r\n            }\r\n        } else {\r\n            var value2: any\r\n            value2 = this.condicion2.interpretar(arbol, tabla, tablaxml)\r\n            console.log(\"condicion2\")\r\n            console.log(value2)\r\n            if (Boolean(value2)) {\r\n                for (let n of this.instruccionThen2) {\r\n                    result = n.interpretar(arbol, tabla, tablaxml)\r\n\r\n                }\r\n            } else {\r\n                if (this.instruccionElse instanceof Instruccion) {\r\n                    if (this.instruccionElse instanceof Variable) {\r\n                        result = this.instruccionElse.interpretar(arbol, tabla, tablaxml);\r\n                        var buscar = tabla.getVariable(result);\r\n                        if (buscar != null) {\r\n                            result = buscar.getvalor()\r\n                            return buscar\r\n                        }\r\n                    } else {\r\n                        result = this.instruccionElse.interpretar(arbol, tabla, tablaxml);\r\n\r\n                    }\r\n                } else {\r\n                    result = this.instruccionElse\r\n                }\r\n                console.log(result)\r\n\r\n            }\r\n        }\r\n        return result;\r\n\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Aritmetica extends Instruccion {\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  private operando1: Instruccion | undefined;\r\n  private operando2: Instruccion | undefined;\r\n  private operandoUnico: Instruccion | undefined;\r\n  private operador: Operadores;\r\n\r\n  constructor(\r\n    operador: Operadores,\r\n    fila: number,\r\n    columna: number,\r\n    op1: Instruccion,\r\n    op2?: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.operador = operador;\r\n    if (!op2) this.operandoUnico = op1;\r\n    else {\r\n      this.operando1 = op1;\r\n      this.operando2 = op2;\r\n    }\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST('ARITMETICA');\r\n    if (this.operandoUnico != null) {\r\n      nodo.agregarHijo(this.operador + '');\r\n      nodo.agregarHijoAST(this.operandoUnico.getNodosAST());\r\n    } else {\r\n      nodo.agregarHijoAST(this.operando1?.getNodosAST());\r\n      nodo.agregarHijo(this.operador + '', 'ar', this.operador);\r\n      nodo.agregarHijoAST(this.operando2?.getNodosAST());\r\n    }\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    let izq, der, uno;\r\n    izq = der = uno = null;\r\n    if (this.operandoUnico != null) {\r\n      uno = this.operandoUnico.interpretar(arbol, tabla);\r\n      if (uno instanceof NodoErrores) return uno;\r\n    } else {\r\n      izq = this.operando1?.interpretar(arbol, tabla);\r\n      if (izq instanceof NodoErrores) return izq;\r\n      der = this.operando2?.interpretar(arbol, tabla);\r\n      if (der instanceof NodoErrores) return der;\r\n    }\r\n    switch (this.operador) {\r\n      case Operadores.SUMA:\r\n        return this.operador1Suma(izq, der);\r\n      case Operadores.RESTA:\r\n        return this.operador1Resta(izq, der);\r\n      case Operadores.MULTIPLICACION:\r\n        return this.operador1Multi(izq, der);\r\n      case Operadores.DIVISION:\r\n        return this.operador1Division(izq, der);\r\n      case Operadores.MODULADOR:\r\n        return this.operador1Mod(izq, der);\r\n      case Operadores.MENOSNUM:\r\n        return this.opMenosUnario(uno);\r\n      default:\r\n        return new NodoErrores(\r\n          'ERROR SEMANTICO',\r\n          'OPERADOR INVALIDO',\r\n          this.fila,\r\n          this.columna\r\n        );\r\n    }\r\n  }\r\n\r\n  /*----------------------------------------------------------MENOSUNARIO------------------------------------------------- */\r\n  private opMenosUnario(izq: any) {\r\n    let opUn = this.operandoUnico?.tipoDato.getTipo();\r\n    switch (opUn) {\r\n      case tipoDato.ENTERO:\r\n        this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n        return parseInt(izq) * -1;\r\n      case tipoDato.DECIMAL:\r\n        this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n        return parseFloat(izq) * -1.0;\r\n    }\r\n  }\r\n  /*----------------------------------------------------------SUMA------------------------------------------------- */\r\n  private operador1Suma(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n      op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Suma(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Suma(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Suma(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Suma(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Suma(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Suma(numero: number, op2: any, izq: any, der: any) {\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) + parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(izq) + 1 : parseInt(izq);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) + res;\r\n      }\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseFloat(izq) + 1 : parseFloat(izq);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) + res;\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = izq + '';\r\n          let otr = dats.toLowerCase();\r\n          if (otr == 'true') return parseInt(der) + 1;\r\n          return parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats1 = izq + '';\r\n          let otr1 = dats1.toLowerCase();\r\n          return otr1 == 'true' ? parseFloat(der) + 1 : parseFloat(der);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.DECIMAL: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.BOOLEANO: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var dato = der;\r\n          return izq + '' + dato;\r\n      }\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 + parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 + parseFloat(der);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var otro11 = izq;\r\n          return otro11 + '' + der;\r\n        case tipoDato.CARACTER: //retorna cadena\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var otro = der;\r\n          var otro1 = izq;\r\n          return otro1 + '' + otro;\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    }\r\n  }\r\n  /*----------------------------------------------------------RESTA------------------------------------------------- */\r\n  private operador1Resta(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n      op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Resta(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Resta(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Resta(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Resta(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Resta(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Resta(numero: number, op2: any, izq: any, der: any) {\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) - parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(izq) - 1 : parseInt(izq);\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) - res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseFloat(izq) - 1 : parseFloat(izq);\r\n        case tipoDato.CARACTER: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) - res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = izq + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(der) - 1 : parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats1 = izq + '';\r\n          let otr1 = dats1.toLowerCase();\r\n          return otr1 == 'true' ? parseFloat(der) - 1 : parseFloat(der);\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 - parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 - parseFloat(der);\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    }\r\n  }\r\n  /*----------------------------------------------------------MULTIPLICACION------------------------------------------------- */\r\n  private operador1Multi(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n      op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Multi(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Multi(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Multi(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Multi(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Multi(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Multi(numero: number, op2: any, izq: any, der: any) {\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) * parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) * res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.CARACTER: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) * res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 * parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 * parseFloat(der);\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    }\r\n  }\r\n  /*----------------------------------------------------------DIVISION------------------------------------------------- */\r\n  private operador1Division(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n      op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Division(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Division(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Division(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Division(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Division(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Division(numero: number, op2: any, izq: any, der: any) {\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseInt(izq) / parseInt(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return res != 0\r\n            ? parseInt(izq) / res\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.CARACTER: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return der != 0\r\n            ? parseFloat(izq) / res\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return der != 0\r\n            ? res1 / parseInt(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return der != 0\r\n            ? res1 / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    }\r\n  }\r\n  \r\n  /*----------------------------------------------------------MODULACION------------------------------------------------- */\r\n  private operador1Mod(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n      op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Mod(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Mod(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Mod(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Mod(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Mod(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Mod(numero: number, op2: any, izq: any, der: any) {\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) % parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n        op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    }\r\n  }\r\n}\r\nexport enum Operadores {\r\n  SUMA,\r\n  RESTA,\r\n  MULTIPLICACION,\r\n  DIVISION,\r\n  POTENCIA,\r\n  MODULADOR,\r\n  MENOSNUM,\r\n}\r\n","import tablaSimbolos from './tablaSimbolos';\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport { reporteTabla } from '../Reportes/reporteTabla';\r\nimport obtenerValor from '../Reportes/cambiarTipo';\r\nimport Objeto from '../Expresiones/Objeto';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport Atributo from '../Expresiones/Atributo';\r\nexport default class Arbol {\r\n  private instrucciones: Array<Instruccion>;\r\n\r\n  private NodoErrores: Array<NodoErrores>;\r\n\r\n  public listaSimbolos: Array<reporteTabla>;\r\n  private dot: string;\r\n  private c: number;\r\n  private encoding: String;\r\n  /**CODIGO DE 3 DIRECCIONES */\r\n  public codigo3d: Array<String>;\r\n  public Encabezadocodigo3d: Array<String>;\r\n  contadort: number;\r\n  etiquetasL: number;\r\n  contadorP: number;\r\n  contadorS: number;\r\n\r\n  public getEncoding(): String {\r\n    return this.encoding;\r\n  }\r\n\r\n  public setEncoding(encoding: String) {\r\n    this.encoding = encoding;\r\n  }\r\n\r\n  public getSimbolos(): Array<reporteTabla> {\r\n    return this.listaSimbolos;\r\n  }\r\n\r\n\r\n  public BuscarTipo(identificador: String): String {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador() == identificador) {\r\n        return elemento.getTipo().toString();\r\n      }\r\n    }\r\n\r\n    return 'as';\r\n  }\r\n\r\n\r\n\r\n\r\n  public actualizarTabla(identificador: string, linea: string, columna: string): boolean {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador().toString() == identificador) {\r\n        elemento.setContenido(linea);\r\n        elemento.setLinea(linea);\r\n        elemento.setColumna(linea);\r\n        elemento.setEntorno(identificador);\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }/*\r\npublic BuscarTipo(identificador: string): string {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador() == identificador.toLowerCase()) {\r\n        return elemento.getForma().toString();\r\n      }\r\n    }\r\n    return 'as';\r\n  }*/\r\n\r\n\r\n  /* public getFuncion(identificador: String) {\r\n     for (let f of this.instrucciones) {\r\n       if (f instanceof Objeto) {\r\n         if (\r\n           identificador.toLowerCase() ==\r\n           (<Objeto>f).identificador.toLowerCase()\r\n         ) {\r\n           if (\r\n             !this.actualizarTabla(\r\n               f.identificador.toString(),\r\n               '',\r\n               f.fila.toString(),\r\n               '',\r\n               f.columna.toString()\r\n             )\r\n           ) {\r\n             let nuevoSimbolo = new reporteTabla(\r\n               f.identificador,\r\n               '',\r\n               'MetodoCreacion',\r\n               'void',\r\n               '',\r\n               f.fila.toString(),\r\n               f.columna.toString()\r\n             );\r\n             this.listaSimbolos.push(nuevoSimbolo);\r\n           }\r\n \r\n           return f;\r\n         }\r\n       }\r\n     }\r\n   }*/\r\n\r\n  public getNodoErrores(): Array<NodoErrores> {\r\n    return this.NodoErrores;\r\n  }\r\n  public setNodoErrores(value: Array<NodoErrores>) {\r\n    this.NodoErrores = value;\r\n  }\r\n\r\n\r\n\r\n  public getinstrucciones(): Array<Instruccion> {\r\n    return this.instrucciones;\r\n  }\r\n  public setinstrucciones(value: Array<Instruccion>) {\r\n    this.instrucciones = value;\r\n  }\r\n  private consola: String = '';\r\n  public getconsola(): String {\r\n    return this.consola;\r\n  }\r\n  public setconsola(value: String) {\r\n    this.consola = value;\r\n  }\r\n  public actualizaConsola(uptodate: String) {\r\n    this.consola = `${this.consola}${uptodate}\\n`;\r\n  }\r\n  private tablaGlobal: tablaSimbolos;\r\n  public gettablaGlobal(): tablaSimbolos {\r\n    return this.tablaGlobal;\r\n  }\r\n  public settablaGlobal(value: tablaSimbolos) {\r\n    this.tablaGlobal = value;\r\n  }\r\n\r\n  constructor(instrucciones: Array<Instruccion>) {\r\n    this.instrucciones = instrucciones;\r\n    this.consola = '';\r\n    this.tablaGlobal = new tablaSimbolos();\r\n    this.NodoErrores = new Array<NodoErrores>();\r\n    this.listaSimbolos = new Array<reporteTabla>();\r\n    this.dot = \"\"\r\n    this.c = 0\r\n    /*CODIGO 3 DIRECCIONES*/\r\n    this.codigo3d = new Array<String>();\r\n    this.Encabezadocodigo3d = new Array<String>();\r\n    this.Encabezadocodigo3d.push(\"double heap[30101999];\");\r\n    this.Encabezadocodigo3d.push(\"double stack[30101999];\");\r\n    this.Encabezadocodigo3d.push(\"char Numero[500];\");\r\n\r\n    this.Encabezadocodigo3d.push(\"double hp;\");\r\n    this.Encabezadocodigo3d.push(\"double sp;\");\r\n\r\n    this.Encabezadocodigo3d.push(\"void potencia(){\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>0)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t2*$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t1-1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // lafuncion imprimir\r\n    this.Encabezadocodigo3d.push(\"void imprimirString(){\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",(int)$t1);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // metodo guardar en hepp el string\r\n    this.Encabezadocodigo3d.push(\"void guardarString(){\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"hp=hp+1;\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // numero a string\r\n    this.Encabezadocodigo3d.push(\"void NumberToString(){\");\r\n    this.Encabezadocodigo3d.push('snprintf(Numero, 500, \"%f\", $t2);');\r\n    this.Encabezadocodigo3d.push(\"$t3=0;\");\r\n    this.Encabezadocodigo3d.push(\"$t6=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==0) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==46) goto L2;\"); // si es un punto\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t4;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t3=$t3+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t6=$t6+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // aqui son los decimales\r\n    this.Encabezadocodigo3d.push(\"$t5=$t3;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t3=$t3+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==48)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"if($t5>$t6)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t6];\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t4;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t6=$t6+1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t5<$t6)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t5>=$t6)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // bool a string\r\n    this.Encabezadocodigo3d.push(\"void BooleanToString(){\");\r\n    this.Encabezadocodigo3d.push('snprintf(Numero, 500, \"%f\", $t2);');\r\n    this.Encabezadocodigo3d.push(\"$t3=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==49) goto L1;\"); // 49 es 1\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\"); // imprimir true\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=116;\"); //t\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=114;\"); //r\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=117;\"); //u\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=101;\"); //e\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // imprimir false\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=102;\");  //f\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=97;\"); //a\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=108;\"); //l\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=115;\"); //s\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=101;\"); //e\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n\r\n    // concatenarString\r\n    this.Encabezadocodigo3d.push(\"void concatenarString(){\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");// el valor del caracter\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");// el valor del caracter\r\n    this.Encabezadocodigo3d.push(\"if($t1==0) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)hp]=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"hp=hp+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // cantidadString\r\n    this.Encabezadocodigo3d.push(\"void tamanioString(){\");\r\n    this.Encabezadocodigo3d.push(\"$t4=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-3) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // comparar string\r\n    this.Encabezadocodigo3d.push(\"void compararString(){\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"$t3=heap[(int)$t1];\");\r\n    this.Encabezadocodigo3d.push(\"if($t2!=$t3)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"if($t2==-1) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t1+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=0;\");\r\n    this.Encabezadocodigo3d.push(\"goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=1;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // charat\r\n    this.Encabezadocodigo3d.push(\"void CharAt(){\");\r\n    this.Encabezadocodigo3d.push(\"$t5=0;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=-1;\"); // contador\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-3) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t3==$t4) goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t5=1;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // toLowerCase\r\n    this.Encabezadocodigo3d.push(\"void toLowerCase(){\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");// salida\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<91)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>64)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t1+32;\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    //toUpperCase\r\n    this.Encabezadocodigo3d.push(\"void toUpperCase(){\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");// salida\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<123)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>96)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t1-32;\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    //imprimir Arreglo\r\n    this.Encabezadocodigo3d.push(\"void PrintArreglo(){\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==240)goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"// 240 es un numero para ver si el arreglo tiene VALORES\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==241)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"// 241 es un numero donde muestra la posicion de otro arreglo\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==242)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"// 242 es un numero donde muestra la posicion de otro arreglo\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==239)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==238)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==237)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");// es un string\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // es un numero\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"$t8=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");// usar t7\r\n    this.Encabezadocodigo3d.push(\"$t7=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"NumberToString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=-1;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t7;\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t8;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t8=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");// usar t7\r\n    this.Encabezadocodigo3d.push(\"$t7=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"BooleanToString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=-1;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t7;\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t8;\");\r\n    this.Encabezadocodigo3d.push(\"goto L3;\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+3;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t9=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"PrintArreglo();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t9;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0-2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+3;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t10=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"PrintArreglo();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t10;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0-2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L20:\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",10);\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // obtener la pocicion en el arreglo\r\n    this.Encabezadocodigo3d.push(\"void ObtenerPosArreglo(){\");\r\n    this.Encabezadocodigo3d.push(\"if($t0==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t0==-2)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<=$t2)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t5=2+$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+$t5;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L20:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=-1;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    this.contadort = 15;//T\r\n    this.etiquetasL = 5;//L\r\n    this.contadorP = 0;\r\n    this.contadorS = 0;\r\n  }\r\n\r\n  public getDot(raiz: nodoAST) {\r\n    this.dot = \"\";\r\n    this.dot += \"digraph {\\n\";\r\n    this.dot += \"n0[label=\\\"\" + raiz.getValor().replace(\"\\\"\", \"\\\\\\\"\") + \"\\\"];\\n\";\r\n    this.c = 1;\r\n    this.recorrerAST(\"n0\", raiz);\r\n    this.dot += \"}\";\r\n    return this.dot;\r\n  }\r\n\r\n  public recorrerAST(padre: String, nPadre: nodoAST) {\r\n    for (let hijo of nPadre.getHijos()) {\r\n      var nombreHijo = \"n\" + this.c;\r\n      this.dot += nombreHijo + \"[label=\\\"\" + hijo.getValor().replace(\"\\\"\", \"\\\\\\\"\") + \"\\\"];\\n\";\r\n      this.dot += padre + \"->\" + nombreHijo + \";\\n\";\r\n      this.c++;\r\n      this.recorrerAST(nombreHijo, hijo);\r\n    }\r\n  }\r\n  getEtiqueta() {\r\n    return this.etiquetasL++;\r\n  }\r\n  getContadort() {\r\n    return this.contadort++;\r\n  }\r\n  getSTACK() {\r\n    return this.contadorS++;\r\n  }\r\n}\r\n","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class SelectRoot extends Instruccion {\r\n    public Operacion: string;\r\n    public Operacion2:string;\r\n    constructor(select: string, fila: number, columna: number,select2?:string){\r\n\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Operacion = select\r\n        this.Operacion2= select2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        if(this.Operacion2!=null){\r\n            return \"..\"\r\n        }else{\r\n            return this.Operacion\r\n        }\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo= new nodoAST(\"ALL\"); //PADRE SELECT\r\n        var nodoselect= new nodoAST(this.Operacion)\r\n        nodo.agregarHijoAST(nodoselect)\r\n        if(this.Operacion2!=null){\r\n            var nodohijo2= new nodoAST(this.Operacion2); //PADRE SELECT\r\n            nodo.agregarHijoAST(nodohijo2)\r\n        }\r\n        \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport BarrasNodo from \"src/app/Backend/XPATH/Analizador/Instrucciones/BarrasNodo\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class CondicionSimple extends Instruccion {\r\n  \r\n    public variables: String;\r\n    public consulta:Instruccion[];\r\n    public recursivo:Instruccion;\r\n    constructor(variables: String, consulta:Instruccion[], linea: number, columna: number, recursivo:Instruccion) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.consulta = consulta;\r\n        this.variables=variables;\r\n        this.recursivo= recursivo;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if(this.consulta!=null){\r\n        return {variables: this.variables, consulta: this.consulta}\r\n        }else{\r\n            if(this.recursivo!=null){\r\n                return {variables: this.variables, recursivo: this.recursivo}\r\n            }\r\n        }\r\n\r\n    }\r\n    public getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Logica extends Instruccion {\r\n\r\n    private expresion1: Instruccion;\r\n    private operando: String;\r\n    private expresion2: Instruccion;\r\n    constructor(expresion1:Instruccion,operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion1 = expresion1\r\n        this.operando=operando\r\n        this.expresion2= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        var operadorizq = this.expresion1.interpretar(arbol, tabla);\r\n        var operadorder = this.expresion2.interpretar(arbol, tabla);\r\n        if (operadorizq != null && operadorder != null) {\r\n            if (this.expresion1 instanceof Termino && this.expresion2 instanceof Termino) {\r\n                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n            }else {\r\n                if (operadorder.contenido != null && operadorizq.contenido != null) {\r\n                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                }else{\r\n                    if (operadorder.operadorder != null) {\r\n                        if (this.expresion1 instanceof Termino) {\r\n                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (operadorizq.operadorder != null) {\r\n                        if (this.expresion2 instanceof Termino) {\r\n                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","/* (ignored) */","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Bit extends Instruccion {\r\n\r\n    private expresion1: Instruccion;\r\n    private operando: String;\r\n    private expresion2: Instruccion;\r\n    constructor(expresion1:Instruccion,operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion1 = expresion1\r\n        this.operando=operando\r\n        this.expresion2= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        var operadorizq = this.expresion1.interpretar(arbol, tabla);\r\n        var operadorder = this.expresion2.interpretar(arbol, tabla);\r\n        if (operadorizq != null && operadorder != null) {\r\n            if (this.expresion1 instanceof Termino && this.expresion2 instanceof Termino) {\r\n                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n            }else {\r\n                if (operadorder.contenido != null && operadorizq.contenido != null) {\r\n                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                }else{\r\n                    if (operadorder.operadorder != null) {\r\n                        if (this.expresion1 instanceof Termino) {\r\n                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (operadorizq.operadorder != null) {\r\n                        if (this.expresion2 instanceof Termino) {\r\n                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","/* (ignored) */","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Estructura extends Instruccion {\r\n\r\n    private Temporales: Instruccion;\r\n    private l_corhetes: Instruccion;\r\n    constructor(termino:Instruccion, l_corchetes: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Temporales = termino\r\n        this.l_corhetes= l_corchetes\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // si es termino y si es expresion las instrucciones\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","/* (ignored) */","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InicioService {\r\n  path: String;\r\n  constructor(private http: HttpClient) {\r\n    this.path = 'http://localhost:3000';\r\n  }\r\n\r\n  obtenerAlgo(): Observable<any> {\r\n    return this.http.get(this.path + '/obtenerAlgo', {});\r\n  }\r\n  compilarCodigo(codigo): Observable<any> {\r\n    return this.http.post(this.path + '/interpretar', {\r\n      entrada: codigo,\r\n    });\r\n  }\r\n  graficarAst(): Observable<any> {\r\n    return this.http.get(`${this.path}/graficar`, {});\r\n  }\r\n}\r\n","export default class NodoErrores {\r\n    private tipoError: String;\r\n    private desc: String;\r\n    private fila: number;\r\n    private columna: number;\r\n    public getDesc(): String {\r\n      return this.desc;\r\n    }\r\n    public getTipoError(): String {\r\n      return this.tipoError;\r\n    }\r\n    public getcolumna(): number {\r\n      return this.columna;\r\n    }\r\n    public getFila(): number {\r\n      return this.fila;\r\n    }\r\n    constructor(tipo: String, desc: String, fila: number, columna: number) {\r\n      this.tipoError = tipo;\r\n      this.desc = desc;\r\n      this.fila = fila;\r\n      this.columna = columna;\r\n    }\r\n    public returnError(): String {\r\n      return (\r\n        'Se obtuvo: ' +\r\n        this.tipoError +\r\n        ' desc:{' +\r\n        this.desc +\r\n        '} en la fila: ' +\r\n        this.fila +\r\n        ' en la columna: ' +\r\n        this.columna +\r\n        '\\n'\r\n      );\r\n    }\r\n  }\r\n  ","export default class nodoAST {\r\n  private listaNodos: Array<nodoAST>;\r\n  private valor: string;\r\n\r\n  constructor(valor: string) {\r\n    this.listaNodos = new Array<nodoAST>();\r\n    this.valor = valor;\r\n  }\r\n  public agregarHijo(val: string, ambito?: string, operador?: number): void {\r\n    if (ambito != undefined) {\r\n      switch (ambito) {\r\n        case 'ar':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '+';\r\n              break;\r\n            case 1:\r\n              val = '-';\r\n              break;\r\n            case 2:\r\n              val = '*';\r\n              break;\r\n            case 3:\r\n              val = '/';\r\n              break;\r\n            case 4:\r\n              val = '^';\r\n              break;\r\n            case 5:\r\n              val = '%';\r\n              break;\r\n          }\r\n          break;\r\n        case 'log':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '||';\r\n              break;\r\n            case 1:\r\n              val = '&&';\r\n              break;\r\n            case 2:\r\n              val = '!';\r\n              break;\r\n          }\r\n          break;\r\n        case 'rel':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '==';\r\n              break;\r\n            case 1:\r\n              val = '!=';\r\n              break;\r\n            case 2:\r\n              val = '>';\r\n              break;\r\n            case 3:\r\n              val = '<';\r\n              break;\r\n            case 4:\r\n              val = '>=';\r\n              break;\r\n            case 5:\r\n              val = '<=';\r\n              break;\r\n          }\r\n          break;\r\n      }\r\n      this.listaNodos.push(new nodoAST(val));\r\n    } else this.listaNodos.push(new nodoAST(val));\r\n  }\r\n  public agregarHijoAST(hijo: nodoAST | undefined): void {\r\n    if (hijo != undefined) this.listaNodos.push(hijo);\r\n  }\r\n  public getValor(): string {\r\n    return this.valor;\r\n  }\r\n  public getHijos(): Array<nodoAST> {\r\n    return this.listaNodos;\r\n  }\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Sentencia extends Instruccion {\r\n    private expresion: Instruccion;\r\n    constructor(expresion: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion= expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // return; o return expresion;\r\n        let cadena=\"\"\r\n        if(this.expresion!=null){\r\n            let temp= this.expresion.interpretar(arbol,tabla);\r\n            cadena+=\"return \"+temp+\";\"\r\n        }else{\r\n            cadena+=\"return;\"\r\n        }\r\n        return cadena;\r\n    }\r\n\r\n}","/* (ignored) */","/* (ignored) */","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XMLgraphDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,4],$V2=[1,10],$V3=[2,13],$V4=[12,14,15],$V5=[5,10,16],$V6=[2,6],$V7=[1,18],$V8=[5,9,10,13,16],$V9=[10,12,14,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"OBJETO\":4,\"EOF\":5,\"INSTRUCCION\":6,\"CUERPO\":7,\"OBJETOS\":8,\"MENORQUEESPECIAL\":9,\"IDENTIFICADOR\":10,\"L_ATRIBUTOS\":11,\"MAYORQUEESPECIAL\":12,\"MENORQUE\":13,\"SELFCLOSE\":14,\"MAYORQUE\":15,\"SALIDA\":16,\"ATRIBUTO\":17,\"IGUAL\":18,\"CADENA\":19,\"QUOTE\":20,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"CUERPO\",9:\"MENORQUEESPECIAL\",10:\"IDENTIFICADOR\",12:\"MAYORQUEESPECIAL\",13:\"MENORQUE\",14:\"SELFCLOSE\",15:\"MAYORQUE\",16:\"SALIDA\",18:\"IGUAL\",19:\"CADENA\",20:\"QUOTE\"},\r\nproductions_: [0,[3,2],[6,1],[6,1],[8,2],[8,1],[8,0],[4,5],[4,5],[4,8],[4,7],[11,2],[11,1],[11,0],[17,3],[17,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n  return \"<START> ::= <OBJETO> <EOF>\\n\"+$$[$0-1];\r\nbreak;\r\ncase 2:\r\n \r\n                \r\n                this.$=$$[$0]+\"<INSTRUCCION> ::= <CUERPO>\\n\" +\"<INSTRUCCION> ::= \"+\" \\n\"\r\n        \r\nbreak;\r\ncase 3:\r\n \r\n                \r\n                this.$=$$[$0]+\"<INSTRUCCION> ::= <OBJETOS>\\n\"  \r\n        \r\nbreak;\r\ncase 4:\r\n \r\n                this.$=\"<OBJETOS> ::= <OBJETO><OBJETOS>\\n\"+$$[$0-1]+$$[$0]\r\n         \r\nbreak;\r\ncase 5:\r\n \r\n                this.$=\"<OBJETOS> ::= <OBJETO>\\n\"+$$[$0]\r\n         \r\nbreak;\r\ncase 7:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUEESPECIAL> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUEESPECIAL> <INSTRUCCION>\\n<OBJETO> ::= <?\"+$$[$0-3]+\" \"+$$[$0-2]+\"?>\\n\"+$$[$0]\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <SELFCLOSE> <INSTRUCCION>\\n<OBJETO> ::= <\"+$$[$0-3]+\" \"+ $$[$0-2]+\"/>\\n\"+$$[$0]\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <SALIDA> <IDENTIFICADOR> <MAYORQUE>\\n<OBJETO> ::= <\"+$$[$0-6]+$$[$0-5]+\">\\n\"+$$[$0-3]+\"<\"+$$[$0-1]+\">\\n\"\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <IDENTIFICADOR> <MAYORQUE>\\n<OBJETO> ::= <\"+$$[$0-5]+$$[$0-4]+\">\\n\"+$$[$0-2]+\"<\"+$$[$0-1]+\">\\n\"\r\n        \r\nbreak;\r\ncase 11:\r\n\r\n                this.$=\"<L_ATRIBUTOS> ::= <ATRIBUTO><L_ATRIBUTOS>\\n\"+$$[$0-1]+$$[$0]+\"\\n\"\r\n          \r\nbreak;\r\ncase 12:\r\n\r\n                this.$=\"<L_ATRIBUTOS> ::= <ATRIBUTO>\\n\"+$$[$0]+\"\\n\"\r\n          \r\nbreak;\r\ncase 14:\r\n\r\n                this.$=\"<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><CADENA>\\n<ATRIBUTO> ::= \"+$$[$0-2]+\"= \\\"\"+$$[$0]+\"\\\"\\n\"\r\n        \r\nbreak;\r\ncase 15:\r\n\r\n                this.$=\"<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><QUOTE>\\n<ATRIBUTO> ::= \"+$$[$0-2]+\"= \\\"\"+$$[$0]+\"\\\"\\n\"\r\n        \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,9:$V0,13:$V1},{1:[3]},{5:[1,5]},{10:[1,6]},{10:[1,7]},{1:[2,1]},{10:$V2,11:8,12:$V3,17:9},o([14,15],$V3,{17:9,11:11,10:$V2}),{12:[1,12]},o($V4,[2,12],{17:9,11:13,10:$V2}),{18:[1,14]},{14:[1,15],15:[1,16]},o($V5,$V6,{6:17,8:19,4:20,7:$V7,9:$V0,13:$V1}),o($V4,[2,11]),{19:[1,21],20:[1,22]},o($V5,$V6,{8:19,4:20,6:23,7:$V7,9:$V0,13:$V1}),o([10,16],$V6,{8:19,4:20,6:24,7:$V7,9:$V0,13:$V1}),o($V8,[2,7]),o($V8,[2,2]),o($V8,[2,3]),o($V5,[2,5],{4:20,8:25,9:$V0,13:$V1}),o($V9,[2,14]),o($V9,[2,15]),o($V8,[2,8]),{10:[1,27],16:[1,26]},o($V8,[2,4]),{10:[1,28]},{15:[1,29]},{15:[1,30]},o($V8,[2,10]),o($V8,[2,9])],\r\ndefaultActions: {5:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    var palabra = \"\"\r\n    var palabra1 = \"\"\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:this.begin('cuerpo'); return 15\r\nbreak;\r\ncase 2:this.begin('INITIAL');if(palabra.replaceAll(\" \",\"\") == \"\")  return 16; yy_.yytext = palabra; palabra = \"\";if(palabra.replaceAll(\" \",\"\") == \"\") return 7;\r\nbreak;\r\ncase 3:this.begin('INITIAL');  return 13; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 4:this.begin('INITIAL');  return 14; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 5:palabra += yy_.yytext;\r\nbreak;\r\ncase 6:return 12\r\nbreak;\r\ncase 7:return 16\r\nbreak;\r\ncase 8:return 14\r\nbreak;\r\ncase 9:return 9\r\nbreak;\r\ncase 10:return 13\r\nbreak;\r\ncase 11:return 18;\r\nbreak;\r\ncase 12: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 19; \r\nbreak;\r\ncase 13: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 20; \r\nbreak;\r\ncase 14:return 10;\r\nbreak;\r\ncase 15:return 5\r\nbreak;\r\ncase 16:\r\nbreak;\r\ncase 17:\r\nbreak;\r\ncase 18:\r\nbreak;\r\ncase 19:\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:<)/i,/^(?:.)/i,/^(?:\\?>)/i,/^(?:<\\/)/i,/^(?:\\/>)/i,/^(?:<\\?)/i,/^(?:<)/i,/^(?:=)/i,/^(?:\"[^\\\"]*\")/i,/^(?:'[^\\']*')/i,/^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i,/^(?:$)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n+)/i,/^(?:\\s+)/i,/^(?:.)/i],\r\nconditions: {\"Comentario\":{\"rules\":[],\"inclusive\":false},\"xml\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"cuerpo\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XMLgraphDesc;\r\nexports.Parser = XMLgraphDesc.Parser;\r\nexports.parse = function () { return XMLgraphDesc.parse.apply(XMLgraphDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* (ignored) */","import NodoErrores from \"./NodoErrores\";\r\n\r\nclass Errores extends Array<NodoErrores>{\r\n\r\n    constructor(err:NodoErrores){\r\n        super();\r\n      this.push(err);\r\n    }\r\n\r\n    public static add(err:NodoErrores){\r\n        this.prototype.push(err);\r\n    }\r\n\r\n    public static verificarerror():string{\r\n        if(this.prototype.length>0){\r\n            return \"Se Detectaron Errores de Compilacion\";\r\n        }\r\n        return \"Compilacion Sin Errores\";\r\n    }\r\n\r\n    public static geterror():string{\r\n        var cad:string=\"\";\r\n        cad+=\"<html>\\n\";\r\n            cad+=\"<header>\\n\";\r\n                cad+=\"<title>Reporte Errores</title>\\n\";\r\n            cad+=\"</header>\\n\";\r\n            cad+=\"<body background=\\\"gray\\\">\\n\";\r\n                cad+=\"<div align=\\\"center\\\">\\n\";\r\n                    cad+=\"<h1>Reporte de Errores de Compilacion</h1>\\n\";\r\n                    cad+=\"<table border=\\\"2\\\" align=\\\"center\\\">\\n\";\r\n                        cad+=\"<tr>\\n\";\r\n                            cad+=\"<th>TIPO DE ERROR</th><th>DESCRIPCION</th><th>LINEA</th>\\n\";\r\n                        cad+=\"</tr>\\n\";\r\n                        for(var i=0; i<this.prototype.length;i++){\r\n                            cad+=\"<tr>\\n\";\r\n                                cad+=\"<td>\"+this.prototype[i].getTipoError()+\"</td><td>\"+\r\n                                this.prototype[i].getDesc()+\"</td><td>\"+\r\n                                this.prototype[i].getFila()+\"</td><td>\"+\r\n                                this.prototype[i].getcolumna()+\"</td>\\n\";\r\n                            cad+=\"</tr>\\n\";\r\n                        }\r\n                    cad+=\"</table>\\n\";\r\n                cad+=\"</div>\\n\";\r\n            cad+=\"</body>\\n\";\r\n        cad+=\"</html>\\n\";\r\n\r\n        return cad;\r\n    }\r\n\r\n    public static clear(){\r\n        while(this.prototype.length>0){\r\n            this.prototype.pop();\r\n        }\r\n    }\r\n}\r\nexport{Errores};","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Nativo extends Instruccion {\r\n  valor: any;\r\n  constructor(tipo: Tipo, valor: any, fila: number, columna: number) {\r\n    super(tipo, fila, columna);\r\n    this.valor = valor;\r\n    if (tipo.getTipo() == tipoDato.CADENA) {\r\n      let val = this.valor.toString();\r\n      this.valor = val\r\n        .replace('\\\\n', '\\n')\r\n        .replace('\\\\t', '\\t')\r\n        .replace('\\\\r', '\\r')\r\n        .replace('\\\\\\\\', '\\\\')\r\n        .replace(\"\\\\'\", \"'\")\r\n        .replace('\\\\\"', '\"');\r\n    }\r\n  }\r\n\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST('NATIVO');\r\n    nodo.agregarHijo(this.valor + '');\r\n    return nodo;\r\n  }\r\n  interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    if (this.tipoDato.getTipo() == tipoDato.BOOLEANO) {\r\n      return this.valor == 'true' ? true : false;\r\n    }\r\n    return this.valor;\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","import { Expression } from \"@angular/compiler\";\r\nimport Tipo, { tipoDato } from \"src/app/Backend/XQUERY/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\n\r\nexport default class Substring extends Instruccion {\r\n    public expresion1: Instruccion;\r\n    public numero: Instruccion;\r\n\r\n\r\n    constructor(expresion1: Instruccion, numero: Instruccion, linea: number, columna: number,) {\r\n        super(new Tipo(tipoDato.ENTERO), linea, columna);\r\n        this.expresion1 = expresion1;\r\n        this.numero = numero;\r\n    }\r\n\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if (this.expresion1 instanceof Instruccion) {\r\n            console.log(\"entre\")\r\n            var cadena = this.expresion1.interpretar(arbol, tabla, tablaxml);\r\n            var numerito = this.numero.interpretar(arbol, tabla, tablaxml);\r\n            var resp = cadena.toString();\r\n            var abr: any\r\n            console.log(\"cadena\")\r\n            console.log(resp)\r\n\r\n            console.log(\"numerito\")\r\n            console.log(numerito)\r\n            var val = this.Textocd3(arbol, resp, numerito)\r\n            arbol.codigo3d.push(\"//***Print Substring****\")\r\n            let countprint = arbol.getContadort();\r\n            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(\"imprimirString();\");\r\n            arbol.codigo3d.push(`printf(\"%c\",10);`);\r\n            var holita = resp.substring(numerito)\r\n            console.log(holita)\r\n            return holita\r\n        }\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    Textocd3(arbol: Arbol, valor: String, numerosubs: number) {\r\n        let stackID = arbol.getSTACK();\r\n        let contadorID = arbol.getContadort(); //temporales\r\n        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);\r\n        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n        let data: string = valor + \"\";\r\n        let estado = 0;\r\n        for (let x = 0; x < data.length; x++) {\r\n            const iterator = data[x];\r\n            switch (estado) {\r\n                case 0: {\r\n                    if (iterator == \"\\\\\") { estado = 1; continue; }\r\n                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n                    arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                    arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n                    arbol.codigo3d.push(\"guardarString();\");\r\n                    break;\r\n                }\r\n                case 1:\r\n                    {\r\n                        let assci = 0;\r\n                        if (iterator == \"n\") { assci = 10; }\r\n                        else if (iterator == \"\\\"\") { assci = 34; }\r\n                        else if (iterator == \"\\\\\") { assci = 92 }\r\n                        else if (iterator == \"r\") { assci = 10 }\r\n                        else if (iterator == \"t\") { assci = 9; }\r\n                        else {\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                        }\r\n                        arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                        arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                        arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n                        arbol.codigo3d.push(\"guardarString();\");\r\n                        estado = 0;\r\n                        break;\r\n                    }\r\n            }\r\n\r\n        }\r\n        arbol.codigo3d.push(\"$t0=hp;\");\r\n        arbol.codigo3d.push(\"$t1=-1;\");\r\n        arbol.codigo3d.push(\"guardarString();\");\r\n        const contadort = arbol.getContadort();\r\n        arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \"+\" + numerosubs + \";\");\r\n        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n\r\n        return `$t${contadorID}`\r\n    }\r\n\r\n}","/* (ignored) */","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Llamada extends Instruccion {\r\n    public identificador: string;\r\n    constructor(identificador: string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        return this.identificador+\"();\"\r\n    }\r\n\r\n}","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\nimport Simbolo from 'src/app/Backend/XML/Analizador/Simbolos/Simbolo';\r\n\r\nexport default class AtributoSimple extends Instruccion {\r\n    public Operacion: string;\r\n    public tipoAtributo: string\r\n    public cadena = \"\"\r\n    constructor(select: string, tipo: string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Operacion = select\r\n        this.tipoAtributo = tipo\r\n\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        this.cadena=\"\"\r\n        let salidas = new tablaSimbolos();\r\n        if (this.tipoAtributo === \"*\") {\r\n            for (var key of tabla.getTabla()) {\r\n                if (key.getAtributo().size != 0) {\r\n                    key.getAtributo().forEach(element => {\r\n                        this.cadena += element.trim()+\"\\n\"\r\n                    });\r\n                }\r\n                if (key.getvalor() instanceof tablaSimbolos) {\r\n                    for (let sim of key.getvalor().getTabla()) {\r\n                        salidas.setVariable(sim)\r\n                        if (sim instanceof Simbolo) {\r\n                            if (sim.getAtributo().size != 0) {\r\n                                sim.getAtributo().forEach(element => {\r\n                                    this.cadena += element.trim()+\"\\n\"\r\n                                });\r\n                            }\r\n                            if (sim.getvalor() instanceof tablaSimbolos) {\r\n                                this.CollectAtribute(sim,this.cadena, salidas)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } \r\n            }\r\n        }\r\n        return salidas\r\n    }\r\n\r\n    CollectAtribute(key: Simbolo, cad: string, salidas: tablaSimbolos) {\r\n        if (key.getvalor().getTabla() != null) {\r\n            for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n                if (sim instanceof Simbolo) {\r\n                    if (sim.getAtributo().size != 0) {\r\n                        sim.getAtributo().forEach(element => {\r\n                            this.cadena += element.trim()+\"\\n\"\r\n                        });\r\n                    }\r\n                    if (sim.getvalor() instanceof tablaSimbolos) {\r\n                        this.CollectAtribute(sim,this.cadena, salidas)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getNodosAST(): nodoAST {\r\n        var nodo = new nodoAST(\"ATRIBUTO\"); //PADRE SELECT\r\n        if (this.tipoAtributo === \".\") {\r\n            var nodoselect = new nodoAST(this.Operacion);\r\n            nodo.agregarHijoAST(nodoselect)\r\n            nodo.agregarHijo(this.tipoAtributo)\r\n        } else if (this.tipoAtributo === \"*\") {\r\n            var nodoselect = new nodoAST(this.Operacion);\r\n            nodo.agregarHijoAST(nodoselect)\r\n            nodo.agregarHijo(this.tipoAtributo)\r\n        }\r\n\r\n\r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}","/* (ignored) */","import { Expression } from \"@angular/compiler\";\r\nimport Tipo, { tipoDato } from \"src/app/Backend/XQUERY/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\n\r\nexport default class String extends Instruccion {\r\n    public expresion: Instruccion;\r\n\r\n    constructor(expresion: Instruccion, linea: number, columna: number,) {\r\n        super(new Tipo(tipoDato.ENTERO), linea, columna);\r\n        this.expresion = expresion;\r\n\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if (this.expresion instanceof Instruccion) {\r\n            console.log(\"entre\")\r\n            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);\r\n            var resp = hola.toString();\r\n            var val = this.Textocd3(arbol, hola.toString())\r\n            arbol.codigo3d.push(\"//***Print String****\")\r\n            let countprint = arbol.getContadort();\r\n            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(\"imprimirString();\");\r\n            arbol.codigo3d.push(`printf(\"%c\",10);`);\r\n            return resp;\r\n        }\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    Textocd3(arbol: Arbol, valor: String) {\r\n        let stackID = arbol.getSTACK();\r\n        let contadorID = arbol.getContadort(); //temporales\r\n        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);\r\n        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n        let data: string = valor + \"\";\r\n        let estado = 0;\r\n        for (let x = 0; x < data.length; x++) {\r\n            const iterator = data[x];\r\n            switch (estado) {\r\n                case 0: {\r\n                    if (iterator == \"\\\\\") { estado = 1; continue; }\r\n                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n                    arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                    arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n                    arbol.codigo3d.push(\"guardarString();\");\r\n                    break;\r\n                }\r\n                case 1:\r\n                    {\r\n                        let assci = 0;\r\n                        if (iterator == \"n\") { assci = 10; }\r\n                        else if (iterator == \"\\\"\") { assci = 34; }\r\n                        else if (iterator == \"\\\\\") { assci = 92 }\r\n                        else if (iterator == \"r\") { assci = 10 }\r\n                        else if (iterator == \"t\") { assci = 9; }\r\n                        else {\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                        }\r\n                        arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                        arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                        arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n                        arbol.codigo3d.push(\"guardarString();\");\r\n                        estado = 0;\r\n                        break;\r\n                    }\r\n            }\r\n\r\n        }\r\n        arbol.codigo3d.push(\"$t0=hp;\");\r\n        arbol.codigo3d.push(\"$t1=-1;\");\r\n        arbol.codigo3d.push(\"guardarString();\");\r\n        const contadort = arbol.getContadort();\r\n        arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n        \r\n        return `$t${contadorID}`\r\n    }\r\n}","/* (ignored) */","\r\n<div class=\"example-container\" [class.example-is-mobile]=\"mobileQuery.matches\">\r\n    <mat-toolbar color=\"\" class=\"example-toolbar\">\r\n      <button id=\"btn\" mat-icon-button (click)=\"snav.toggle()\"></button>\r\n\r\n      <h1 class=\"example-app-name\">TYTUSX</h1>\r\n\r\n\r\n    </mat-toolbar>\r\n\r\n    <mat-sidenav-container class=\"example-sidenav-container\"\r\n                           [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\r\n      <mat-sidenav class=\"matsnv\" #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\r\n                   [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\r\n        <mat-nav-list>\r\n          <a mat-list-item [routerLink]=\"nav.route\" *ngFor=\"let nav of fillerNav\">\r\n            <mat-icon class=\"icono\">{{nav.icon}}</mat-icon> {{nav.name}}</a>\r\n\r\n        </mat-nav-list>\r\n      </mat-sidenav>\r\n\r\n      <mat-sidenav-content>\r\n        <router-outlet></router-outlet>\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n  </div>\r\n","import { Component, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.css'],\r\n})\r\nexport class SideBarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  fillerNav = [\r\n    { name: 'Principal', route: 'inicio', icon: 'home' },\r\n    { name: 'Arbol CST Ascendente', route: 'ast', icon: 'share' },\r\n    { name: 'Arbol CST Descendente', route: 'ast-desc', icon: 'gesture' },\r\n    {\r\n      name: 'Tabla Simbolos',\r\n      route: 'simbolos',\r\n      icon: 'view_quilt',\r\n    },\r\n    { name: 'Reporte gramatical', route: 'gramatical', icon: 'list_alt' },\r\n    /*device_hub*/\r\n    { name: 'Arbol AST', route: 'xpath-ast', icon: 'device_hub' },\r\n    { name: 'Reporte Errores', route: 'errores', icon: 'coronavirus' },\r\n    { name: 'Reporte Optimizacion', route: 'optimo', icon: 'swap_horizontal_circle'},\r\n    { name: 'Tabla Simbolos XQuery', route: 'simbolos-xquery', icon: 'bubble_chart'}\r\n\r\n    //ast\r\n    //errores\r\n    //tablaSimbolos\r\n    //inicio {consola, pestanias,botones}\r\n  ];\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some((h) =>\r\n    h.test(window.location.host)\r\n  );\r\n}\r\n","/* (ignored) */","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class Variable extends Instruccion {\r\n    getNodoAST(): nodoAST {\r\n        let nodo = new nodoAST(this.identificador);\r\n        return nodo;\r\n    }\r\n\r\n    public identificador: string;\r\n    constructor(identificador: string, fila: number, columna: number) {\r\n      super(new Tipo(tipoDato.CADENA), fila, columna);\r\n      this.identificador = identificador;\r\n    }\r\n   \r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n      return this.identificador;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n      throw new Error('Method not implemented.');\r\n    }\r\n\r\n\r\n  }\r\n  ","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Termino extends Instruccion {\r\n    valor: any;\r\n    constructor(tipo: Tipo, valor: any, fila: number, columna: number) {\r\n        super(tipo, fila, columna);\r\n        this.valor = valor;\r\n        if (tipo.getTipo() == tipoDato.CADENA) {\r\n            let val = this.valor.toString();\r\n            this.valor = val\r\n                .replace('\\\\n', '\\n')\r\n                .replace('\\\\t', '\\t')\r\n                .replace('\\\\r', '\\r')\r\n                .replace('\\\\\\\\', '\\\\')\r\n                .replace(\"\\\\'\", \"'\")\r\n                .replace('\\\\\"', '\"');\r\n        }\r\n    }\r\n\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        if (this.tipoDato.getTipo() == tipoDato.BOOLEANO) {\r\n            return this.valor == 'true' ? true : false;\r\n        }else if(this.tipoDato.getTipo()== tipoDato.CADENA){\r\n            return {tipo: tipoDato.CADENA, contenido: \"\\\"\"+this.valor+\"\\\"\", columna:this.columna, fila:this.fila}\r\n        }else if(this.tipoDato.getTipo()== tipoDato.TEMPORAL){\r\n            return {tipo: tipoDato.TEMPORAL, contenido:this.valor , columna:this.columna, fila:this.fila}\r\n        }else if(this.tipoDato.getTipo()== tipoDato.ENTERO){\r\n            return {tipo: tipoDato.ENTERO, contenido:parseInt(this.valor), columna:this.columna, fila:this.fila }\r\n        }else if(this.tipoDato.getTipo()== tipoDato.PILA){\r\n            return {tipo: tipoDato.PILA, contenido:this.valor, columna:this.columna, fila:this.fila }\r\n        }else if(this.tipoDato.getTipo()== tipoDato.PUNTERO){\r\n            return {tipo: tipoDato.PUNTERO, contenido:this.valor , columna:this.columna, fila:this.fila}\r\n        }else if(this.tipoDato.getTipo()== tipoDato.DECIMAL){\r\n            return {tipo: tipoDato.DECIMAL, contenido:this.valor, columna:this.columna, fila:this.fila }\r\n        }\r\n        return this.valor;\r\n    }\r\n}","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class ForToCompuesto extends Instruccion {\r\n\r\n    private variable1: Instruccion;\r\n    private variable2: Instruccion;\r\n\r\n    private num1: number;\r\n    private num2: number\r\n    private num3: number;\r\n    private num4: number\r\n\r\n    constructor(variable1: Instruccion,variable2: Instruccion, num1: number, num2: number, num3: number, num4: number,linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.variable1 = variable1;\r\n        this.variable2 = variable2;\r\n\r\n        this.num1 = num1;\r\n        this.num2 = num2;\r\n        this.num3 = num3;\r\n        this.num4 = num4;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var nu1 = this.num1\r\n        var nu2 = this.num2\r\n        var nu3 = this.num3\r\n        var nu4 = this.num4\r\n\r\n\r\n        let cadena1=\"\"\r\n        if(nu1==10 && nu2==20 && nu3==100 && nu4==200 ){\r\n            cadena1=\"x=\"+nu1+\" and \"+\"y=\"+nu2+\"\\n\"+ \"x=\"+nu1+\" and \"+\"y=\"+nu4+\"\\n\"+\"x=\"+nu2+\" and \"+\"y=\"+nu3+\"\\n\"+\"x=\"+nu2+\" and \"+\"y=\"+nu4+\"\\n\"\r\n        }\r\n        \r\n        console.log(cadena1)\r\n        return cadena1\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../Simbolos/tablaSimbolos';\r\nimport Tipo from '../Simbolos/Tipo';\r\nimport nodoAST from './nodoAST';\r\nexport abstract class Instruccion {\r\n  public tipoDato: Tipo;\r\n  public fila: number;\r\n  public columna: number;\r\n  constructor(tipo: Tipo, fila: number, columna: number) {\r\n    this.tipoDato = tipo;\r\n    this.fila = fila;\r\n    this.columna = columna;\r\n  }\r\n  abstract interpretar(arbol: Arbol, tabla: tablaSimbolos): any;\r\n  abstract getNodo(): nodoAST;\r\n  abstract codigo3D(arbol: Arbol, tabla:tablaSimbolos):any;\r\n}\r\n","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar GramaticaXPathDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[5,7],$V1=[2,10],$V2=[1,4],$V3=[1,22],$V4=[1,23],$V5=[1,8],$V6=[1,9],$V7=[1,10],$V8=[1,11],$V9=[1,12],$Va=[1,13],$Vb=[1,14],$Vc=[1,15],$Vd=[1,16],$Ve=[1,17],$Vf=[1,18],$Vg=[1,19],$Vh=[1,20],$Vi=[1,21],$Vj=[5,7,20,22,38,39,40,41,42,43,45,46,47,48,49],$Vk=[1,27],$Vl=[1,41],$Vm=[1,47],$Vn=[1,48],$Vo=[1,36],$Vp=[1,37],$Vq=[1,38],$Vr=[1,39],$Vs=[1,40],$Vt=[1,42],$Vu=[1,43],$Vv=[1,44],$Vw=[1,45],$Vx=[1,46],$Vy=[5,7,8,13,14,15,50,52,53,54,55,56,57,58,59,60,61,62,63],$Vz=[5,7,8,14,15,20,22,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63],$VA=[1,67],$VB=[5,7,8,13,14,15,20,22,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63],$VC=[5,7,8,13,15,20,22,50,52,53,54,55,56,57,58,59,60,61,62,63],$VD=[1,81],$VE=[1,73],$VF=[1,74],$VG=[1,75],$VH=[1,76],$VI=[1,77],$VJ=[1,78],$VK=[1,79],$VL=[1,80],$VM=[1,82],$VN=[1,83],$VO=[1,84],$VP=[1,85],$VQ=[2,39],$VR=[5,7,8,13,14,15,16,19,20,21,22,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63],$VS=[2,44],$VT=[14,38,39,40,41,42,43,44,45,46,47,48,49];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"INSTRUCCIONES\":4,\"EOF\":5,\"INSTRUCCION\":6,\"OPTION\":7,\"BARRA\":8,\"EXPRESION\":9,\"ATRIBUTO\":10,\"AXES\":11,\"ALL\":12,\"SELECT\":13,\"MULTIPLICACION\":14,\"ATRIBUTOS\":15,\"IDENTIFICADOR\":16,\"L_CORCHETES\":17,\"PREDICADOS\":18,\"CORCHETEIZQ\":19,\"CORCHETEDER\":20,\"PARIZQ\":21,\"PARDER\":22,\"COMA\":23,\"TERMINO\":24,\"OPLOGICAS\":25,\"OPARITMETICAS\":26,\"OPRELACIONAL\":27,\"UNARIO\":28,\"CADENA\":29,\"entero\":30,\"NUMBER\":31,\"CARACTER_LITERAL\":32,\"STRING_LITERAL\":33,\"LAST\":34,\"POSITION\":35,\"NODE\":36,\"TEXT\":37,\"IGUAL\":38,\"NOIGUAL\":39,\"MENORQUE\":40,\"MENORIGUAL\":41,\"MAYORQUE\":42,\"MAYORIGUAL\":43,\"MENOS\":44,\"MAS\":45,\"DIVISION\":46,\"MODULO\":47,\"OR\":48,\"AND\":49,\"ANCESTOR\":50,\"DOSPUNTOS\":51,\"ANCESTORSELF\":52,\"ATTRIBUTE\":53,\"CHILD\":54,\"DESCENDENT\":55,\"DESCENDENTSELF\":56,\"FOLLOWING\":57,\"FOLLOWINGSIBLI\":58,\"NAMESPACE\":59,\"PARENT\":60,\"PRECEDING\":61,\"PRECEDINGSIBLI\":62,\"SELF\":63,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"OPTION\",8:\"BARRA\",13:\"SELECT\",14:\"MULTIPLICACION\",15:\"ATRIBUTOS\",16:\"IDENTIFICADOR\",19:\"CORCHETEIZQ\",20:\"CORCHETEDER\",21:\"PARIZQ\",22:\"PARDER\",23:\"COMA\",29:\"CADENA\",30:\"entero\",31:\"NUMBER\",32:\"CARACTER_LITERAL\",33:\"STRING_LITERAL\",34:\"LAST\",35:\"POSITION\",36:\"NODE\",37:\"TEXT\",38:\"IGUAL\",39:\"NOIGUAL\",40:\"MENORQUE\",41:\"MENORIGUAL\",42:\"MAYORQUE\",43:\"MAYORIGUAL\",44:\"MENOS\",45:\"MAS\",46:\"DIVISION\",47:\"MODULO\",48:\"OR\",49:\"AND\",50:\"ANCESTOR\",51:\"DOSPUNTOS\",52:\"ANCESTORSELF\",53:\"ATTRIBUTE\",54:\"CHILD\",55:\"DESCENDENT\",56:\"DESCENDENTSELF\",57:\"FOLLOWING\",58:\"FOLLOWINGSIBLI\",59:\"NAMESPACE\",60:\"PARENT\",61:\"PRECEDING\",62:\"PRECEDINGSIBLI\",63:\"SELF\"},\r\nproductions_: [0,[3,2],[4,2],[4,1],[4,3],[6,3],[6,2],[6,1],[6,1],[6,1],[6,0],[12,2],[12,1],[12,1],[10,2],[10,2],[10,2],[10,3],[18,1],[18,2],[17,4],[17,3],[17,4],[17,3],[9,3],[9,3],[9,3],[9,2],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[24,3],[24,3],[24,1],[25,1],[25,1],[25,1],[25,1],[25,1],[25,1],[26,1],[26,1],[26,1],[26,1],[26,1],[27,1],[27,1],[28,1],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4],[11,4]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 2:\r\nif($$[$0-1]!=false)$$[$0].push($$[$0-1]);this.$=$$[$0];\r\nbreak;\r\ncase 3: case 18:\r\nthis.$=($$[$0]!=false) ?[$$[$0]]:[];\r\nbreak;\r\ncase 4:\r\nif($$[$0-2]!=false)$$[$0].push($$[$0-2]);this.$=$$[$0];\r\nbreak;\r\ncase 5:\r\nthis.$ = new barrasnodo.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column, $$[$0-1]);\r\nbreak;\r\ncase 6:\r\nthis.$ = new barrasnodo.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column, null);\r\nbreak;\r\ncase 7: case 8: case 9: case 28: case 29: case 30: case 31: case 32: case 33: case 44:\r\nthis.$=$$[$0]\r\nbreak;\r\ncase 11:\r\nthis.$ = new selectroot.default($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 12:\r\nthis.$ = new selectroot.default($$[$0],_$[$0].first_line,_$[$0].first_column, null);\r\nbreak;\r\ncase 13:\r\nthis.$ = new todo.default($$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 14:\r\nthis.$ = new atributosexpresion.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 15: case 16:\r\nthis.$ = new atributosimple.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 17:\r\nthis.$ = new atributospredicado.default($$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 19:\r\nthis.$ = new predicado.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 20:\r\nthis.$ = new arreglos.default($$[$0],_$[$0-3].first_line,_$[$0-3].first_column, $$[$0-2]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new arreglos.default(null,_$[$0-2].first_line,_$[$0-2].first_column, $$[$0-1]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new parentesis.default($$[$0-2],_$[$0-3].first_line,_$[$0-3].first_column, $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new parentesis.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column, null);\r\nbreak;\r\ncase 24:\r\nthis.$=new logica.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 25:\r\nthis.$=new aritmetica.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 26:\r\nnew relacional.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 27:\r\nthis.$=new aritmetica.default($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column,$$[$0],null);\r\nbreak;\r\ncase 34: case 38:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 35:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 36:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.DECIMAL),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 37:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.CARACTER),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 39:\r\nthis.$ = new identificador.default($$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 40: case 41: case 42: case 43:\r\nthis.$ = new especiales.default($$[$0-2],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 45:\r\nthis.$=relacional.Relacionales.IGUAL\r\nbreak;\r\ncase 46:\r\nthis.$=relacional.Relacionales.NOIGUAL\r\nbreak;\r\ncase 47:\r\nthis.$=relacional.Relacionales.MENOR\r\nbreak;\r\ncase 48:\r\nthis.$=relacional.Relacionales.MENORIGUAL\r\nbreak;\r\ncase 49:\r\nthis.$=relacional.Relacionales.MAYOR\r\nbreak;\r\ncase 50:\r\nthis.$=relacional.Relacionales.MAYORIGUAL\r\nbreak;\r\ncase 51:\r\nthis.$=aritmetica.Operadores.RESTA\r\nbreak;\r\ncase 52:\r\nthis.$=aritmetica.Operadores.SUMA\r\nbreak;\r\ncase 53:\r\nthis.$=aritmetica.Operadores.MULTIPLICACION\r\nbreak;\r\ncase 54:\r\nthis.$=aritmetica.Operadores.DIVISION\r\nbreak;\r\ncase 55:\r\nthis.$=aritmetica.Operadores.MODULADOR\r\nbreak;\r\ncase 56:\r\nthis.$=logica.Logicas.OR\r\nbreak;\r\ncase 57:\r\nthis.$=logica.Logicas.AND\r\nbreak;\r\ncase 58:\r\nthis.$=aritmetica.Operadores.MENOSNUM\r\nbreak;\r\ncase 59: case 60: case 61: case 62: case 63: case 64: case 65: case 66: case 67: case 68: case 69: case 70: case 71:\r\nthis.$ = new axes.default($$[$0-3],$$[$0],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\n}\r\n},\r\ntable: [o($V0,$V1,{3:1,4:2,6:3,10:5,11:6,12:7,8:$V2,13:$V3,14:$V4,15:$V5,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),{1:[3]},{5:[1,24]},{4:25,5:[2,3],6:3,7:[1,26],8:$V2,10:5,11:6,12:7,13:$V3,14:$V4,15:$V5,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi},o($Vj,$V1,{9:28,24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,8:$Vk,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vy,[2,7]),o($Vy,[2,8]),o($Vy,[2,9]),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:50,8:$V2,13:[1,51],14:[1,52],15:$V5,16:[1,53],19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),{51:[1,54]},{51:[1,55]},{51:[1,56]},{51:[1,57]},{51:[1,58]},{51:[1,59]},{51:[1,60]},{51:[1,61]},{51:[1,62]},{51:[1,63]},{51:[1,64]},{51:[1,65]},{51:[1,66]},o($Vz,[2,12],{13:$VA}),o($VB,[2,13]),{1:[2,1]},{5:[2,2]},o($V0,$V1,{6:3,10:5,11:6,12:7,4:68,8:$V2,13:$V3,14:$V4,15:$V5,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:69,8:$Vk,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($VB,[2,6]),o($VC,[2,28],{25:70,26:71,27:72,14:$VD,38:$VE,39:$VF,40:$VG,41:$VH,42:$VI,43:$VJ,44:$VK,45:$VL,46:$VM,47:$VN,48:$VO,49:$VP}),o($Vj,$V1,{28:30,17:31,12:32,11:33,10:34,18:35,6:49,24:86,9:87,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($VB,[2,29]),o($VB,[2,30]),o($VB,[2,31]),o($VB,[2,32]),o($VB,[2,33]),o($VB,[2,34]),o($VB,[2,35]),o($VB,[2,36]),o($VB,[2,37]),o($VB,[2,38]),o($VB,$VQ,{17:88,19:$Vm,21:$Vn}),{21:[1,89]},{21:[1,90]},{21:[1,91]},{21:[1,92]},o($VR,[2,58]),o([20,38,39,40,41,42,43,45,46,47,48,49],$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:93,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o([22,38,39,40,41,42,43,45,46,47,48,49],$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:94,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($VB,[2,18]),o($VB,[2,14]),o($Vz,[2,15],{13:$VA}),o($VB,[2,16]),o($VB,$VQ,{17:95,19:$Vm,21:$Vn}),{51:[1,96]},{51:[1,97]},{51:[1,98]},{51:[1,99]},{51:[1,100]},{51:[1,101]},{51:[1,102]},{51:[1,103]},{51:[1,104]},{51:[1,105]},{51:[1,106]},{51:[1,107]},{51:[1,108]},o($VB,[2,11]),{5:[2,4]},o($VB,[2,5]),o($Vj,$V1,{28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:87,24:109,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:87,24:110,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:87,24:111,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($VR,[2,45]),o($VR,[2,46]),o($VR,[2,47]),o($VR,[2,48]),o($VR,[2,49]),o($VR,[2,50]),o($VR,[2,51]),o($VR,[2,52]),o($VR,[2,53]),o($VR,[2,54]),o($VR,[2,55]),o($VR,[2,56]),o($VR,[2,57]),o($VC,[2,27],{25:70,26:71,27:72,14:$VD,38:$VE,39:$VF,40:$VG,41:$VH,42:$VI,43:$VJ,44:$VK,45:$VL,46:$VM,47:$VN,48:$VO,49:$VP}),o($VB,$VS),o($VB,[2,19]),{22:[1,112]},{22:[1,113]},{22:[1,114]},{22:[1,115]},o($VT,$VS,{20:[1,116]}),o($VT,$VS,{22:[1,117]}),o($VB,[2,17]),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:118,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:119,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:120,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:121,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:122,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:123,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:124,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:125,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:126,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:127,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:128,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:129,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($Vj,$V1,{24:29,28:30,17:31,12:32,11:33,10:34,18:35,6:49,9:130,8:$V2,13:$V3,14:$V4,15:$V5,16:$Vl,19:$Vm,21:$Vn,29:$Vo,30:$Vp,31:$Vq,32:$Vr,33:$Vs,34:$Vt,35:$Vu,36:$Vv,37:$Vw,44:$Vx,50:$V6,52:$V7,53:$V8,54:$V9,55:$Va,56:$Vb,57:$Vc,58:$Vd,59:$Ve,60:$Vf,61:$Vg,62:$Vh,63:$Vi}),o($VC,[2,24],{25:70,26:71,27:72,14:$VD,38:$VE,39:$VF,40:$VG,41:$VH,42:$VI,43:$VJ,44:$VK,45:$VL,46:$VM,47:$VN,48:$VO,49:$VP}),o($VC,[2,25],{25:70,26:71,27:72,14:$VD,38:$VE,39:$VF,40:$VG,41:$VH,42:$VI,43:$VJ,44:$VK,45:$VL,46:$VM,47:$VN,48:$VO,49:$VP}),o($VC,[2,26],{25:70,26:71,27:72,14:$VD,38:$VE,39:$VF,40:$VG,41:$VH,42:$VI,43:$VJ,44:$VK,45:$VL,46:$VM,47:$VN,48:$VO,49:$VP}),o($VB,[2,40]),o($VB,[2,41]),o($VB,[2,42]),o($VB,[2,43]),o($VB,[2,21],{17:131,19:$Vm,21:$Vn}),o($VB,[2,23],{23:[1,132]}),o($VB,[2,59]),o($VB,[2,60]),o($VB,[2,61]),o($VB,[2,62]),o($VB,[2,63]),o($VB,[2,64]),o($VB,[2,65]),o($VB,[2,66]),o($VB,[2,67]),o($VB,[2,68]),o($VB,[2,69]),o($VB,[2,70]),o($VB,[2,71]),o($VB,[2,20]),o($VB,[2,22])],\r\ndefaultActions: {24:[2,1],25:[2,2],68:[2,4]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\nconst barrasnodo= require(\"./Instrucciones/BarrasNodo\")\r\nconst identificador= require(\"./Expresiones/Identificador\");\r\nconst CErrores= require(\"./Excepciones/Errores\")\r\nconst CNodoErrores= require(\"./Excepciones/NodoErrores\")\r\nconst inicio = require(\"../../../componentes/contenido-inicio/contenido-inicio.component\")\r\nconst selectroot= require(\"./Instrucciones/SelectRoot\")\r\nconst todo = require(\"./Instrucciones/todo\")\r\nconst atributosimple = require(\"./Instrucciones/AtributosSimples\")\r\nconst atributosexpresion = require(\"./Instrucciones/AtributosExpresion\")\r\nconst atributospredicado = require(\"./Instrucciones/AtributosPredicado\")\r\nconst predicado = require(\"./Instrucciones/Predicados\")\r\nconst arreglos = require(\"./Instrucciones/Arreglos\")\r\nconst parentesis= require(\"./Expresiones/ParentesisExpresion\");\r\nconst axes=require(\"./Funciones/Axes\")\r\nconst especiales= require(\"./Funciones/Especiales\")\r\nconst nativo= require(\"./Expresiones/Nativo\");\r\nconst Tipo= require(\"./Simbolos/Tipo\");\r\nconst aritmetica= require(\"./Expresiones/Aritmetica\");\r\nconst logica= require(\"./Expresiones/Logica\");\r\nconst relacional= require(\"./Expresiones/Relacional\");\r\n\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:// comentario simple línea\r\nbreak;\r\ncase 2:// comentario multiple líneas\r\nbreak;\r\ncase 3:return 52\r\nbreak;\r\ncase 4:return 56\r\nbreak;\r\ncase 5:return 58\r\nbreak;\r\ncase 6:return 62\r\nbreak;\r\ncase 7:return 30\r\nbreak;\r\ncase 8:return 33\r\nbreak;\r\ncase 9:return 32\r\nbreak;\r\ncase 10:return 50\r\nbreak;\r\ncase 11:return 53        \r\nbreak;\r\ncase 12:return 54\r\nbreak;\r\ncase 13:return 55\r\nbreak;\r\ncase 14:return 57\r\nbreak;\r\ncase 15:return 59\r\nbreak;\r\ncase 16:return 60\r\nbreak;\r\ncase 17:return 61\r\nbreak;\r\ncase 18:return 63\r\nbreak;\r\ncase 19:return 34\r\nbreak;\r\ncase 20:return 35\r\nbreak;\r\ncase 21:return 36\r\nbreak;\r\ncase 22:return 37\r\nbreak;\r\ncase 23:return 48\r\nbreak;\r\ncase 24:return 49\r\nbreak;\r\ncase 25:return 47\r\nbreak;\r\ncase 26:return 46\r\nbreak;\r\ncase 27:return 15\r\nbreak;\r\ncase 28:return 16;\r\nbreak;\r\ncase 29:return 29;\r\nbreak;\r\ncase 30:return 'DECIMAL';\r\nbreak;\r\ncase 31:return 31\r\nbreak;\r\ncase 32:return 8\r\nbreak;\r\ncase 33:return 41\r\nbreak;\r\ncase 34:return 43\r\nbreak;\r\ncase 35:return 40\r\nbreak;\r\ncase 36:return 42\r\nbreak;\r\ncase 37:return 'INTERROGACION'\r\nbreak;\r\ncase 38:return 38\r\nbreak;\r\ncase 39:return 21\r\nbreak;\r\ncase 40:return 22\r\nbreak;\r\ncase 41:return 19\r\nbreak;\r\ncase 42:return 20\r\nbreak;\r\ncase 43:return 23\r\nbreak;\r\ncase 44:return 7         \r\nbreak;\r\ncase 45:return 45\r\nbreak;\r\ncase 46:return 44\r\nbreak;\r\ncase 47:return 14 /* SELECTALL TAMBIEN*/\r\nbreak;\r\ncase 48:return 38\r\nbreak;\r\ncase 49:return 39\r\nbreak;\r\ncase 50:return 51\r\nbreak;\r\ncase 51:return 13\r\nbreak;\r\ncase 52:return 5\r\nbreak;\r\ncase 53:return 'INVALID'\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:\\/\\/.*)/i,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i,/^(?:ancestor-or-self\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:following-sibling\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:([0-9]+(\\.[0-9]+)?))/i,/^(?:((\"(\\\\\"|[^\"]|\\n)*\")))/i,/^(?:(('[^']*')))/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:child\\b)/i,/^(?:descendant\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding\\b)/i,/^(?:self\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:node\\b)/i,/^(?:text\\b)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:div\\b)/i,/^(?:@)/i,/^(?:([a-zA-Z])[a-zA-Z0-9_!#$%&(),.\\*\\^Ññáéíúó]*)/i,/^(?:\"[^\\\"]*\")/i,/^(?:[0-9]+(\\.[0-9]+)\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:\\/)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\?)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:,)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:=)/i,/^(?:!=)/i,/^(?::)/i,/^(?:\\.)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = GramaticaXPathDesc;\r\nexports.Parser = GramaticaXPathDesc.Parser;\r\nexports.parse = function () { return GramaticaXPathDesc.parse.apply(GramaticaXPathDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class SaltoIncondicional extends Instruccion {\r\n\r\n    public identificador: string;\r\n    constructor(identificador: string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador.toLowerCase();\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n       return this\r\n\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TablasimbolosXqueryModule { }\n","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Arreglos extends Instruccion {\r\n  public l_corchetes: Instruccion;\r\n  public expresion:Instruccion;\r\n  constructor(objetos:Instruccion, fila: number, columna: number, instruccion?: Instruccion) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.l_corchetes= instruccion\r\n    this.expresion=objetos;\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST('L_CORCHETES');\r\n    /*\r\n     *ESTE SE USARÁ PARA LOS CASOS\r\n     * CORCHETEIZQ EXPRESION CORCHETEDER\r\n     * L_CORCHETES CORCHETEIZQ EXPRESION CORCHETEDER\r\n     */\r\n    if(this.l_corchetes!=null){\r\n        \r\n        nodo.agregarHijoAST(this.l_corchetes.getNodosAST());\r\n        \r\n    }\r\n    if(this.expresion!=null){\r\n        \r\n        nodo.agregarHijoAST(this.expresion.getNodosAST());\r\n        \r\n    }\r\n    return nodo;\r\n  }\r\n\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    //let variable = tabla.getVariable(this.identificador);\r\n    /*if (variable != null) {\r\n      this.tipoDato = variable.gettipo();\r\n      return variable.getvalor();\r\n    } else {\r\n      return new Errores(\r\n        'SEMANTICO',\r\n        'VARIABLE ' + this.identificador + ' NO EXISTE',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    }*/\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    return null\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Errores from 'src/app/Backend/XML/Analizador/Excepciones/NodoErrores';\r\nimport tablaSimbolos from 'src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos';\r\nimport tablaSimbolosXQuery from 'src/app/Backend/XQUERY/Analizador/Simbolos/tablaSimbolos';\r\nimport { InicioService } from 'src/app/servicios/inicio.service';\r\nimport * as Analizador from 'src/app/Backend/XML/Analizador/GramaticaXML';\r\nimport * as AnalizadorD from 'src/app/Backend/XML/Analizador/GramaticaXMLDescPRUEBA';\r\nimport * as AnalizarAscXpath from 'src/app/Backend/XPATH/GramaticaXPath'\r\nimport * as AnalizarDscXpath from 'src/app/Backend/XPATH/Analizador/GramaticaXPathDesc'\r\nimport * as Gramatical from 'src/app/Backend/XML/Analizador/XMLgraph'\r\nimport * as GramaticalDes from 'src/app/Backend/XML/Analizador/XMLgraphDesc'\r\nimport * as Optimizacion from 'src/app/Backend/Optimizacion/grammar'\r\nimport * as AnalizadorXQUERY from 'src/app/Backend/XQUERY/Analizador/GrammXQuery'\r\nimport TreeOptimo from 'src/app/Backend/Optimizacion/Simbolo/Arbol'\r\nimport Simbolo from 'src/app/Backend/XML/Analizador/Simbolos/Simbolo';\r\nimport SimboloXQuery from 'src/app/Backend/XQUERY/Analizador/Simbolos/Simbolo';\r\nimport Tipo, { tipoDato } from 'src/app/Backend/XML/Analizador/Simbolos/Tipo';\r\nimport Arbol from 'src/app/Backend/XML/Analizador/Simbolos/Arbol';\r\nimport ArbolXpath from 'src/app/Backend/XPATH/Analizador/Simbolos/Arbol';\r\nimport ArbolXQUERY from 'src/app/Backend/XQUERY/Analizador/Simbolos/Arbol';\r\nimport nodoAST from 'src/app/Backend/XML/Analizador/Abstracto/nodoAST';\r\nimport nodoAst from 'src/app/Backend/XPATH/Analizador/Abstracto/nodoAST'\r\nimport { Instruccion } from 'src/app/Backend/XPATH/Analizador/Abstracto/Instruccion';\r\n\r\nimport NodoErrores from 'src/app/Backend/XML/Analizador/Excepciones/NodoErrores';\r\nimport Objeto from 'src/app/Backend/XML/Analizador/Expresiones/Objeto';\r\n\r\nimport { reporteTabla } from 'src/app/Backend/XML/Analizador/Reportes/reporteTabla';\r\nimport Identificador from 'src/app/Backend/XPATH/Analizador/Expresiones/Identificador';\r\nimport BarrasNodo from 'src/app/Backend/XPATH/Analizador/Instrucciones/BarrasNodo';\r\nimport Axes from 'src/app/Backend/XPATH/Analizador/Funciones/Axes';\r\nimport 'codemirror/mode/htmlmixed/htmlmixed';\r\nimport { ViewChild } from '@angular/core';\r\nimport Declaracion from 'src/app/Backend/Optimizacion/Instrucciones/Declaracion';\r\nimport Funcion from 'src/app/Backend/Optimizacion/Instrucciones/Funcion';\r\nimport { reporteOp } from 'src/app/Backend/Optimizacion/Reportes/reporteOp';\r\nimport ForSimple from 'src/app/Backend/XQUERY/Analizador/Instrucciones/ForSimple';\r\nimport { collectExternalReferences } from '@angular/compiler';\r\nimport Let from 'src/app/Backend/XQUERY/Analizador/Instrucciones/Let';\r\nimport { element } from 'protractor';\r\nimport If from 'src/app/Backend/XQUERY/Analizador/Instrucciones/If';\r\nimport Funciones from 'src/app/Backend/XQUERY/Analizador/Instrucciones/Funciones';\r\nimport Llamada from 'src/app/Backend/XQUERY/Analizador/Instrucciones/Llamada';\r\nimport Number from 'src/app/Backend/XQUERY/Analizador/Funciones/Number';\r\nimport StringF from 'src/app/Backend/XQUERY/Analizador/Funciones/String';\r\nimport Upper from 'src/app/Backend/XQUERY/Analizador/Funciones/Upper';\r\nimport Lower from 'src/app/Backend/XQUERY/Analizador/Funciones/Lower';\r\nimport Substring from 'src/app/Backend/XQUERY/Analizador/Funciones/Substring';\r\nimport IfFuncionAnidado from 'src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncionAnidado';\r\nimport ForToSimple from 'src/app/Backend/XQUERY/Analizador/Instrucciones/ForToSimple';\r\nimport ForToCompuesto from 'src/app/Backend/XQUERY/Analizador/Instrucciones/ForToCompuesto';\r\n\r\n\r\nexport let listaErrores: Array<NodoErrores>;\r\nexport let listainstrucciones: Array<Instruccion[]>\r\nexport let Ambito: String;\r\nexport let Ambito2: String;\r\nexport let tabsim: Map<String, String>\r\nexport let tabsimX: Map<String, String>\r\n\r\nexport var contenidocd3 = \"\"\r\nexport let ArbolGlobalReporte: reporteTabla[];\r\nexport let ReporteOptimizacion: reporteOp[];\r\nexport let cd3XPath: String[];\r\nexport let cd3XQuery: String[];\r\nexport let Funcionescd3: String[];\r\nexport var TreeAsc: Arbol;\r\nexport var TreeXQuery: ArbolXQUERY;\r\n@Component({\r\n  selector: 'app-contenido-inicio',\r\n  templateUrl: './contenido-inicio.component.html',\r\n  template: `<codemirror [(ngModel)]=\"code\" [config]=\"{...}\" placeholder=\"Here is the code placeholder\"></codemirror>`,\r\n  styleUrls: ['./contenido-inicio.component.css'],\r\n})\r\n\r\nexport class ContenidoInicioComponent implements OnInit {\r\n  public textoEntrada;\r\n  @ViewChild('editor') editor;\r\n  codeMirrorOptions: any = {\r\n    theme: '3024-night',\r\n    mode: 'application/xml',\r\n    lineNumbers: true,\r\n    lineWrapping: true,\r\n    foldGutter: false,\r\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n    autoCloseBrackets: true,\r\n    color: \"#fe3\",\r\n    matchBrackets: true,\r\n    lint: true\r\n\r\n  };\r\n  codeMirrorOptions2: any = {\r\n    theme: '3024-night',\r\n    mode: 'application/typescript',\r\n    readOnly: true,\r\n    lineNumbers: true,\r\n    lineWrapping: true,\r\n    foldGutter: false,\r\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n    autoCloseBrackets: true,\r\n    matchBrackets: true,\r\n    lint: true\r\n\r\n  };\r\n  constructor(private inicioSrv: InicioService, private dialog: MatDialog) {\r\n    this.code = 'asd';\r\n\r\n  }\r\n  tablaGlobal: tablaSimbolos = new tablaSimbolos();\r\n  tablaGlobalX: tablaSimbolosXQuery = new tablaSimbolosXQuery();\r\n\r\n  code = '';\r\n  contenido = '';\r\n  ngOnInit(): void {\r\n    console.log(document.querySelector('#codigo'))\r\n    /* var editor = CodeMirror.fromTextArea(document.querySelector('#editor'), {\r\n       mode: \"javascript\",\r\n       lineNumbers: true,\r\n   });\r\n   editor.save()*/\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    this.editor.getEditor().setOptions({\r\n      showLineNumbers: true,\r\n      tabSize: 2\r\n    });\r\n\r\n    this.editor.mode = 'javascript';\r\n    this.editor.value = `function testThis() {\r\n  console.log(\"it's working!\")\r\n}`\r\n\r\n    this.editor.getEditor().commands.addCommand({\r\n      name: \"showOtherCompletions\",\r\n      bindKey: \"Ctrl-.\",\r\n      exec: function (editor) {\r\n\r\n      }\r\n    })\r\n\r\n    this.data = JSON.parse(localStorage.getItem('contenido'));\r\n    if (this.data != '' || this.data != undefined) {\r\n      this.mostrarContenido(this.data.console, 'consolas');\r\n    }\r\n  }\r\n  data;\r\n  getValue() {\r\n    console.log(this.editor.value)\r\n    console.log(eval(this.editor.value));\r\n  }\r\n  colocarConsola(res, texto) {\r\n    const dataObject = {\r\n      text: 'asd',\r\n      console: 'res',\r\n    };\r\n    localStorage.setItem('consulta', JSON.stringify(dataObject));\r\n  }\r\n  getConsola() {\r\n    this.data = JSON.parse(localStorage.getItem('contenido'));\r\n    if (this.data != '' || this.data != undefined) {\r\n      this.mostrarContenido(this.data.text, 'contenido');\r\n    }\r\n  }\r\n\r\n  /*A R B O L  A S C E N D E N T E */\r\n  interpretarContenido(texto: string) {\r\n    listaErrores = new Array<Errores>();\r\n    if (texto == null) return document.write('Error');\r\n\r\n    try {\r\n      const analizador = Analizador;\r\n      const objetos = analizador.parse(texto);\r\n\r\n      TreeAsc = new Arbol([objetos]);\r\n      TreeAsc.settablaGlobal(this.tablaGlobal);\r\n\r\n      //  PARA GUARDAR DATOS\r\n      // TODO FOR INTERPRETAR\r\n      for (let i of TreeAsc.getinstrucciones()) {\r\n        if (i instanceof Objeto) {\r\n          var objetito = i.interpretar(TreeAsc, this.tablaGlobal); //retorna simbolo\r\n          //this.tablaGlobal.setVariable(objetito)\r\n        }\r\n      }\r\n      console.log(this.tablaGlobal);\r\n\r\n      var atributos = \"\";\r\n      /***************************************************************************************************\r\n     ************************* MANEJO DE CODIGO 3 DIRECCIONES ASCENDENTE *******************************\r\n     * *************************************************************************************************\r\n    */\r\n      contenidocd3 = \"\"\r\n      TreeAsc.codigo3d.push(\"int main(){\\n\");\r\n\r\n\r\n      for (let i of TreeAsc.getinstrucciones()) {\r\n        if (i instanceof Objeto) {\r\n          var lista = i.codigo3D(TreeAsc, this.tablaGlobal); //retorna simbolo\r\n          this.tablaGlobal.setVariable(lista);\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n      /* **********************L L E N A D O    T A B L A    D E    S I M B O L O S************************* */\r\n      Ambito = \"Global\"\r\n      tabsim = new Map<String, String>();\r\n      for (var key of this.tablaGlobal.tablaActual) {\r\n\r\n        if (key.getvalor() instanceof tablaSimbolosXQuery) {\r\n          var Reporte = new reporteTabla( \"Objeto\",key.getidentificador(), key.getLinea(), key.getColumna(), Ambito, key.getvalor(), key.setcd3Value());\r\n          TreeAsc.listaSimbolos.push(Reporte);\r\n          if (key.getAtributo().size != 0) {\r\n            for (var [key2, value2,] of key.getAtributo()) {\r\n              var Reporte = new reporteTabla(key2, \"Atributo\", key.getidentificador(), value2, key.getAtributoLinea(), key.getAtributoColumna(), key.get3DAtributo());\r\n              TreeAsc.listaSimbolos.push(Reporte);\r\n            }\r\n          }\r\n\r\n          tabsim.set(Ambito, key.getidentificador())\r\n          Ambito = key.getidentificador();\r\n          this.ReportSimbolos(key.getvalor(), TreeAsc)\r\n        } else {\r\n          var Reporte = new reporteTabla(key.getidentificador(), \"Objeto\", key.getidentificador(), key.getvalor(), key.getLinea(), key.getColumna(), key.setcd3Value());\r\n          TreeAsc.listaSimbolos.push(Reporte);\r\n        }\r\n      }\r\n      ArbolGlobalReporte = TreeAsc.getSimbolos()\r\n      tabsim.clear();\r\n      /***************************************************************************************************************\r\n       * ***********************************************A R B O L ****************************************************\r\n       **************************************************************************************************************/\r\n      var init = new nodoAST(\"RAIZ\");\r\n      var instrucciones = new nodoAST(\"HIJOS\");\r\n      for (let i of TreeAsc.getinstrucciones()) {\r\n        instrucciones.agregarHijoAST(i.getNodo());\r\n\r\n      }\r\n\r\n      for (let i of TreeAsc.getinstrucciones()) {\r\n\r\n        if (i instanceof Errores) {\r\n          listaErrores.push(i);\r\n        }\r\n      }\r\n\r\n      init.agregarHijoAST(instrucciones);\r\n\r\n      let sim_string = JSON.stringify(init);\r\n      localStorage.setItem(\"simbolos\", sim_string);\r\n      const gramat = Gramatical;\r\n      const gramar = gramat.parse(texto);\r\n      localStorage.setItem(\"gramatica\", gramar);\r\n      console.log(listaErrores)\r\n\r\n      let errores = JSON.stringify(listaErrores);\r\n      localStorage.setItem(\"errores\", errores);\r\n\r\n\r\n\r\n\r\n      var reco = TreeAsc.getSimbolos();\r\n      let tabla = JSON.stringify(reco);\r\n      localStorage.setItem(\"symbol\", tabla);\r\n\r\n      /**M A N E J O   E R R O R  S I N T A C T I C O */\r\n      let errorsito = Analizador;\r\n      let errorts = errorsito.parse(texto);\r\n\r\n\r\n      //console.log(listaErrores);\r\n    } catch (error) {\r\n      if (error instanceof ReferenceError) {\r\n        let errores = JSON.stringify(listaErrores);\r\n        localStorage.setItem(\"errores\", errores);\r\n      }\r\n    } finally {\r\n      let errores = JSON.stringify(listaErrores);\r\n      localStorage.setItem(\"errores\", errores);\r\n    }\r\n\r\n\r\n  }\r\n  ReportSimbolos(tablaGlobal: tablaSimbolos, Tree: Arbol) {\r\n    for (var key of tablaGlobal.tablaActual) {\r\n\r\n      if (key.getvalor() instanceof tablaSimbolos) {\r\n        if (Ambito === key.getidentificador().toString()) {\r\n          for (var [key2, value2,] of tabsim) {\r\n\r\n            if (value2 === key.getidentificador()) {\r\n              Ambito = key2\r\n            }\r\n\r\n          }\r\n        }\r\n        var Reporte = new reporteTabla(key.getidentificador(), \"Objeto\", Ambito, \"Objeto\", key.getLinea(), key.getColumna(), key.setcd3Value());\r\n        Tree.listaSimbolos.push(Reporte);\r\n\r\n        for (var [key2, value2,] of tabsim) {\r\n          if (Ambito != key.getidentificador().toString()) {\r\n            if (key2 === Ambito && value2 === key.getidentificador()) {\r\n              Ambito = value2\r\n            } else {\r\n              tabsim.set(Ambito, key.getidentificador())\r\n              Ambito = key.getidentificador();\r\n            }\r\n\r\n          }\r\n        }\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            var Reporte = new reporteTabla(key2, \"Atributo\", key.getidentificador(), value2, key.getAtributoLinea(), key.getAtributoColumna(), key.get3DAtributo());\r\n            Tree.listaSimbolos.push(Reporte);\r\n          }\r\n        }\r\n        this.ReportSimbolos(key.getvalor(), Tree)\r\n      } else {\r\n        var Reporte = new reporteTabla(key.getidentificador(), \"Objeto\", Ambito, key.getvalor(), key.getLinea(), key.getColumna(), key.setcd3Value());\r\n        Tree.listaSimbolos.push(Reporte);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n   * %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% FINALIZAR CD3 MOSTRAR EN PANTALLA %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n   * %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n   */\r\n  finalizarCD3() {\r\n    //ES VARIABLES AL INICIO\r\n    contenidocd3 = \"#include <stdio.h>\\n#include<math.h>\\n\"\r\n    let bandera: Boolean = false;\r\n    try {\r\n\r\n      if (TreeAsc.codigo3d.length != 0) {\r\n        for (let x = 0; x < TreeAsc.contadort; x++) {\r\n          if (x == 0) { contenidocd3 = contenidocd3 + \"double \" }\r\n          else if (x % 20 == 0) { contenidocd3 = contenidocd3 + \"\\n\" }\r\n          contenidocd3 = contenidocd3 + \"$t\" + x;\r\n          if (TreeAsc.contadort - 1 !== x) { contenidocd3 = contenidocd3 + \",\" }\r\n\r\n        }\r\n\r\n        if (TreeXQuery.codigo3d.length != 0) {\r\n          contenidocd3 += \";\\n\"\r\n          for (let x = TreeAsc.contadort; x < TreeXQuery.contadort; x++) {\r\n            if (x == 0) { contenidocd3 = contenidocd3 + \"double \" }\r\n            else if (x % 20 == 0) { contenidocd3 = contenidocd3 + \"\\n\" }\r\n            contenidocd3 = contenidocd3 + \"$t\" + x;\r\n            if (TreeXQuery.contadort - 1 !== x) { contenidocd3 = contenidocd3 + \",\" }\r\n\r\n          }\r\n        }\r\n        bandera = true;\r\n        if (TreeAsc.contadort !== 0) { contenidocd3 = contenidocd3 + \";\\n\" }\r\n        TreeAsc.Encabezadocodigo3d.forEach(element => {\r\n          contenidocd3 += element + \"\\n\"\r\n        });\r\n      }\r\n\r\n      //ITERA PARA EL CONTENIDO DEL MAIN\r\n      if (TreeAsc.codigo3d != null) {\r\n        TreeAsc.codigo3d.forEach(element => {\r\n          contenidocd3 += element + \"\\n\"\r\n        });\r\n\r\n      }\r\n      try {\r\n        cd3XPath.forEach(element => {\r\n          contenidocd3 += element + \"\\n\"\r\n        });\r\n      } catch (error) {\r\n\r\n      }\r\n      if (TreeXQuery.codigo3d != null) {\r\n        \r\n        TreeXQuery.codigo3d.forEach(element => {\r\n          contenidocd3 += element + \"\\n\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //CONTENIDO DE XQUERY\r\n\r\n      if (TreeXQuery.codigo3d != null) {\r\n\r\n\r\n        if (bandera == false) {\r\n          for (let x = 0; x < TreeXQuery.contadort; x++) {\r\n            if (x == 0) { contenidocd3 = contenidocd3 + \"double \" }\r\n            else if (x % 20 == 0) { contenidocd3 = contenidocd3 + \"\\n\" }\r\n            contenidocd3 = contenidocd3 + \"$t\" + x;\r\n            if (TreeXQuery.contadort - 1 !== x) { contenidocd3 = contenidocd3 + \",\" }\r\n\r\n          }\r\n          if (TreeXQuery.contadort !== 0) { contenidocd3 = contenidocd3 + \";\\n\" }\r\n          TreeXQuery.Encabezadocodigo3d.forEach(element => {\r\n            contenidocd3 += element + \"\\n\"\r\n          });\r\n          contenidocd3 += \"\\nint main(){\\n\"\r\n        }\r\n\r\n        TreeXQuery.codigo3d.forEach(element => {\r\n          contenidocd3 += element + \"\\n\"\r\n        });\r\n      }\r\n    }\r\n    if (Funcionescd3.length != 0) {\r\n      contenidocd3 += \"return 1;\\n}\\n\"\r\n      Funcionescd3.forEach(element => {\r\n        contenidocd3 += element + \"\\n\"\r\n      });\r\n    } else {\r\n      contenidocd3 += contenidocd3 + \"return 1;\\n}\"\r\n    }\r\n    this.mostrarContenido(contenidocd3, 'cdirecciones');\r\n  }\r\n\r\n  /*A R B O L  D E S C E N D E N T E */\r\n\r\n  interpretarContenidoDesc(texto: string) {\r\n    listaErrores = new Array<Errores>();\r\n    if (texto == null) return document.write('Error');\r\n    const analizador = AnalizadorD;\r\n    const objetos = analizador.parse(texto);\r\n    const tablaGlobal: tablaSimbolos = new tablaSimbolos();\r\n    var Tree: Arbol = new Arbol([objetos]);\r\n    Tree.settablaGlobal(tablaGlobal);\r\n    console.log(tablaGlobal);\r\n    //  PARA GUARDAR DATOS\r\n\r\n    // TODO FOR INTERPRETAR\r\n\r\n    var init2 = new nodoAST(\"RAIZ\");\r\n    var instrucciones = new nodoAST(\"HIJOS\");\r\n    for (let i of Tree.getinstrucciones()) {\r\n      instrucciones.agregarHijoAST(i.getNodo());\r\n\r\n    }\r\n    for (let i of Tree.getinstrucciones()) {\r\n      /*if (i instanceof Errores) {\r\n        listaErrores.push(i);\r\n      }*/\r\n    }\r\n\r\n    init2.agregarHijoAST(instrucciones);\r\n\r\n    let sim_string = JSON.stringify(init2);\r\n    localStorage.setItem(\"simbolos1\", sim_string);\r\n\r\n    /***************************************************************************************************\r\n     ************************* MANEJO DE CODIGO 3 DIRECCIONES DESCENDENTE ******************************\r\n     * *************************************************************************************************\r\n    */\r\n\r\n    var contenidocd3 = \"#include <stdio.h>\\n#include<math.h>\\n\"\r\n\r\n    Tree.codigo3d.push(\"int main(){\\n\");\r\n\r\n\r\n    for (let i of Tree.getinstrucciones()) {\r\n      if (i instanceof Objeto) {\r\n        var lista = i.codigo3D(Tree, this.tablaGlobal); //retorna simbolo\r\n        this.tablaGlobal.setVariable(lista);\r\n      }\r\n    }\r\n    //ES VARIABLES AL INICIO\r\n    for (let x = 0; x < Tree.contadort; x++) {\r\n      if (x == 0) { contenidocd3 = contenidocd3 + \"double \" }\r\n      else if (x % 20 == 0) { contenidocd3 = contenidocd3 + \"\\n\" }\r\n      contenidocd3 = contenidocd3 + \"t\" + x;\r\n      if (Tree.contadort - 1 !== x) { contenidocd3 = contenidocd3 + \",\" }\r\n\r\n    }\r\n    if (Tree.contadort !== 0) { contenidocd3 = contenidocd3 + \";\\n\" }\r\n    Tree.Encabezadocodigo3d.forEach(element => {\r\n      contenidocd3 += element + \"\\n\"\r\n    });\r\n    //ITERA PARA EL CONTENIDO DEL MAIN\r\n    Tree.codigo3d.forEach(element => {\r\n      contenidocd3 += element + \"\\n\"\r\n    });\r\n\r\n    const gramat = GramaticalDes;\r\n    const gramar = gramat.parse(texto);\r\n    localStorage.setItem(\"gramatica1\", gramar);\r\n\r\n\r\n    //console.log(gramar);\r\n  }\r\n\r\n  /*********************************************************************************************************/\r\n  /***********************************************XPATH ASCENDENTE******************************************/\r\n  /*********************************************************************************************************/\r\n\r\n\r\n  EjecutarAsc(texto: string) {\r\n\r\n    // if (texto == null) return document.write('Error');\r\n    cd3XPath = null;\r\n    cd3XPath = [];\r\n    const analizador = AnalizarAscXpath;\r\n    let objetos = analizador.parse(texto);\r\n    let ast = new ArbolXpath(analizador.parse(texto)); //ejecucion\r\n    console.log(\"lista ins xpath\")\r\n    console.log(listainstrucciones)\r\n    var Tree: ArbolXpath = new ArbolXpath([objetos]);\r\n    var tabla = new tablaSimbolos();                    //ejecucion\r\n    ast.settablaGlobal(tabla);                        //ejecucion\r\n    var tablita = this.tablaGlobal;\r\n    var c = 0;\r\n    var consolita = ''\r\n\r\n    for (var key of tablita.getTabla()) {//SIMBOLOS\r\n      if (key.getidentificador() == 'xml') {\r\n        tablita = key.getvalor()\r\n      }\r\n    }\r\n    console.log(ast.getinstrucciones().length)\r\n    for (let index = 0; index < ast.getinstrucciones().length; index++) {\r\n      const instructions = ast.getinstrucciones()[index];\r\n\r\n      instructions.forEach(element => {\r\n        c++\r\n        console.log(element)\r\n        if (element instanceof BarrasNodo) {\r\n          console.log(\"es barranodo\");\r\n\r\n          var resultador = element.interpretar(Tree, tablita);\r\n          if (resultador instanceof tablaSimbolos) {\r\n            tablita = resultador\r\n            if (c == instructions.length) {\r\n              if (TreeAsc != null) {\r\n                consolita += this.recorrerTabla(tablita, TreeAsc);\r\n                consolita += \"\\n\"\r\n              }\r\n            }\r\n          }\r\n          else { //VIENE STRING\r\n            consolita += resultador + \"\\n\"\r\n          }\r\n        }\r\n      });\r\n      c = 0;\r\n      console.log(\"SIGUIENTE\")\r\n    }\r\n\r\n\r\n\r\n    this.mostrarContenido(consolita, 'resultado');\r\n\r\n\r\n  }\r\n\r\n  ArbolAscAST(texto: string) {\r\n    if (texto == null) return document.write('Error');\r\n    const analizador = AnalizarDscXpath;\r\n    const objetos = analizador.parse(texto);\r\n    var Tree: ArbolXpath = new ArbolXpath([objetos]);\r\n    //GRAFICAS\r\n    var instrucciones = new nodoAst(\"INSTRUCCIONES\");\r\n    var contador = 0;\r\n\r\n    for (let i of Tree.getinstrucciones()) {\r\n      this.ciclo(i, contador, instrucciones)\r\n    }\r\n\r\n    let sim_string = JSON.stringify(instrucciones);\r\n    localStorage.setItem(\"astpath\", sim_string);\r\n    //TERMINA GRAFICAS\r\n  }\r\n\r\n  /*ESTE MUESTRA LOS CICLOS PARA COLOCAR EL ARBOL AST CON GETNODO*/\r\n  ciclo(i: any, numero: number, instruc: nodoAst) {\r\n    if (i[numero] != null) {\r\n\r\n      if (i[numero] instanceof BarrasNodo) {\r\n        let temp: BarrasNodo = i[numero]\r\n\r\n        instruc.agregarHijoAST(temp.getNodosAST())\r\n      }\r\n      if (i[numero] instanceof Axes) {\r\n        let temp: Axes = i[numero]\r\n        instruc.agregarHijoAST(temp.getNodosAST())\r\n      }\r\n      numero++\r\n      this.ciclo(i, numero, instruc);\r\n    }\r\n  }\r\n  /*********************************************************************************************************/\r\n  /***********************************************XPATH DESCENDENTE*****************************************/\r\n  /*********************************************************************************************************/\r\n  EjecutarDesc(texto: string) {\r\n    if (texto == null) return document.write('Error');\r\n    const analizador = AnalizarDscXpath;\r\n    const objetos = analizador.parse(texto);\r\n    var Tree: ArbolXpath = new ArbolXpath([objetos]);\r\n\r\n\r\n\r\n    var instrucciones = new nodoAst(\"INSTRUCCIONES\");\r\n    var contador = 0;\r\n\r\n\r\n    for (let i of Tree.getinstrucciones()) {\r\n      this.ciclo(i, contador, instrucciones)\r\n    }\r\n\r\n\r\n    let sim_string = JSON.stringify(instrucciones);\r\n    localStorage.setItem(\"astpath\", sim_string);\r\n  }\r\n  /****************************************************************************************************************/\r\n\r\n  textoEsperado = '';\r\n  textInputChange(fileInputEvent: any) {\r\n    var archivo = fileInputEvent.target.files[0];\r\n    if (!archivo) {\r\n      return;\r\n    }\r\n    var lector = new FileReader();\r\n    lector.onload = (e) => {\r\n      var contenido = e.target.result;\r\n      this.mostrarContenido(contenido, 'contenido');\r\n    };\r\n    lector.readAsText(archivo);\r\n  }\r\n\r\n\r\n  mostrarContenido(contenido, identificador) {\r\n    var elemento = document.getElementById(identificador);\r\n    elemento.innerHTML = contenido;\r\n  }\r\n\r\n  generarAst() {\r\n    this.inicioSrv.graficarAst().subscribe((res) => {\r\n      if (res.msg == false) {\r\n        alert('ALGO FALLO EN EL GRAFICO');\r\n      } else {\r\n        this.presentAlert();\r\n      }\r\n    });\r\n  }\r\n  presentAlert() {\r\n    // #docregion focus-restoration\r\n    this.dialog.open(Pruebas, {});\r\n  }\r\n  /**\r\n   * *********************************RECORRER TABLA PARA XPATH*************************************\r\n   * @param t \r\n   * @returns \r\n   */\r\n  recorrerTabla(t: tablaSimbolos, arbol: Arbol) {\r\n    var salida = ''\r\n    for (var key of t.tablaActual) {\r\n\r\n      var listaobjetitos = \"\";\r\n\r\n      let objetos = key.getvalor();\r\n      if (objetos instanceof tablaSimbolos) {\r\n        for (var key3 of objetos.tablaActual) {\r\n          listaobjetitos += `${key3.getidentificador()}, `\r\n        }\r\n        //  let recorrido=\r\n        let atributos = \"\"\r\n\r\n        /**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n         * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IMPRIMIR DATOS CD3 XPATH @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n         * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n         */\r\n\r\n        let etiqueta1 = \"<\" + key.getidentificador()\r\n        this.generarEtiquetascd3(\"<\" + key.getidentificador(), arbol);\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            etiqueta1 += \" \" + key2 + \"=\" + value2\r\n            this.generarEtiquetascd3(\" \" + key2 + \"=\", arbol);\r\n            let atrib = key.get3DAtributo()\r\n            this.printcd3Simple(atrib, arbol, key2);\r\n          }\r\n        }\r\n        etiqueta1 += \">\"\r\n        this.generarEtiquetascd3(\">\", arbol);\r\n        cd3XPath.push(`printf(\"%c\",10);`);\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta1 + \"\\n\" + this.recorrerTabla(objetos, arbol) + etiqueta2 + \"\\n\";\r\n        this.generarEtiquetascd3(etiqueta2, arbol);\r\n        cd3XPath.push(`printf(\"%c\",10);`);\r\n      } else {\r\n        let atributos = \"\"\r\n        this.generarEtiquetascd3(\"<\" + key.getidentificador(), arbol);\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            atributos += \" \" + key2 + \"=\" + value2\r\n            this.generarEtiquetascd3(\" \" + key2 + \"=\", arbol);\r\n            let atrib = key.get3DAtributo()\r\n            this.printcd3Simple(atrib, arbol, key2);\r\n          }\r\n        }\r\n        let contain = key.setcd3Value()\r\n        this.generarEtiquetascd3(\">\", arbol);\r\n        this.printcd3Simple(contain, arbol, key.getidentificador());\r\n        salida += \"<\" + key.getidentificador() + atributos + \">\"\r\n        salida += objetos.replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\");\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta2 + \"\\n\"\r\n        this.generarEtiquetascd3(etiqueta2, arbol);\r\n        cd3XPath.push(`printf(\"%c\",10);`);\r\n      }\r\n    }\r\n    return salida;\r\n\r\n  }\r\n  /**\r\n   * \r\n   * @param contenido \r\n   * @param arbol \r\n   */\r\n  printcd3Simple(contenido: String, arbol: Arbol, identificador: String) {\r\n    cd3XPath.push(`//***print  ${identificador}****`)\r\n    let countprint = arbol.getContadort();\r\n    cd3XPath.push(`$t${countprint}=stack[(int)${contenido}]; `);\r\n    cd3XPath.push(`$t0= $t${countprint}; `);\r\n    cd3XPath.push(\"imprimirString();\");\r\n\r\n  }\r\n  /**$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n   * *****************************************GENERACION DE <ETIQUTA></ETIQUETA>***********************\r\n   * $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n   * @param contenido \r\n   */\r\n  generarEtiquetascd3(contenido: String, arbol: Arbol) {\r\n    let stackID = arbol.getSTACK();\r\n    let contadorID = arbol.getContadort(); //temporales\r\n    cd3XPath.push(`// declaracion para imprimir etiquetas ${contenido}`);\r\n    cd3XPath.push(`$t${contadorID}=sp+${stackID};`);\r\n    let data: string = contenido + \"\";\r\n    let estado = 0;\r\n    for (let x = 0; x < data.length; x++) {\r\n      const iterator = data[x];\r\n      switch (estado) {\r\n        case 0: {\r\n          if (iterator == \"\\\\\") { estado = 1; continue; }\r\n          cd3XPath.push(`//agregamos el string al heap ${iterator}`);\r\n          cd3XPath.push(\"$t0=hp;\");\r\n\r\n          cd3XPath.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n          cd3XPath.push(\"guardarString();\");\r\n          break;\r\n        }\r\n        case 1:\r\n          {\r\n            let assci = 0;\r\n            if (iterator == \"n\") { assci = 10; }\r\n            else if (iterator == \"\\\"\") { assci = 34; }\r\n            else if (iterator == \"\\\\\") { assci = 92 }\r\n            else if (iterator == \"r\") { assci = 10 }\r\n            else if (iterator == \"t\") { assci = 9; }\r\n            else {\r\n              cd3XPath.push(\"//agregamos el string al heap\");\r\n              cd3XPath.push(\"$t0=hp;\");\r\n\r\n              cd3XPath.push(\"$t1=\" + 34 + \";\");\r\n              cd3XPath.push(\"guardarString();\");\r\n              cd3XPath.push(\"//agregamos el string al heap\");\r\n              cd3XPath.push(\"$t0=hp;\");\r\n\r\n              cd3XPath.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n              cd3XPath.push(\"guardarString();\");\r\n            }\r\n            cd3XPath.push(\"//agregamos el string al heap\");\r\n            cd3XPath.push(\"$t0=hp;\");\r\n\r\n            cd3XPath.push(\"$t1=\" + assci + \";\");\r\n            cd3XPath.push(\"guardarString();\");\r\n            estado = 0;\r\n            break;\r\n          }\r\n      }\r\n\r\n    }\r\n    cd3XPath.push(\"$t0=hp;\");\r\n    cd3XPath.push(\"$t1=-1;\");\r\n    cd3XPath.push(\"guardarString();\");\r\n    const contadort = arbol.getContadort();\r\n    cd3XPath.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n    cd3XPath.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n    cd3XPath.push(\"//***print****\")\r\n    let countprint = arbol.getContadort();\r\n    cd3XPath.push(`$t${countprint}=stack[(int)$t${contadorID}]; `);\r\n    cd3XPath.push(`$t0= $t${countprint}; `);\r\n    cd3XPath.push(\"imprimirString();\");\r\n\r\n  }\r\n\r\n  /*********************************************************************************************************/\r\n  /***********************************************X  Q  U  E  R  Y*****************************************/\r\n  /*********************************************************************************************************/\r\n\r\n  InterpretarXQUERY(texto: string) {\r\n    const analizador = AnalizadorXQUERY;\r\n    let objetos = analizador.parse(texto);\r\n    let ast = new ArbolXQUERY(analizador.parse(texto)); //ejecucion\r\n    console.log(\"aqui viene la lista de instrucciones\")\r\n    console.log(listainstrucciones)\r\n    TreeXQuery = new ArbolXQUERY([objetos]);\r\n    var tabla = new tablaSimbolosXQuery();                    //ejecucion\r\n    console.log(TreeXQuery);\r\n    var cadena = \"\"\r\n    var consola = \"\"\r\n    try {\r\n      TreeXQuery.setContadort(TreeAsc.contadort)\r\n      TreeXQuery.setEtiqueta(TreeAsc.getEtiqueta())\r\n      TreeXQuery.setStack(TreeAsc.getSTACK())\r\n    } catch (error) {\r\n    }\r\n    for (var key of this.tablaGlobal.getTabla()) {//SIMBOLOS\r\n      if (key.getidentificador() == 'xml') {\r\n        this.tablaGlobal = key.getvalor()\r\n      }\r\n    }\r\n\r\n    Funcionescd3 = new Array<String>();\r\n    for (let index = 0; index < ast.getinstrucciones().length; index++) {\r\n      const instructions = ast.getinstrucciones()[index];\r\n      if (instructions instanceof Funciones) {\r\n        var func = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal)\r\n      } else if (instructions instanceof Let) {\r\n        var respuesta = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal)\r\n        console.log(typeof respuesta)\r\n        if (respuesta instanceof SimboloXQuery) {\r\n          this.generarEtiquetasXQUERY(\"<\" + respuesta.getidentificador() + \">\", TreeAsc, TreeXQuery.codigo3d)\r\n          this.printcd3SimpleXquery(respuesta.setcd3Value(), TreeAsc, respuesta.getidentificador(), TreeXQuery.codigo3d)\r\n          this.generarEtiquetasXQUERY(\"</\" + respuesta.getidentificador() + \">\\n\", TreeAsc, TreeXQuery.codigo3d);\r\n          TreeXQuery.codigo3d.push(`printf(\"%c\",10);`);\r\n          cadena += \"<\" + respuesta.getidentificador() + \">\" + respuesta.getvalor() + \"</\" + respuesta.getidentificador() + \">\\n\"\r\n        } else if (respuesta instanceof Array) {\r\n          respuesta.forEach(element => {\r\n            if (element instanceof Simbolo) {\r\n              this.generarEtiquetasXQUERY(\"<\" + element.getidentificador() + \">\", TreeAsc, TreeXQuery.codigo3d)\r\n              this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), TreeXQuery.codigo3d)\r\n              this.generarEtiquetasXQUERY(\"</\" + element.getidentificador() + \">\\n\", TreeAsc, TreeXQuery.codigo3d);\r\n              TreeXQuery.codigo3d.push(`printf(\"%c\",10);`);\r\n              cadena += \"<\" + element.getidentificador() + \">\" + element.getvalor() + \"</\" + element.getidentificador() + \">\\n\"\r\n            } else {\r\n              cadena += element.getvalor() + \"\\n\";\r\n            }\r\n          });\r\n        } else if (respuesta instanceof tablaSimbolos) {\r\n          if (TreeAsc != null) {\r\n            cadena += this.recorrerTablaXquery(respuesta, TreeAsc);\r\n            cadena += \"\\n\"\r\n          }\r\n\r\n        } else {\r\n          console.log(\"de aqui soy\")\r\n          cadena += respuesta\r\n        }\r\n\r\n      } else if (instructions instanceof ForToSimple) {\r\n        var theforto = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = theforto.toString();\r\n\r\n      } else if (instructions instanceof ForToCompuesto) {\r\n        var thefortoC = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = thefortoC.toString();\r\n\r\n      } else if (instructions instanceof Number) {\r\n        var thenumber = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = thenumber;\r\n\r\n      } else if (instructions instanceof StringF) {\r\n        var thest = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = thest;\r\n\r\n      } else if (instructions instanceof Upper) {\r\n        var theuper = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = theuper;\r\n\r\n      } else if (instructions instanceof Lower) {\r\n        var thelower = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = thelower;\r\n\r\n      } else if (instructions instanceof Substring) {\r\n        var thesubs = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        cadena = thesubs;\r\n\r\n      } else if (instructions instanceof IfFuncionAnidado) {\r\n        var theifani = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        console.log(\"hola estamos en if anidado\")\r\n\r\n        //cadena = theifani;\r\n\r\n      } else if (instructions instanceof ForSimple) {\r\n        var respuesta: any = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n        if (respuesta instanceof SimboloXQuery) {\r\n          cadena += respuesta.getvalor()\r\n        } else if (respuesta instanceof Array) {\r\n          respuesta.forEach(element => {\r\n            if (element instanceof Simbolo) {\r\n              this.generarEtiquetasXQUERY(\"<\" + element.getidentificador() + \">\", TreeAsc, TreeXQuery.codigo3d)\r\n              this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), TreeXQuery.codigo3d)\r\n              this.generarEtiquetasXQUERY(\"</\" + element.getidentificador() + \">\\n\", TreeAsc, TreeXQuery.codigo3d);\r\n              TreeXQuery.codigo3d.push(`printf(\"%c\",10);`);\r\n              cadena += \"<\" + element.getidentificador() + \">\" + element.getvalor() + \"</\" + element.getidentificador() + \">\\n\"\r\n            } else {\r\n              cadena += element.getvalor() + \"\\n\";\r\n            }\r\n          });\r\n        } else if (respuesta instanceof tablaSimbolos) {\r\n          if (TreeAsc != null) {\r\n\r\n            cadena += this.recorrerFunciones(respuesta, TreeAsc, TreeXQuery.codigo3d);\r\n            cadena += \"\\n\"\r\n          }\r\n\r\n        } else {\r\n          cadena = <string><unknown>instructions.respuesta\r\n\r\n        }\r\n      } else if (instructions instanceof Llamada) {\r\n        var call = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal)\r\n        TreeXQuery.codigo3d.push(instructions.identificador + \"();\")\r\n\r\n        Funcionescd3.push(instructions.identificador + \"(){\")\r\n        if (call instanceof SimboloXQuery) {\r\n\r\n          cadena += call.getvalor()\r\n          if (call.getvalor() === \"1\") {\r\n            var c1 = TreeXQuery.getContadort()\r\n            Funcionescd3.push(\"//***Print Number****\")\r\n            Funcionescd3.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n            Funcionescd3.push(\"$t2=\" + 1 + \";\");\r\n            Funcionescd3.push(\"NumberToString();\");\r\n            Funcionescd3.push(\"$t0=hp;\");\r\n            Funcionescd3.push(\"$t1=-1;\");\r\n            Funcionescd3.push(\"guardarString();\");\r\n            Funcionescd3.push(\"$t0= $t\" + c1 + \";\");\r\n            Funcionescd3.push(`imprimirString();`);\r\n            Funcionescd3.push(`printf(\"%c\",10);`);\r\n          }\r\n        } else if (call instanceof Array) {\r\n          call.forEach(element => {\r\n            if (element instanceof Simbolo) {\r\n              this.generarEtiquetasXQUERY(\"<\" + element.getidentificador() + \">\", TreeAsc, Funcionescd3)\r\n              this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), Funcionescd3)\r\n              this.generarEtiquetasXQUERY(\"</\" + element.getidentificador() + \">\\n\", TreeAsc, Funcionescd3);\r\n              TreeXQuery.codigo3d.push(`printf(\"%c\",10);`);\r\n              cadena += \"<\" + element.getidentificador() + \">\" + element.getvalor() + \"</\" + element.getidentificador() + \">\\n\"\r\n            } else {\r\n              cadena += element.getvalor() + \"\\n\";\r\n            }\r\n          });\r\n        } else if (call instanceof tablaSimbolos) {\r\n          if (TreeAsc != null) {\r\n            cadena += this.recorrerFunciones(call, TreeAsc, Funcionescd3);\r\n            cadena += \"\\n\"\r\n          }\r\n\r\n\r\n        } else if (instructions instanceof If) {\r\n\r\n\r\n          console.log(\"Enre al if\")\r\n          var abr: any = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);\r\n          console.log(\"loque trae abr\")\r\n          console.log(abr)\r\n          if (abr instanceof SimboloXQuery) {\r\n            cadena += abr.getvalor()\r\n            console.log(\"entre a simbolosxquery\")\r\n          } else if (abr instanceof Array) {\r\n            abr.forEach(element => {\r\n              cadena += element.getvalor();\r\n              console.log(\"entre a arrat\")\r\n\r\n            });\r\n          } else if (abr instanceof tablaSimbolos) {\r\n            if (TreeAsc != null) {\r\n              console.log(\"entre a tabla simbolos\")\r\n\r\n              cadena += this.recorrerTablaXquery(abr, TreeAsc);\r\n              cadena += \"\\n\"\r\n            }\r\n\r\n\r\n          }\r\n        } else {\r\n\r\n          cadena += call\r\n          if (call as Number) {\r\n            var c1 = TreeXQuery.getContadort()\r\n            Funcionescd3.push(\"//***Print Number****\")\r\n            Funcionescd3.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n            Funcionescd3.push(\"$t2=\" + call + \";\");\r\n            Funcionescd3.push(\"NumberToString();\");\r\n            Funcionescd3.push(\"$t0=hp;\");\r\n            Funcionescd3.push(\"$t1=-1;\");\r\n            Funcionescd3.push(\"guardarString();\");\r\n            Funcionescd3.push(\"$t0= $t\" + c1 + \";\");\r\n            Funcionescd3.push(`imprimirString();`);\r\n            Funcionescd3.push(`printf(\"%c\",10);`);\r\n          } else if (call == false || call === \"false\") {\r\n            var L5 = TreeXQuery.getEtiqueta();\r\n            var L6 = TreeXQuery.getEtiqueta();\r\n            var L7 = TreeXQuery.getEtiqueta();\r\n            Funcionescd3.push(`if(0==1) goto L${L5};`)\r\n            Funcionescd3.push(`goto L${L6};`)\r\n            Funcionescd3.push(`L${L5}:`)\r\n            Funcionescd3.push(`printf(\"%c\",116);`)\r\n            Funcionescd3.push(`printf(\"%c\",114);`)\r\n            Funcionescd3.push(`printf(\"%c\",117);`)\r\n            Funcionescd3.push(`printf(\"%c\",101);`)\r\n            Funcionescd3.push(`goto L${L7};`)\r\n            Funcionescd3.push(`L${L6}:`)\r\n            Funcionescd3.push(`printf(\"%c\",102);`)\r\n            Funcionescd3.push(`printf(\"%c\",97);`)\r\n            Funcionescd3.push(`printf(\"%c\",108);`)\r\n            Funcionescd3.push(`printf(\"%c\",115);`)\r\n            Funcionescd3.push(`printf(\"%c\",101);`)\r\n            Funcionescd3.push(`L${L7}:`)\r\n            Funcionescd3.push(`printf(\"%c\",10);`)\r\n          } else if (call == true || call === \"true\") {\r\n            var L5 = TreeXQuery.getEtiqueta();\r\n            var L6 = TreeXQuery.getEtiqueta();\r\n            var L7 = TreeXQuery.getEtiqueta();\r\n            Funcionescd3.push(`if(1==1) goto L${L5};`)\r\n            Funcionescd3.push(`goto L${L6};`)\r\n            Funcionescd3.push(`L${L5}:`)\r\n            Funcionescd3.push(`printf(\"%c\",116);`)\r\n            Funcionescd3.push(`printf(\"%c\",114);`)\r\n            Funcionescd3.push(`printf(\"%c\",117);`)\r\n            Funcionescd3.push(`printf(\"%c\",101);`)\r\n            Funcionescd3.push(`goto L${L7};`)\r\n            Funcionescd3.push(`L${L6}:`)\r\n            Funcionescd3.push(`printf(\"%c\",102);`)\r\n            Funcionescd3.push(`printf(\"%c\",97);`)\r\n            Funcionescd3.push(`printf(\"%c\",108);`)\r\n            Funcionescd3.push(`printf(\"%c\",115);`)\r\n            Funcionescd3.push(`printf(\"%c\",101);`)\r\n            Funcionescd3.push(`L${L7}:`)\r\n            Funcionescd3.push(`printf(\"%c\",10);`)\r\n          }\r\n        }\r\n        Funcionescd3.push(\"return 1;\\n}\")\r\n      }\r\n\r\n      this.mostrarContenido(cadena, 'resultado');\r\n      cadena = \"\"\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  recorrerFunciones(t: tablaSimbolos, arbol: Arbol, lista: String[]) {\r\n    var salida = ''\r\n    for (var key of t.tablaActual) {\r\n\r\n      var listaobjetitos = \"\";\r\n\r\n      let objetos = key.getvalor();\r\n      if (objetos instanceof tablaSimbolos) {\r\n        for (var key3 of objetos.tablaActual) {\r\n          listaobjetitos += `${key3.getidentificador()}, `\r\n        }\r\n        //  let recorrido=\r\n        let atributos = \"\"\r\n\r\n        /**################################################################################################\r\n         * #################################### IMPRIMIR DATOS CD3 XQUERY #################################\r\n         * ################################################################################################\r\n         */\r\n\r\n        let etiqueta1 = \"<\" + key.getidentificador()\r\n        this.generarEtiquetasXQUERY(\"<\" + key.getidentificador(), arbol, lista);\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            etiqueta1 += \" \" + key2 + \"=\" + value2\r\n            this.generarEtiquetasXQUERY(\" \" + key2 + \"=\", arbol, lista);\r\n            let atrib = key.get3DAtributo()\r\n            this.printcd3SimpleXquery(atrib, arbol, key2, lista);\r\n          }\r\n        }\r\n        etiqueta1 += \">\"\r\n        this.generarEtiquetasXQUERY(\">\", arbol, lista);\r\n        lista.push(`printf(\"%c\",10);`);\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta1 + \"\\n\" + this.recorrerTablaXquery(objetos, arbol) + etiqueta2 + \"\\n\";\r\n        this.generarEtiquetasXQUERY(etiqueta2, arbol, lista);\r\n        lista.push(`printf(\"%c\",10);`);\r\n      } else {\r\n        let atributos = \"\"\r\n        this.generarEtiquetasXQUERY(\"<\" + key.getidentificador(), arbol, lista);\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            atributos += \" \" + key2 + \"=\" + value2\r\n            this.generarEtiquetasXQUERY(\" \" + key2 + \"=\", arbol, lista);\r\n            let atrib = key.get3DAtributo()\r\n            this.printcd3SimpleXquery(atrib, arbol, key2, lista);\r\n          }\r\n        }\r\n        let contain = key.setcd3Value()\r\n        this.generarEtiquetasXQUERY(\">\", arbol, lista);\r\n        this.printcd3SimpleXquery(contain, arbol, key.getidentificador(), lista);\r\n        salida += \"<\" + key.getidentificador() + atributos + \">\"\r\n        salida += objetos.replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\");\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta2 + \"\\n\"\r\n        this.generarEtiquetasXQUERY(etiqueta2, arbol, lista);\r\n        lista.push(`printf(\"%c\",10);`);\r\n      }\r\n    }\r\n    return salida;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  recorrerTablaXquery(t: tablaSimbolos, arbol: Arbol) {\r\n    var salida = ''\r\n    for (var key of t.tablaActual) {\r\n\r\n      var listaobjetitos = \"\";\r\n\r\n      let objetos = key.getvalor();\r\n      if (objetos instanceof tablaSimbolos) {\r\n        for (var key3 of objetos.tablaActual) {\r\n          listaobjetitos += `${key3.getidentificador()}, `\r\n        }\r\n        //  let recorrido=\r\n        let atributos = \"\"\r\n\r\n        /**################################################################################################\r\n         * #################################### IMPRIMIR DATOS CD3 XQUERY #################################\r\n         * ################################################################################################\r\n         */\r\n\r\n        let etiqueta1 = \"<\" + key.getidentificador()\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            etiqueta1 += \" \" + key2 + \"=\" + value2\r\n          }\r\n        }\r\n        etiqueta1 += \">\"\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta1 + \"\\n\" + this.recorrerTablaXquery(objetos, arbol) + etiqueta2 + \"\\n\";\r\n      } else {\r\n        let atributos = \"\"\r\n        if (key.getAtributo().size != 0) {\r\n          for (var [key2, value2,] of key.getAtributo()) {\r\n            atributos += \" \" + key2 + \"=\" + value2\r\n            let atrib = key.get3DAtributo()\r\n          }\r\n        }\r\n        salida += \"<\" + key.getidentificador() + atributos + \">\"\r\n        salida += objetos.replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\");\r\n        let etiqueta2 = \"</\" + key.getidentificador() + \">\"\r\n        salida += etiqueta2 + \"\\n\"\r\n      }\r\n    }\r\n    return salida;\r\n\r\n  }\r\n\r\n\r\n  /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n   *$$$$$$$$$$$$$$$$$$$$$$$$ UTILIZACION PARA IMPRIMIR ETIQUETAS XQUERY $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n   *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\r\n   */\r\n  /**\r\n   * \r\n   * @param contenido \r\n   * @param arbol \r\n   * @param identificador \r\n   * @param lista \r\n   */\r\n  printcd3SimpleXquery(contenido: String, arbol: Arbol, identificador: String, lista: String[]) {\r\n    lista.push(`//***print  ${identificador}****`)\r\n    let countprint = arbol.getContadort();\r\n    lista.push(`$t${countprint}=stack[(int)${contenido}]; `);\r\n    lista.push(`$t0= $t${countprint}; `);\r\n    lista.push(\"imprimirString();\");\r\n\r\n  }\r\n  /**\r\n   * \r\n   * @param contenido \r\n   * @param arbol \r\n   * @param lista \r\n   */\r\n  generarEtiquetasXQUERY(contenido: String, arbol: Arbol, lista: String[]) {\r\n    let stackID = arbol.getSTACK();\r\n    let contadorID = arbol.getContadort(); //temporales\r\n    lista.push(`// declaracion para imprimir etiquetas ${contenido}`);\r\n    lista.push(`$t${contadorID}=sp+${stackID};`);\r\n    let data: string = contenido + \"\";\r\n    let estado = 0;\r\n    for (let x = 0; x < data.length; x++) {\r\n      const iterator = data[x];\r\n      switch (estado) {\r\n        case 0: {\r\n          if (iterator == \"\\\\\") { estado = 1; continue; }\r\n          lista.push(`//agregamos el string al heap ${iterator}`);\r\n          lista.push(\"$t0=hp;\");\r\n\r\n          lista.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n          lista.push(\"guardarString();\");\r\n          break;\r\n        }\r\n        case 1:\r\n          {\r\n            let assci = 0;\r\n            if (iterator == \"n\") { assci = 10; }\r\n            else if (iterator == \"\\\"\") { assci = 34; }\r\n            else if (iterator == \"\\\\\") { assci = 92 }\r\n            else if (iterator == \"r\") { assci = 10 }\r\n            else if (iterator == \"t\") { assci = 9; }\r\n            else {\r\n              lista.push(\"//agregamos el string al heap\");\r\n              lista.push(\"$t0=hp;\");\r\n\r\n              lista.push(\"$t1=\" + 34 + \";\");\r\n              lista.push(\"guardarString();\");\r\n              lista.push(\"//agregamos el string al heap\");\r\n              lista.push(\"$t0=hp;\");\r\n\r\n              lista.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n              lista.push(\"guardarString();\");\r\n            }\r\n            lista.push(\"//agregamos el string al heap\");\r\n            lista.push(\"$t0=hp;\");\r\n\r\n            lista.push(\"$t1=\" + assci + \";\");\r\n            lista.push(\"guardarString();\");\r\n            estado = 0;\r\n            break;\r\n          }\r\n      }\r\n\r\n    }\r\n    lista.push(\"$t0=hp;\");\r\n    lista.push(\"$t1=-1;\");\r\n    lista.push(\"guardarString();\");\r\n    const contadort = arbol.getContadort();\r\n    lista.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n    lista.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n    lista.push(\"//***print****\")\r\n    let countprint = arbol.getContadort();\r\n    lista.push(`$t${countprint}=stack[(int)$t${contadorID}]; `);\r\n    lista.push(`$t0= $t${countprint}; `);\r\n    lista.push(\"imprimirString();\");\r\n\r\n  }\r\n\r\n  /**************************************************************************************************\r\n   * *********************************OPTIMIZACION***************************************************\r\n   * ***********************************************************************************************/\r\n  Optimizar(texto: string) {\r\n    const Optimo = Optimizacion;\r\n    const objetos = Optimo.parse(texto);\r\n    let cadenaconcat = \"\";\r\n    var Tree: TreeOptimo = new TreeOptimo([objetos]);;\r\n    var tabla = new tablaSimbolos();                    //ejecucion\r\n    Tree.settablaGlobal(tabla);\r\n    for (var instruction of Tree.getinstrucciones()) {\r\n      instruction.forEach(element => {\r\n        if (element instanceof Declaracion) {\r\n          cadenaconcat += element.interpretar(Tree, tabla);\r\n        } else if (element instanceof Funcion) {\r\n          cadenaconcat += element.interpretar(Tree, tabla);\r\n        } else {\r\n          cadenaconcat += element;\r\n        }\r\n      });\r\n\r\n    }\r\n    this.mostrarContenido(cadenaconcat, 'resultado');\r\n\r\n    var reco = Tree.getSimbolos();\r\n    let reporte = JSON.stringify(reco);\r\n    localStorage.setItem(\"optimo\", reporte);\r\n  }\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'contenido-dialog',\r\n  templateUrl: './contenido-dialog-component.html',\r\n})\r\nexport class Pruebas { }","<div class=\"contenedor\">\r\n  <h6>AMDG</h6>\r\n  <div class=\"consolaContainer\">\r\n\r\n    EDITOR XPATH\r\n    <mat-button-toggle-group name=\"fontStyle\">\r\n      <mat-button-toggle (click)=\"EjecutarDesc(consolas.value)\" value=\"Interpretar\">AST Desc </mat-button-toggle>\r\n      <mat-button-toggle (click)=\"ArbolAscAST(consolas.value)\" value=\"Interpretar2\">AST Asc </mat-button-toggle>\r\n      <mat-button-toggle (click)=\"EjecutarAsc(consolas.value)\" value=\"Interpretar2\">Consulta </mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n    <textarea #consolas id=\"consolas\" class=\"consola\"></textarea>\r\n  </div>\r\n  <div class=\"editores\">\r\n    <div id=\"ediT\">\r\n      <label>Editor XML</label>\r\n      <br>\r\n      <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\r\n        <mat-button-toggle (click)=\"interpretarContenido(contenido.value)\" value=\"Interpretar\">Interpretar XML Asc\r\n        </mat-button-toggle>\r\n        <mat-button-toggle (click)=\"interpretarContenidoDesc(contenido.value)\" value=\"InterpretarDesc\">Interpretar XML\r\n          Desc</mat-button-toggle>\r\n        <mat-button-toggle value=\"Abrir Archivo\" (click)=\"textInput.click()\">Abrir Archivo XML</mat-button-toggle>\r\n        <input type=\"file\" hidden=\"true\" #textInput onclick=\"this.value=null\" (change)=\"textInputChange($event)\"\r\n          accept=\".ty\" />\r\n        <mat-button-toggle value=\"Guardar\">Guardar XML</mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n      <textarea #contenido id=\"contenido\" class=\"forma\" (this.onload)=\"getConsola()\"></textarea>\r\n      <label>SALIDA CONSULTAS</label>\r\n      <textarea id=\"resultado\" class=\"textareanumber3\"></textarea>\r\n      <label>SALIDA CD3</label>\r\n      <br>\r\n      <mat-button-toggle id=\"mostrar\" (click)=\"finalizarCD3()\" value=\"Interpretar\">MOSTRAR CD3\r\n      </mat-button-toggle>\r\n      <mat-button-toggle id=\"mostrar\" (click)=\"Optimizar(cdirecciones.value)\" value=\"Optimizar\">OPTIMIZAR\r\n      </mat-button-toggle>\r\n      <textarea #cdirecciones id=\"cdirecciones\" class=\"textareanumber4\"></textarea>\r\n\r\n    </div>\r\n    <div><br></div>\r\n    <div id=\"ediT\">\r\n      <label>EDITOR XQUERY</label>\r\n      <br>\r\n      <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\r\n        <mat-button-toggle (click)=\"InterpretarXQUERY(resultado.value)\" value=\"Interpretar\">Consulta XQUERY\r\n        </mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n      <textarea #resultado id=\"XQUERY\" class=\"textareanumber\"></textarea>\r\n\r\n    </div>\r\n\r\n  </div>","<h1 mat-dialog-title>ARBOL AST</h1>\r\n<div mat-dialog-content>Se creo de forma exitosa el arbol AST</div>\r\n<div mat-dialog-actions>\r\n</div>","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class Nativo extends Instruccion {\r\n\r\n  valor: any;\r\n  constructor(tipo: Tipo, valor: any, fila: number, columna: number) {\r\n    super(tipo, fila, columna);\r\n    this.valor = valor;\r\n    if (tipo.getTipo() == tipoDato.CADENA) {\r\n      let val = this.valor.toString();\r\n      this.valor = val\r\n        .replace('\\\\n', '\\n')\r\n        .replace('\\\\t', '\\t')\r\n        .replace('\\\\r', '\\r')\r\n        .replace('\\\\\\\\', '\\\\')\r\n        .replace(\"\\\\'\", \"'\")\r\n        .replace('\\\\\"', '\"');\r\n    }\r\n\r\n  }\r\n\r\n  public getNodoAST(): nodoAST {\r\n    let nodo = new nodoAST('NATIVO');\r\n    nodo.agregarHijo(this.valor + '');\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    if (this.tipoDato.getTipo() == tipoDato.BOOLEANO) {\r\n      return this.valor == 'true' ? true : false;\r\n    }\r\n    let contador = arbol.getContadort();\r\n    let stack = arbol.getSTACK();\r\n    arbol.codigo3d.push(`// declaracion LET ${this.valor}`);\r\n    arbol.codigo3d.push(`$t${contador}=sp+${stack};`);\r\n    return this.valor;\r\n  }\r\n\r\n  public getNativo() {\r\n    return this.valor;\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport nodoAST from 'src/app/Backend/XPATH/Analizador/Abstracto/nodoAST';\r\nimport { parse } from 'ts-node';\r\nimport * as vis from 'vis';\r\n@Component({\r\n  selector: 'app-xpath-asc-ast',\r\n  templateUrl: './xpath-asc-ast.component.html',\r\n  styleUrls: ['./xpath-asc-ast.component.css']\r\n})\r\nexport class XpathAscAstComponent implements OnInit {\r\n  contador=1;\r\n  cuerpo='';\r\n  dataSource = '';\r\n  nodes = null;\r\n  edges = null;\r\n  network = null;\r\n  cadena=\"\";\r\n  directionInput = document.getElementById(\"direction\");\r\n  constructor() { }\r\n  c = 0;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.nodes = [];\r\n    this.edges = [];\r\n    let info = window.localStorage.getItem('astpath');\r\n    let contenido:nodoAST = <nodoAST>JSON.parse(info);\r\n    \r\n    /*this.cadena+=this.getValor(contenido)+\"--\"\r\n    this.graficaAST(contenido)\r\n    console.log(this.cadena)*/\r\n    \r\n    var nivel = 0;\r\n    this.nodes.push({id: this.c, label: this.getValor(contenido), nivel:nivel})\r\n    this.nodes[this.c][\"level\"]=nivel;\r\n    var hijos = this.recorrerAST(this.c,contenido,nivel);\r\n    console.log(hijos)\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes.push({id: nodo.id, label: nodo.label})\r\n    }\r\n    for (let enlace of hijos.enlaces){\r\n      this.edges.push({from: enlace.id1, to: enlace.id2})\r\n    }\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes[nodo.id][\"level\"]=nodo.nivel;\r\n    }\r\n\r\n   \r\n    var container = document.getElementById(\"mynetwork\");\r\n\r\n      \r\n      \r\n      \r\n    var data = {\r\n      nodes: this.nodes,\r\n      edges: this.edges,\r\n    };\r\n\r\n    var options = {\r\n      nodes:{// Control de nodos\r\n        borderWidth: 2,//Ajuste de ancho de borde de nodo\r\n        size: 30,//Haga clic en la configuración de ancho cuando esté seleccionado,\r\n        color: {\r\n            border: '#A72168',//Configuración de color del borde\r\n            background:'#F695BB',\r\n        },\r\n        font:{\r\n          color:\"#000000\",\r\n          face: 'Century Gothic'\r\n          }\r\n    },\r\n      edges: {\r\n        smooth: {\r\n          type: \"cubicBezier\",\r\n          forceDirection: \"vertical\",\r\n          roundness: 0.4,\r\n        }\r\n      },\r\n      layout: {\r\n        randomSeed: undefined,\r\n        improvedLayout:true,\r\n\r\n        hierarchical: {\r\n          \r\n          direction: \"UD\",\r\n          sortMethod: \"hubsize\"\r\n        },\r\n      },\r\n      \r\n      physics: false,\r\n    };\r\n    this.network = new vis.Network(container, data, options);\r\n\r\n    this.network.on(\"select\", function (params) {\r\n      document.getElementById(\"selection\").innerText =\r\n        \"Selection: \" + params.nodes;\r\n    });\r\n  }\r\n  \r\n  destroy() {\r\n    if (this.network !== null) {\r\n      this.network.destroy();\r\n      this.network = null;\r\n    }\r\n  }\r\n  recorrerAST(padre:number, nPadre:nodoAST, nivel:number)\r\n    {\r\n      var arr = {nodos:[],enlaces:[]}\r\n      for(let hijo of this.getHijos(nPadre))\r\n      {\r\n        nivel++\r\n        this.c++\r\n        arr.enlaces.push({id1:padre, id2:this.c})\r\n        arr.nodos.push({id:this.c, label:this.getValor(hijo), nivel:nivel})\r\n\r\n        var resultado = this.recorrerAST(this.c,hijo,nivel);\r\n        arr.enlaces = arr.enlaces.concat(resultado.enlaces);\r\n        arr.nodos = arr.nodos.concat(resultado.nodos);\r\n      }\r\n      return arr\r\n    }\r\n    getValor(nodo): string {\r\n      return nodo.valor;\r\n    }\r\n    getHijos(nodo): Array<nodoAST> {\r\n      return nodo.listaNodos;\r\n    }\r\n\r\n    graficaAST(nodo: nodoAST){\r\n      \r\n      for(let hijo of this.getHijos(nodo))\r\n      {\r\n        this.cadena+= this.getValor(hijo)+\"->\"\r\n        this.graficaAST(hijo)\r\n      }\r\n      \r\n    }\r\n}\r\n","<div id=\"mynetwork\"></div>","\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Identificador from '../Expresiones/Identificador';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class ParentesisExpresion extends Instruccion {\r\n  \r\n  public coma:string;\r\n  public Expresion: Instruccion\r\n  constructor(expresion:Instruccion, fila: number, columna: number,coma?:string) {\r\n\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    \r\n    this.coma=coma\r\n    this.Expresion= expresion\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    var nodo= new nodoAST('PARENTESIS_EXPRESION'); //PADRE SELECT\r\n    \r\n   \r\n    if(this.Expresion!=null){\r\n        \r\n          nodo.agregarHijoAST(this.Expresion.getNodosAST())\r\n    }\r\n    if(this.coma!=null){\r\n        var nodsBarras2= new nodoAST(this.coma)\r\n        nodo.agregarHijoAST(nodsBarras2)\r\n      }\r\n    return nodo;\r\n  }\r\n\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    arbol.gettablaGlobal();\r\n\r\n    let variable = tabla.getVariable(this.coma);\r\n    if (variable != null) {\r\n        /*SI NO ES NULA*/\r\n    } else {\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'VARIABLE ' + this.Expresion + ' NO EXISTE',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    }\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","export default class NodoErrores {\r\n    private tipoError: String;\r\n    private desc: String;\r\n    private fila: number;\r\n    private columna: number;\r\n    public getDesc(): String {\r\n      return this.desc;\r\n    }\r\n    public getTipoError(): String {\r\n      return this.tipoError;\r\n    }\r\n    public getcolumna(): number {\r\n      return this.columna;\r\n    }\r\n    public getFila(): number {\r\n      return this.fila;\r\n    }\r\n    constructor(tipo: String, desc: String, fila: number, columna: number) {\r\n      this.tipoError = tipo;\r\n      this.desc = desc;\r\n      this.fila = fila;\r\n      this.columna = columna;\r\n    }\r\n    public returnError(): String {\r\n      return (\r\n        'Se obtuvo: ' +\r\n        this.tipoError +\r\n        ' desc:{' +\r\n        this.desc +\r\n        '} en la fila: ' +\r\n        this.fila +\r\n        ' en la columna: ' +\r\n        this.columna +\r\n        '\\n'\r\n      );\r\n    }\r\n  }\r\n  ","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar GramaticaXML = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,4],$V2=[1,10],$V3=[2,13],$V4=[10,12,14,15],$V5=[1,20],$V6=[1,18],$V7=[5,9,10,13,16];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"OBJETO\":4,\"EOF\":5,\"INSTRUCCION\":6,\"CUERPO\":7,\"OBJETOS\":8,\"MENORQUEESPECIAL\":9,\"IDENTIFICADOR\":10,\"L_ATRIBUTOS\":11,\"MAYORQUEESPECIAL\":12,\"MENORQUE\":13,\"SELFCLOSE\":14,\"MAYORQUE\":15,\"SALIDA\":16,\"ATRIBUTO\":17,\"IGUAL\":18,\"CADENA\":19,\"QUOTE\":20,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"CUERPO\",9:\"MENORQUEESPECIAL\",10:\"IDENTIFICADOR\",12:\"MAYORQUEESPECIAL\",13:\"MENORQUE\",14:\"SELFCLOSE\",15:\"MAYORQUE\",16:\"SALIDA\",18:\"IGUAL\",19:\"CADENA\",20:\"QUOTE\"},\r\nproductions_: [0,[3,2],[6,1],[6,1],[6,1],[8,2],[8,1],[4,5],[4,5],[4,8],[4,7],[11,2],[11,1],[11,0],[17,3],[17,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n return $$[$0-1];\r\nbreak;\r\ncase 2: case 3:\r\n this.$ = $$[$0];\r\nbreak;\r\ncase 4:\r\ninicio.listaErrores.push(new CNodoErrores.default(\"Error Sintactico\",\"Se esperaba un token, error en : \"+yytext,_$[$0].first_line,_$[$0].first_column));console.log(\"Error Sintactico, Se esperaba un token en esta linea \" + \"Linea: \"+ _$[$0].first_line + \" Columna: \"+ _$[$0].first_column); this.$=false;\r\nbreak;\r\ncase 5:\r\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1]; \r\nbreak;\r\ncase 6:\r\n this.$ = [$$[$0]]; \r\nbreak;\r\ncase 7: case 8:\r\nthis.$ = new objeto.default($$[$0-3],null,$$[$0-2],$$[$0],_$[$0-4].first_line,_$[$0-4].first_column);\r\nbreak;\r\ncase 9:\r\n\r\n                this.$ = new objeto.default($$[$0-6],null,$$[$0-5],$$[$0-3],_$[$0-7].first_line,_$[$0-7].first_column);\r\n                if($$[$0-6].toString() != $$[$0-1].toString()){\r\n                        console.log(\"ERROR SEMANTICO\")\r\n                        inicio.listaErrores.push(new CNodoErrores.default(\"Semantico XML\",\"Error nombre Etiqueta \"+$$[$0-6].toString()+\", con \"+$$[$0-1].toString(),_$[$0-7].first_line,_$[$0-7].first_column)); \r\n                }\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n                this.$ = new objeto.default($$[$0-5],$$[$0-2],$$[$0-4],null,_$[$0-6].first_line,_$[$0-6].first_column);\r\n                if($$[$0-5].toString() != $$[$0-1].toString()){\r\n                        console.log(\"ERROR SEMANTICO\")\r\n                        inicio.listaErrores.push(new CNodoErrores.default(\"Semantico XML\",\"Error nombre Etiqueta \"+$$[$0-5].toString()+\", con \"+$$[$0-1].toString(),_$[$0-6].first_line,_$[$0-6].first_column)); \r\n                }\r\n        \r\nbreak;\r\ncase 11:\r\n$$[$0-1].push($$[$0]);this.$=$$[$0-1];\r\nbreak;\r\ncase 12:\r\nthis.$=[$$[$0]];\r\nbreak;\r\ncase 13:\r\nthis.$=[];\r\nbreak;\r\ncase 14: case 15:\r\nthis.$=new atributo.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,9:$V0,13:$V1},{1:[3]},{5:[1,5]},{10:[1,6]},{10:[1,7]},{1:[2,1]},{10:$V2,11:8,12:$V3,17:9},o([14,15],$V3,{17:9,11:11,10:$V2}),{10:$V2,12:[1,12],17:13},o($V4,[2,12]),{18:[1,14]},{10:$V2,14:[1,15],15:[1,16],17:13},{2:$V5,4:21,6:17,7:$V6,8:19,9:$V0,13:$V1},o($V4,[2,11]),{19:[1,22],20:[1,23]},{2:$V5,4:21,6:24,7:$V6,8:19,9:$V0,13:$V1},{2:$V5,4:21,6:25,7:$V6,8:19,9:$V0,13:$V1},o($V7,[2,7]),o($V7,[2,2]),o([5,10,16],[2,3],{4:26,9:$V0,13:$V1}),o($V7,[2,4]),o($V7,[2,6]),o($V4,[2,14]),o($V4,[2,15]),o($V7,[2,8]),{10:[1,28],16:[1,27]},o($V7,[2,5]),{10:[1,29]},{15:[1,30]},{15:[1,31]},o($V7,[2,10]),o($V7,[2,9])],\r\ndefaultActions: {5:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\nconst atributo = require(\"./Expresiones/Atributo\");\r\nconst tipo= require(\"./Simbolos/Tipo\");\r\nconst objeto= require(\"./Expresiones/Objeto\");\r\nconst CErrores= require(\"./Excepciones/Errores\")\r\nconst CNodoErrores= require(\"./Excepciones/NodoErrores\")\r\nconst inicio = require(\"../../../componentes/contenido-inicio/contenido-inicio.component\")\r\n\r\n\r\n    var palabra = \"\"\r\n    var palabra1 = \"\"\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:this.begin('cuerpo'); return 15\r\nbreak;\r\ncase 2:this.begin('INITIAL'); if(palabra.replaceAll(\" \",\"\") == \"\")  return 16; yy_.yytext = palabra; palabra = \"\";if(palabra==\"<!--\") return 'COMENTARIOS'; if(palabra.replaceAll(\" \",\"\") == \"\") return 7;\r\nbreak;\r\ncase 3:this.begin('INITIAL');  return 13; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 4:this.begin('INITIAL');  return 14; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 5:palabra += yy_.yytext;\r\nbreak;\r\ncase 6:return 12\r\nbreak;\r\ncase 7:return 16\r\nbreak;\r\ncase 8:return 14\r\nbreak;\r\ncase 9:return 9\r\nbreak;\r\ncase 10:return 13\r\nbreak;\r\ncase 11:return 18;\r\nbreak;\r\ncase 12: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 19; \r\nbreak;\r\ncase 13: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 20; \r\nbreak;\r\ncase 14:return 10;\r\nbreak;\r\ncase 15:return 5\r\nbreak;\r\ncase 16:\r\nbreak;\r\ncase 17:\r\nbreak;\r\ncase 18:\r\nbreak;\r\ncase 19:inicio.listaErrores.push(new CNodoErrores.default(\"Lexico\",\"No se esperaba el caracter: \"+yy_.yytext,yy_.yylloc.first_line,yy_.yylloc.first_column)); console.log(\"Lexico, No se esperaba el caracter: \"+yy_.yytext +\" Linea: \"+ yy_.yylloc.first_line + \"Columna: \" + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:<)/i,/^(?:.)/i,/^(?:\\?>)/i,/^(?:<\\/)/i,/^(?:\\/>)/i,/^(?:<\\?)/i,/^(?:<)/i,/^(?:=)/i,/^(?:\"[^\\\"]*\")/i,/^(?:'[^\\']*')/i,/^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i,/^(?:$)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n+)/i,/^(?:\\s+)/i,/^(?:.)/i],\r\nconditions: {\"comment\":{\"rules\":[],\"inclusive\":false},\"xml\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"cuerpo\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = GramaticaXML;\r\nexports.Parser = GramaticaXML.Parser;\r\nexports.parse = function () { return GramaticaXML.parse.apply(GramaticaXML, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","<h1>TABLA DE ERRORES</h1>\r\n<div class=\"tabla\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n      \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"tipoError\">\r\n          <th mat-header-cell *matHeaderCellDef> Error de Tipo. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.tipoError}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"Descripcion\">\r\n          <th mat-header-cell *matHeaderCellDef> Descripcion </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.desc}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"Linea\">\r\n          <th mat-header-cell *matHeaderCellDef> Linea </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.fila}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"Columna\">\r\n          <th mat-header-cell *matHeaderCellDef> Columna </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.columna}} </td>\r\n        </ng-container>\r\n      \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-errores',\r\n  templateUrl: './errores.component.html',\r\n  styleUrls: ['./errores.component.css'],\r\n})\r\nexport class ErroresComponent implements OnInit {\r\n  displayedColumns: string[] = ['tipoError', 'Descripcion', 'Linea', 'Columna'];\r\n  dataSource = '';\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let info = window.localStorage.getItem('errores');\r\n    let otro = JSON.parse(info);\r\n    this.dataSource = otro;\r\n    console.log(otro);\r\n  }\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport Identificador from \"../Expresion/Identificador\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Termino from \"../Expresion/Termino\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Declaracion extends Instruccion {\r\n\r\n    public identificador: string;\r\n    public expresion: [] | Termino| Identificador;\r\n    constructor(identificador: string, expresion: [] | Termino|Identificador, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n        this.expresion = expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // CONCATENAR EL ; DESPUES DE RECORRER LO DE CORCHETES\r\n        var cadena = \"\"\r\n        if (this.identificador != null) {\r\n            cadena += this.identificador\r\n        }\r\n        if (this.expresion != null) {\r\n            var stack = /\\[/gi;\r\n            // use of String search() Method\r\n            if (this.identificador.search(stack) == -1) {\r\n                if (this.expresion instanceof Termino) {\r\n                    cadena += \" \"+this.expresion.valor + \";\\n\"\r\n                }else if(this.expresion instanceof Identificador){\r\n                    var variable = this.expresion.interpretar(arbol,tabla)\r\n                    cadena+= \" \"+variable.contenido+\";\\n\";\r\n                }\r\n            } else {\r\n                if (this.expresion instanceof Array) {\r\n                    for (var a of this.expresion) {\r\n                        let temporal: Termino = a\r\n                        cadena += temporal.valor + \"];\\n\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cadena\r\n    }\r\n\r\n}","export default class nodoAST {\r\n  private listaNodos: Array<nodoAST>;\r\n  private valor: string;\r\n\r\n  constructor(valor: string) {\r\n    this.listaNodos = new Array<nodoAST>();\r\n    this.valor = valor;\r\n  }\r\n  public agregarHijo(val: string, ambito?: string, operador?: number): void {\r\n    if (ambito != undefined) {\r\n      switch (ambito) {\r\n        case 'ar':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '+';\r\n              break;\r\n            case 1:\r\n              val = '-';\r\n              break;\r\n            case 2:\r\n              val = '*';\r\n              break;\r\n            case 3:\r\n              val = 'div';\r\n              break;\r\n            case 4:\r\n              val = '^';\r\n              break;\r\n            case 5:\r\n              val = 'mod';\r\n              break;\r\n          }\r\n          break;\r\n        case 'log':\r\n          switch (operador) {\r\n            case 0:\r\n              val = 'or';\r\n              break;\r\n            case 1:\r\n              val = 'and';\r\n              break;\r\n          }\r\n          break;\r\n        case 'rel':\r\n          switch (operador) {\r\n            case 0:\r\n              val = '=';\r\n              break;\r\n            case 1:\r\n              val = '!=';\r\n              break;\r\n            case 2:\r\n              val = '>';\r\n              break;\r\n            case 3:\r\n              val = '<';\r\n              break;\r\n            case 4:\r\n              val = '>=';\r\n              break;\r\n            case 5:\r\n              val = '<=';\r\n              break;\r\n          }\r\n          break;\r\n      }\r\n      this.listaNodos.push(new nodoAST(val));\r\n    } else this.listaNodos.push(new nodoAST(val));\r\n  }\r\n  public agregarHijoAST(hijo: nodoAST | undefined): void {\r\n    if (hijo != undefined) this.listaNodos.push(hijo);\r\n  }\r\n  public getValor(): string {\r\n    return this.valor;\r\n  }\r\n  public getHijos(): Array<nodoAST> {\r\n    return this.listaNodos;\r\n  }\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Concatenar extends Instruccion {\r\n    private operando: String;\r\n    constructor(operando:String, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.operando=operando\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","export default class Tipo {\r\n  private tipos: tipoDato;\r\n  constructor(tipos: tipoDato) {\r\n    this.tipos = tipos;\r\n  }\r\n  public getTipo(): tipoDato {\r\n    return this.tipos;\r\n  }\r\n  public setTipo(tipo: tipoDato): void {\r\n    this.tipos = tipo;\r\n  }\r\n  public igual(compara: Tipo) {\r\n    return (this.tipos = compara.tipos);\r\n  }\r\n}\r\n\r\nexport enum tipoDato {\r\n  CADENA,\r\n  OBJETO,\r\n  ENTERO,\r\n  DECIMAL,\r\n  BOOLEANO,\r\n  CARACTER,\r\n  SELECT,\r\n  ATRIBUTO\r\n\r\n}\r\n","export class reporteOp {\r\n  private Tipo_Optimizacion: String;\r\n  private Regla: String;\r\n  private eliminado: String;\r\n  private agregado: String;\r\n  private linea: String;\r\n  private columna: String;\r\n  constructor(\r\n    tipo: String,\r\n    regla: String,\r\n    eliminado: String,\r\n    agregado: String,\r\n    linea: String,\r\n    columna: String\r\n  ) {\r\n    this.eliminado = eliminado;\r\n    this.Regla = regla;\r\n    this.Tipo_Optimizacion = tipo;\r\n    this.linea = linea;\r\n    this.columna = columna;\r\n    this.agregado = agregado;\r\n  }\r\n  public getTipoOptimizacion(): String {\r\n    return this.Tipo_Optimizacion;\r\n  }\r\n  public getRegla(): String {\r\n    return this.Regla;\r\n  }\r\n  public getEliminado(): String {\r\n    return this.eliminado;\r\n  }\r\n  public getAgregado(): String {\r\n    return this.agregado;\r\n  }\r\n  public getLinea(): String {\r\n    return this.linea;\r\n  }\r\n  public getColumna(): String {\r\n    return this.columna;\r\n  }\r\n  public setLinea(linea: String) {\r\n    this.linea = linea;\r\n  }\r\n  public setColumna(col: String) {\r\n    this.columna = col;\r\n  }\r\n}\r\n","\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Llamada from \"./Llamada\";\r\n\r\nexport default class Declaracion extends Instruccion {\r\n\r\n    public identificador: string;\r\n    public Tipo: String;\r\n    constructor(identificador: string, expresion:String, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n        this.Tipo = expresion\r\n    }\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var auxTipo:Tipo\r\n        if(this.Tipo===\"decimal\"){\r\n            auxTipo= new Tipo(tipoDato.DECIMAL)\r\n        }else if(this.Tipo===\"integer\"){\r\n            auxTipo= new Tipo(tipoDato.ENTERO)\r\n        }else if(this.Tipo===\"float\"){\r\n            auxTipo= new Tipo(tipoDato.DECIMAL)\r\n        }else if(this.Tipo===\"char\"){\r\n            auxTipo= new Tipo(tipoDato.CARACTER)\r\n        }else if(this.Tipo===\"boolean\"){\r\n            auxTipo= new Tipo(tipoDato.BOOLEANO)\r\n        }\r\n        var simbolo = new Simbolo(auxTipo, this.identificador, this.fila.toString(), this.columna.toString(), Llamada.prototype.identificador, \"\");\r\n        tabla.setVariable(simbolo)\r\n        return this.identificador\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","<h1>REPORTE DE OPTIMIZACION</h1>\r\n<div class=\"tabla\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n      \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"TIPO OPTIMIZACION\">\r\n          <th mat-header-cell *matHeaderCellDef> TIPO OPTIMIZACION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Tipo_Optimizacion}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"REGLA\">\r\n          <th mat-header-cell *matHeaderCellDef> REGLA </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Regla}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"CODIGO ELIMINADO\">\r\n          <th mat-header-cell *matHeaderCellDef> CODIGO ELIMINADO </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.eliminado}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"CODIGO AGREGADO\">\r\n          <th mat-header-cell *matHeaderCellDef> CODIGO AGREGADO </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.agregado}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"LINEA\">\r\n          <th mat-header-cell *matHeaderCellDef> LINEA </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.linea}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"COLUMNA\">\r\n          <th mat-header-cell *matHeaderCellDef> COLUMNA </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.columna}} </td>\r\n        </ng-container>\r\n      \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reporte-optimizacion',\r\n  templateUrl: './reporte-optimizacion.component.html',\r\n  styleUrls: ['./reporte-optimizacion.component.css']\r\n})\r\nexport class ReporteOptimizacionComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = [\r\n    'TIPO OPTIMIZACION',\r\n    'REGLA',\r\n    'CODIGO ELIMINADO',\r\n    'CODIGO AGREGADO',\r\n    'LINEA',\r\n    'COLUMNA'\r\n  ];\r\n  dataSource = '';\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n\r\n    let info = window.localStorage.getItem('optimo');\r\n    let otro = JSON.parse(info);\r\n    this.dataSource = otro;\r\n  }\r\n}\r\n","import Simbolo from \"../../XML/Analizador/Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport { reporteOp } from \"../Reportes/reporteOp\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Etiqueta from \"./Etiqueta\";\r\nimport SaltoIncondicional from \"./SaltoIncondicional\";\r\n\r\nexport default class Funcion extends Instruccion {\r\n\r\n    public identificador: string;\r\n    public instrucciones: Instruccion[];\r\n    constructor(identificador: string, expresion: Instruccion[], fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n        this.instrucciones = expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // void main (){ INSTRUCCIONES Y POR ULTIMO AGREGAR CADENA \"}\" ACA SE HARA LA MAGIA\r\n        let cadena = \"\"\r\n        cadena += this.identificador + \"\\n\"\r\n        let simbolo;\r\n        let saltoIncondicional:string=\"\";\r\n        let cadenaTemporal:string=\"\";\r\n        if (this.instrucciones != null) {\r\n            for (var ins of this.instrucciones) {\r\n               \r\n                var r = ins.interpretar(arbol, tabla);\r\n                 \r\n                 if (r instanceof SaltoIncondicional){\r\n                    if(saltoIncondicional===\"\"){\r\n\r\n                        cadena+=`goto ${r.identificador.toUpperCase()}; \\n`\r\n                        cadenaTemporal=cadena\r\n                        saltoIncondicional=r.identificador.toUpperCase();\r\n                    }\r\n                    else{\r\n                        cadena+=`goto ${r.identificador.toUpperCase()}; \\n`\r\n                    }\r\n                     \r\n                }\r\n                else  if (r instanceof Etiqueta){\r\n                    \r\n                    if(r.identificador.toUpperCase()===saltoIncondicional){\r\n                        saltoIncondicional=\"\"; \r\n                        let report = new reporteOp(\"Eliminacion de codigo muerto\", \"Regla 1\",cadena.replace(cadenaTemporal,''),r.identificador.toUpperCase(), this.fila+\"\", this.columna.toString())\r\n                        cadena=`${cadenaTemporal}${r.identificador.toUpperCase()}:\\n`\r\n                        cadenaTemporal=\"\";\r\n                        arbol.setReporte(report)\r\n                    }else{\r\n                        cadena+=`${r.identificador.toUpperCase()}:\\n`\r\n                    }\r\n                }\r\n                else \r\n                {\r\n                 cadena += r + \"\\n\"\r\n                }\r\n                     \r\n                \r\n            }\r\n        }\r\n        return cadena + \"}\\n\"\r\n    }\r\n\r\n}","import { Expression } from \"@angular/compiler\";\r\nimport Tipo, { tipoDato } from \"src/app/Backend/XQUERY/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Nativo from \"../Expresiones/Nativo\";\r\nimport { chown } from \"fs\";\r\n\r\nexport default class Number extends Instruccion {\r\n    public expresion: Instruccion;\r\n\r\n    constructor(expresion: Instruccion, linea: number, columna: number,) {\r\n        super(new Tipo(tipoDato.ENTERO), linea, columna);\r\n        this.expresion = expresion;\r\n\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if (this.expresion instanceof Instruccion) {\r\n            console.log(\"entre\")\r\n            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);\r\n            var resp = hola.toString();\r\n\r\n            var c1 = arbol.getContadort()\r\n            arbol.codigo3d.push(\"//***Print Number****\")\r\n            arbol.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n            arbol.codigo3d.push(\"$t2=\" + resp + \";\");\r\n            arbol.codigo3d.push(\"NumberToString();\");\r\n            arbol.codigo3d.push(\"$t0=hp;\");\r\n            arbol.codigo3d.push(\"$t1=-1;\");\r\n            arbol.codigo3d.push(\"guardarString();\");\r\n            arbol.codigo3d.push(\"$t0= $t\" + c1 + \";\");\r\n            arbol.codigo3d.push(`imprimirString();`);\r\n            arbol.codigo3d.push(`printf(\"%c\",10);`);\r\n            return resp;\r\n        }\r\n\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar GrammXQuery = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,14],$V1=[1,17],$V2=[1,25],$V3=[1,24],$V4=[1,31],$V5=[1,23],$V6=[1,18],$V7=[1,33],$V8=[1,32],$V9=[1,13],$Va=[1,12],$Vb=[1,14],$Vc=[1,15],$Vd=[1,16],$Ve=[1,28],$Vf=[1,26],$Vg=[1,29],$Vh=[5,9,11,12,49,51,68,71,77,81,82,83,84,85,91,96,97],$Vi=[1,36],$Vj=[5,7,9,11,12,49,51,68,71,77,81,82,83,84,85,91,96,97],$Vk=[1,37],$Vl=[5,7,9,11,12,14,38,49,51,68,71,77,79,81,82,83,84,85,91,96,97],$Vm=[1,56],$Vn=[1,64],$Vo=[1,63],$Vp=[1,55],$Vq=[1,45],$Vr=[1,46],$Vs=[1,47],$Vt=[1,48],$Vu=[1,49],$Vv=[1,50],$Vw=[1,51],$Vx=[1,52],$Vy=[1,53],$Vz=[1,54],$VA=[1,57],$VB=[1,58],$VC=[1,59],$VD=[1,60],$VE=[1,61],$VF=[1,62],$VG=[5,7,9,11,12,14,26,38,49,51,52,53,54,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],$VH=[2,121],$VI=[2,123],$VJ=[1,68],$VK=[2,125],$VL=[1,69],$VM=[1,106],$VN=[5,7,9,11,12,14,26,38,49,51,52,53,58,60,68,71,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97],$VO=[1,118],$VP=[1,127],$VQ=[1,123],$VR=[1,125],$VS=[1,121],$VT=[1,126],$VU=[1,128],$VV=[53,58,60,71],$VW=[1,134],$VX=[1,136],$VY=[1,135],$VZ=[5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97,99,100,103,104,105,106,107,108,109,110,111,112,113],$V_=[5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],$V$=[5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97,103,104,109,110],$V01=[5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97,103,104,105,106,107,108,109,110,111,112,113],$V11=[1,154],$V21=[1,157],$V31=[1,156],$V41=[5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,93,96,97],$V51=[9,11,12,51,71,91,94,96,97],$V61=[2,77],$V71=[2,76],$V81=[1,172],$V91=[1,173],$Va1=[5,7,14,26,38,49,52,53,55,60,68,72,77,79,81,82,83,84,85],$Vb1=[1,189],$Vc1=[5,7,9,11,12,14,26,38,49,51,52,53,58,60,68,71,73,77,79,81,82,83,84,85,87,90,91,92,96,97],$Vd1=[14,54,93,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],$Ve1=[14,26],$Vf1=[5,7,9,11,12,14,38,49,51,53,58,60,68,71,77,79,81,82,83,84,85,91,96,97],$Vg1=[1,242],$Vh1=[1,246],$Vi1=[2,37],$Vj1=[1,247],$Vk1=[1,248],$Vl1=[1,249],$Vm1=[1,250],$Vn1=[1,251],$Vo1=[1,260],$Vp1=[14,26,36,39],$Vq1=[9,11,12,38,49,51,68,71,77,91,96,97],$Vr1=[14,26,36],$Vs1=[2,25],$Vt1=[1,292];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INICIO\":3,\"FUNCTION\":4,\"EOF\":5,\"METODOS\":6,\"RDECLARE\":7,\"RFUNCTION\":8,\"LOCAL\":9,\"DOSPUNTOS\":10,\"IDENTIFICADOR\":11,\"PARIZQ\":12,\"PARAMETROS\":13,\"PARDER\":14,\"TIPO\":15,\"BLOQUE\":16,\"PTCOMA\":17,\"F_SUBS\":18,\"F_NUMBER\":19,\"F_UPPER\":20,\"F_LOWER\":21,\"F_STRING\":22,\"LLAMADAFUNCION\":23,\"LET\":24,\"INSTRUCCION\":25,\"COMA\":26,\"DECLARACIONES\":27,\"VARIABLE\":28,\"AS\":29,\"XS\":30,\"OPTIONALQUESTION\":31,\"L_PARAMETROSINTERNOS\":32,\"TIPOPARAMETRO\":33,\"L_CONSULTAS\":34,\"EXPRESION\":35,\"LLAVEIZQ\":36,\"INSTRUCCIONES\":37,\"LLAVEDER\":38,\"QUESTION\":39,\"INT\":40,\"FLOAT\":41,\"CHAR\":42,\"DOUBLE\":43,\"BOOLEAN\":44,\"DOUBLER\":45,\"FORSIMPLE\":46,\"FORTO\":47,\"L_IF\":48,\"RFOR\":49,\"RIN\":50,\"ENTERO\":51,\"RTO\":52,\"RRETURN\":53,\"IGUAL\":54,\"AND\":55,\"FORCOMPUESTO\":56,\"CONDICIONCOMPUESTA\":57,\"RWHERE\":58,\"CONDICION\":59,\"RORDERBY\":60,\"RETORNO\":61,\"CONDICIONSIMPLE\":62,\"CONJUNCION\":63,\"UNION\":64,\"L_IN\":65,\"L_VARIABLES\":66,\"RAT\":67,\"RLET\":68,\"LETDOSPUNTOS\":69,\"CONECTOR\":70,\"DOLAR\":71,\"OR\":72,\"PUNTO\":73,\"FUNCIONES\":74,\"IF\":75,\"ASIGNACION\":76,\"RIF\":77,\"RTHEN\":78,\"RELSE\":79,\"RDATA\":80,\"RNUMBER\":81,\"RSUBS\":82,\"RUPPER\":83,\"RLOWER\":84,\"RSTRING\":85,\"CONSULTA\":86,\"BARRA\":87,\"OPCIONESCONSULT\":88,\"PREDICADO\":89,\"DOBLEBARRA\":90,\"ARROBA\":91,\"DOBLEPUNTO\":92,\"ASTERISCO\":93,\"CORIZQ\":94,\"CORDER\":95,\"CADENA\":96,\"RLAST\":97,\"OPERACIONESF\":98,\"MAS\":99,\"MENOS\":100,\"RDIV\":101,\"MODULO\":102,\"IGUALACION\":103,\"DIFERENCIACION\":104,\"MENORIGUAL\":105,\"MAYORIGUAL\":106,\"MENORQUE\":107,\"MAYORQUE\":108,\"REQUALS\":109,\"RNOTEQUALS\":110,\"RMENORIGUAL\":111,\"RMAYORIGUAL\":112,\"RMENORQUE\":113,\"RMAYORQUE\":114,\"MULTIPLICACION\":115,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"RDECLARE\",8:\"RFUNCTION\",9:\"LOCAL\",10:\"DOSPUNTOS\",11:\"IDENTIFICADOR\",12:\"PARIZQ\",14:\"PARDER\",17:\"PTCOMA\",26:\"COMA\",29:\"AS\",30:\"XS\",36:\"LLAVEIZQ\",38:\"LLAVEDER\",39:\"QUESTION\",40:\"INT\",41:\"FLOAT\",42:\"CHAR\",43:\"DOUBLE\",44:\"BOOLEAN\",45:\"DOUBLER\",49:\"RFOR\",50:\"RIN\",51:\"ENTERO\",52:\"RTO\",53:\"RRETURN\",54:\"IGUAL\",55:\"AND\",58:\"RWHERE\",60:\"RORDERBY\",67:\"RAT\",68:\"RLET\",69:\"LETDOSPUNTOS\",71:\"DOLAR\",72:\"OR\",73:\"PUNTO\",77:\"RIF\",78:\"RTHEN\",79:\"RELSE\",80:\"RDATA\",81:\"RNUMBER\",82:\"RSUBS\",83:\"RUPPER\",84:\"RLOWER\",85:\"RSTRING\",87:\"BARRA\",90:\"DOBLEBARRA\",91:\"ARROBA\",92:\"DOBLEPUNTO\",93:\"ASTERISCO\",94:\"CORIZQ\",95:\"CORDER\",96:\"CADENA\",97:\"RLAST\",99:\"MAS\",100:\"MENOS\",101:\"RDIV\",102:\"MODULO\",103:\"IGUALACION\",104:\"DIFERENCIACION\",105:\"MENORIGUAL\",106:\"MAYORIGUAL\",107:\"MENORQUE\",108:\"MAYORQUE\",109:\"REQUALS\",110:\"RNOTEQUALS\",111:\"RMENORIGUAL\",112:\"RMAYORIGUAL\",113:\"RMENORQUE\",114:\"RMAYORQUE\",115:\"MULTIPLICACION\"},\nproductions_: [0,[3,2],[4,2],[4,1],[6,12],[6,11],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,0],[13,3],[13,1],[27,6],[32,3],[32,1],[33,1],[33,1],[16,3],[16,2],[31,1],[31,0],[15,5],[15,5],[15,5],[15,5],[15,5],[15,5],[15,1],[15,1],[15,1],[15,1],[15,1],[15,0],[37,2],[37,1],[25,1],[25,1],[25,1],[25,1],[25,1],[25,1],[47,10],[47,24],[56,8],[56,6],[56,6],[56,4],[46,8],[46,6],[46,6],[46,4],[57,3],[57,1],[57,0],[62,2],[62,1],[64,3],[64,2],[63,2],[66,3],[66,1],[24,6],[24,4],[65,1],[65,6],[65,5],[65,1],[65,1],[23,6],[23,5],[28,2],[70,1],[70,1],[70,1],[70,1],[70,1],[61,1],[61,1],[61,1],[61,1],[61,1],[48,8],[48,15],[48,17],[75,8],[75,9],[74,4],[19,4],[19,5],[18,6],[18,7],[20,4],[20,5],[21,4],[21,5],[22,4],[22,5],[76,3],[76,5],[59,2],[59,3],[59,1],[34,2],[34,1],[86,3],[86,2],[86,2],[86,2],[86,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[89,3],[35,1],[35,3],[35,1],[35,1],[35,1],[35,2],[35,2],[35,3],[35,1],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[35,3],[98,3],[98,3],[98,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1];\nbreak;\ncase 2: case 38: case 59: case 107:\n$$[$0-1].push($$[$0]); this.$=$$[$0-1];\nbreak;\ncase 3: case 16: case 19: case 39: case 60: case 65: case 108:\nthis.$=[$$[$0]];\nbreak;\ncase 4:\nthis.$=new funciones.default($$[$0-6],$$[$0-4],$$[$0-2],$$[$0-1],_$[$0-11].first_line,_$[$0-11].first_column);\nbreak;\ncase 5:\nthis.$=new funciones.default($$[$0-5],null,$$[$0-2],$$[$0-1],_$[$0-10].first_line,_$[$0-10].first_column);\nbreak;\ncase 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 20: case 21: case 32: case 33: case 34: case 35: case 36: case 40: case 41: case 42: case 43: case 44: case 45: case 57: case 68: case 71: case 72: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 106: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 129: case 152:\nthis.$=$$[$0]\nbreak;\ncase 14:\nthis.$=\"\"\nbreak;\ncase 15: case 18: case 64:\n$$[$0-2].push($$[$0]); this.$=$$[$0-2];\nbreak;\ncase 17:\nthis.$=new declaracion.default($$[$0-5],$$[$0-1],_$[$0-5].first_line,_$[$0-5].first_column);\nbreak;\ncase 22: case 26: case 27: case 28: case 29: case 30: case 31: case 62: case 120: case 122:\nthis.$=$$[$0-1]\nbreak;\ncase 23:\nthis.$=null\nbreak;\ncase 24:\n$$[$0]\nbreak;\ncase 46:\nthis.$=new thefortosimple.default($$[$0-8],$$[$0],$$[$0-5],$$[$0-3],_$[$0-9].first_line,_$[$0-9].first_column);\nbreak;\ncase 47:\nthis.$=new thefortocompuesto.default($$[$0-22],$$[$0-14],$$[$0-19],$$[$0-17],$$[$0-11],$$[$0-9],_$[$0-23].first_line,_$[$0-23].first_column);\nbreak;\ncase 48:\nthis.$=$$[$0-7]+$$[$0-6]+$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 49: case 50: case 69:\nthis.$=$$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 51: case 91:\nthis.$=$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 52:\nthis.$=new theforsimple.default($$[$0-6],$$[$0],_$[$0-7].first_line,_$[$0-7].first_column,$$[$0-4],$$[$0-2]);\nbreak;\ncase 53:\nthis.$=new theforsimple.default($$[$0-4],$$[$0],_$[$0-5].first_line,_$[$0-5].first_column,$$[$0-2],null);\nbreak;\ncase 54:\nthis.$=new theforsimple.default($$[$0-4],$$[$0],_$[$0-5].first_line,_$[$0-5].first_column,null,$$[$0-2]);\nbreak;\ncase 55:\nthis.$=new theforsimple.default($$[$0-2],$$[$0],_$[$0-3].first_line,_$[$0-3].first_column,null,null);\nbreak;\ncase 56:\nthis.$=$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 61:\nthis.$=new condicionsimple.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\nbreak;\ncase 63: case 75: case 111: case 112:\nthis.$=$$[$0-1]+$$[$0]\nbreak;\ncase 66:\nthis.$=new thelet.default($$[$0-4],$$[$0-2],$$[$0],_$[$0-5].first_line,_$[$0-5].first_column)\nbreak;\ncase 67:\nthis.$=new thelet.default($$[$0-2],$$[$0],null,_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 70:\nthis.$=$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 73:\nthis.$=new llamada.default($$[$0-3],$$[$0-1],_$[$0-5].first_line,_$[$0-5].first_column);\nbreak;\ncase 74:\nthis.$=new llamada.default($$[$0-2],null,_$[$0-4].first_line,_$[$0-4].first_column);\nbreak;\ncase 86:\nthis.$=new thefunctionif.default($$[$0-5],$$[$0-2],_$[$0-7].first_line,_$[$0-7].first_column,$$[$0],null)\nbreak;\ncase 87:\nthis.$=new theifAnidado.default($$[$0-12],$$[$0-9],$$[$0-5],$$[$0-2],$$[$0],_$[$0-14].first_line,_$[$0-14].first_column)\nbreak;\ncase 88:\nthis.$=new theifAnidado.default($$[$0-14],$$[$0-11],$$[$0-7],$$[$0-4],$$[$0-1],_$[$0-16].first_line,_$[$0-16].first_column)\nbreak;\ncase 89:\nthis.$=new theif.default($$[$0-5],_$[$0-7].first_line,_$[$0-7].first_column,$$[$0-2],$$[$0])\nbreak;\ncase 90:\nthis.$=new theif.default($$[$0-6],_$[$0-8].first_line,_$[$0-8].first_column,$$[$0-3],null)\nbreak;\ncase 92:\nthis.$=new number.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 93:\nthis.$=new number.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column)\nbreak;\ncase 94:\nthis.$=new subs.default($$[$0-3],$$[$0-1],_$[$0-5].first_line,_$[$0-5].first_column)\nbreak;\ncase 95:\nthis.$=new subs.default($$[$0-4],$$[$0-2],_$[$0-6].first_line,_$[$0-6].first_column)\nbreak;\ncase 96:\nthis.$=new upper.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 97:\nthis.$=new upper.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column)\nbreak;\ncase 98:\nthis.$=new lower.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 99:\nthis.$=new lower.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column)\nbreak;\ncase 100:\nthis.$=new string.default($$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 101:\nthis.$=new string.default($$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column)\nbreak;\ncase 102: case 141:\nthis.$=new asignacion.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\nbreak;\ncase 103:\nthis.$=new asignacion.default($$[$0-4],$$[$0-2],_$[$0-4].first_line,_$[$0-4].first_column);\nbreak;\ncase 104:\nthis.$=new condicionsimple.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\nbreak;\ncase 105:\nthis.$=new condicion.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 109:\nthis.$ = new barrasnodo.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column, $$[$0-1]);\nbreak;\ncase 110:\nthis.$ = new barrasnodo.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column, null);\nbreak;\ncase 121:\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO),$$[$0],_$[$0].first_line,_$[$0].first_column);\nbreak;\ncase 123:\nthis.$ = new identificador.default($$[$0],_$[$0].first_line,_$[$0].first_column);\nbreak;\ncase 124:\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA),$$[$0],_$[$0].first_line,_$[$0].first_column);\nbreak;\ncase 125:\nthis.$ = new variable.default($$[$0],_$[$0].first_line,_$[$0].first_column);\nbreak;\ncase 126:\nthis.$ = new atributosexpresion.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\nbreak;\ncase 127:\nthis.$ = new identificadorpredicado.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\nbreak;\ncase 128:\nthis.$=$$[$0-2]+\"()\"\nbreak;\ncase 130:\nthis.$=new aritmetica.default(aritmetica.Operadores.SUMA,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 131:\nthis.$=new aritmetica.default(aritmetica.Operadores.RESTA,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 132:\nthis.$=new aritmetica.default(aritmetica.Operadores.DIVISION,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 133:\nthis.$=new aritmetica.default(aritmetica.Operadores.MODULADOR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 134: case 142:\nthis.$=new relacional.default(relacional.Relacionales.IGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 135: case 143:\nthis.$=new relacional.default(relacional.Relacionales.DIFERENTE,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 136: case 144:\nthis.$=new relacional.default(relacional.Relacionales.MENORIGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 137: case 145:\nthis.$=new relacional.default(relacional.Relacionales.MAYORIGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 138: case 146:\nthis.$=new relacional.default(relacional.Relacionales.MENORQUE,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 139: case 147:\nthis.$=new relacional.default(relacional.Relacionales.MAYORQUE,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 140:\nthis.$=new aritmetica.default(aritmetica.Operadores.MULTIPLICACION,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 148:\nthis.$=new logica.default(logica.Logicas.OR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 149:\nthis.$=new logica.default(logica.Logicas.AND,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\nbreak;\ncase 150: case 151:\nthis.$=$$[$0-2]+$$[$0-1]+$$[$0] \nbreak;\n}\n},\ntable: [o([5,7],$V0,{3:1,4:2,6:3,18:4,19:5,20:6,21:7,22:8,23:9,24:10,25:11,35:19,46:20,47:21,48:22,28:27,98:30,9:$V1,11:$V2,12:$V3,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,81:$V9,82:$Va,83:$Vb,84:$Vc,85:$Vd,91:$Ve,96:$Vf,97:$Vg}),{1:[3]},{5:[1,34],6:35,7:$V0,9:$V1,11:$V2,12:$V3,18:4,19:5,20:6,21:7,22:8,23:9,24:10,25:11,28:27,35:19,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,81:$V9,82:$Va,83:$Vb,84:$Vc,85:$Vd,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vh,[2,3],{7:$Vi}),o($Vj,[2,6]),o($Vj,[2,7]),o($Vj,[2,8]),o($Vj,[2,9]),o($Vj,[2,10]),o([5,7,9,11,12,49,51,54,55,68,71,72,77,81,82,83,84,85,91,93,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],[2,11],{99:$Vk}),o($Vj,[2,12]),o($Vj,[2,13]),{12:[1,38]},{12:[1,39]},{12:[1,40]},{12:[1,41]},{12:[1,42]},{10:[1,43]},{28:44,71:$V7},o($Vl,[2,40],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($Vl,[2,41]),o($Vl,[2,42]),o($Vl,[2,45]),o($VG,$VH),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:65,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o($VG,$VI,{89:67,94:$VJ}),o($VG,[2,124]),o($VG,$VK,{115:$VL}),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:70,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{12:[1,71]},o($VG,[2,129]),{28:73,62:72,64:74,71:$V7},{12:[1,75]},{11:[1,76]},{1:[2,1]},o($Vh,[2,2],{7:$Vi}),{8:[1,77]},{9:$V1,23:78},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:79,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:80,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:81,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:82,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:83,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{11:[1,84]},{69:[1,85]},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:86,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:87,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:88,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:89,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:90,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:91,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:92,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:93,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:94,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:95,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:96,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:97,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:98,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:99,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:100,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:101,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:102,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:103,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:104,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:105,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{14:$VM,54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},o([5,7,9,11,12,14,26,38,49,51,52,53,54,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,93,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],[2,152],{99:$Vk}),o($VG,[2,127]),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:107,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,23:108},o($VN,[2,126],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),{14:[1,109]},{28:114,53:[1,112],58:[1,110],60:[1,111],64:113,71:$V7},{9:$V1,11:$V2,12:$VO,23:119,28:27,34:120,35:117,50:[1,115],51:$V5,65:116,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},o($VV,[2,60]),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:129,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o([5,7,9,11,12,14,26,29,38,49,50,51,52,53,54,55,58,60,68,69,71,72,73,77,79,81,82,83,84,85,87,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],[2,75]),{9:[1,130]},o($VG,[2,151]),{26:$VW,52:$VX,54:$Vm,55:[1,133],70:131,72:[1,132],73:$VY,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{14:[1,137],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{14:[1,138],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{14:[1,139],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{14:[1,140],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{12:[1,141]},{9:$V1,11:$V2,12:$VO,23:119,28:27,34:120,35:117,50:[1,143],51:$V5,65:142,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},o($VZ,[2,130],{54:$Vm,93:$Vp,101:$Vs,102:$Vt,114:$VF}),o($VZ,[2,131],{54:$Vm,93:$Vp,101:$Vs,102:$Vt,114:$VF}),o($V_,[2,132],{54:$Vm,93:$Vp,114:$VF}),o($V_,[2,133],{54:$Vm,93:$Vp,114:$VF}),o($V$,[2,134],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,105:$Vw,106:$Vx,107:$Vy,108:$Vz,111:$VC,112:$VD,113:$VE,114:$VF}),o($V$,[2,135],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,105:$Vw,106:$Vx,107:$Vy,108:$Vz,111:$VC,112:$VD,113:$VE,114:$VF}),o($V01,[2,136],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($V01,[2,137],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($V01,[2,138],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($V01,[2,139],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($VN,[2,140],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($VN,[2,141],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($V$,[2,142],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,105:$Vw,106:$Vx,107:$Vy,108:$Vz,111:$VC,112:$VD,113:$VE,114:$VF}),o($V$,[2,143],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,105:$Vw,106:$Vx,107:$Vy,108:$Vz,111:$VC,112:$VD,113:$VE,114:$VF}),o($V01,[2,144],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($V01,[2,145],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($V01,[2,146],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,114:$VF}),o($VN,[2,147],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o([5,7,9,11,12,14,26,38,49,51,52,53,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97],[2,148],{54:$Vm,55:$Vn,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o([5,7,9,11,12,14,26,38,49,51,52,53,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,95,96,97],[2,149],{54:$Vm,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($VG,[2,122]),{54:$Vm,55:$Vn,72:$Vo,93:$Vp,95:[1,144],99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},o($VG,[2,150]),o($VG,[2,128]),{28:146,59:145,71:$V7},{28:146,59:147,71:$V7},{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:148,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},o($VV,[2,59]),{9:$V1,11:$V2,12:$VO,23:119,28:27,34:120,35:117,50:[1,158],51:$V5,65:116,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:[1,159],23:66,28:27,34:160,35:161,51:$V5,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},o($VV,[2,62]),o([5,7,9,11,12,14,38,49,51,53,58,60,68,71,73,77,79,81,82,83,84,85,87,90,91,92,96,97],[2,68],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:65,51:[1,162],71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o([5,7,9,11,12,14,38,49,51,53,54,55,58,60,68,71,72,73,77,79,81,82,83,84,85,87,90,91,92,93,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],[2,71],{99:$Vk}),o([5,7,14,38,49,53,58,60,68,77,79,81,82,83,84,85],[2,72],{28:27,98:30,23:66,88:124,35:161,86:163,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg}),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:70,51:$V5,71:$V7,91:$Ve,94:[2,116],96:$Vf,97:$Vg,98:30},o($V41,[2,108]),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:165,51:$V5,71:$V7,87:[1,164],91:$Ve,94:[2,114],96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:166,51:$V5,71:$V7,89:167,91:$Ve,94:$VJ,96:$Vf,97:$Vg,98:30},o($V51,[2,115]),o($V51,[2,117]),o($V51,[2,118]),o($V51,[2,119]),{14:[1,168],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{10:[1,169]},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:170,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V61,23:66,28:27,35:104,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V71,23:66,28:27,35:105,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vj,[2,78]),o($Vj,[2,79]),o($Vj,[2,80]),o($Vj,[2,92],{70:171,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($Vj,[2,96],{70:174,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($Vj,[2,98],{70:175,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($Vj,[2,100],{70:176,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),{9:$V1,11:$V2,12:$V3,14:[1,178],23:66,28:27,32:177,33:179,34:180,35:181,51:$V5,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},o($Vl,[2,67],{53:[1,182]}),{12:[1,183]},o($VG,[2,120]),{26:$VW,52:$VX,53:[1,185],55:$V81,60:[1,184],70:186,72:$V91,73:$VY},o($Va1,[2,106],{28:27,98:30,23:66,86:122,88:124,35:161,34:187,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg}),{26:$VW,52:$VX,53:[1,188],55:$V81,70:186,72:$V91,73:$VY},o($Vl,[2,55]),o($Vl,[2,81],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($Vl,[2,82]),o($Vl,[2,83]),o($Vl,[2,84]),o($Vl,[2,85],{70:186,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o([5,7,9,11,12,14,38,49,51,55,68,71,72,77,79,81,82,83,84,85,91,93,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],$VI,{89:67,54:$Vb1,94:$VJ}),o([5,7,14,26,38,49,52,54,55,68,72,77,79,81,82,83,84,85,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],$VK,{28:27,98:30,23:66,86:122,88:124,35:161,34:187,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,115:$VL}),{12:[1,190]},{12:[1,191]},{9:$V1,11:$V2,12:[1,192],23:66,28:27,34:160,35:161,51:$V5,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:65,51:[1,193],71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o([53,58,60],[2,61],{28:27,98:30,23:66,88:124,35:161,86:163,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg}),o($Vc1,[2,113],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($Vd1,$VH,{70:194,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($V41,[2,107]),{9:$V1,11:$V2,12:$V3,23:66,28:27,35:195,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vc1,[2,110],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($Vc1,[2,111],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),o($V41,[2,112]),{78:[1,196]},{11:[1,197]},{14:[1,198],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},o($Vj,[2,93]),o($Vj,$V71),o($Vj,$V61),o($Vj,[2,97]),o($Vj,[2,99]),o($Vj,[2,101]),{14:[1,199],26:[1,200]},o($VG,[2,74]),o($Ve1,[2,19]),o($Ve1,[2,20],{28:27,98:30,23:66,88:124,35:161,86:163,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg}),o([9,11,12,14,26,51,71,73,87,90,91,92,96,97],[2,21],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:201,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},{51:[1,202]},{28:146,59:203,71:$V7},{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:204,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},{28:146,59:205,71:$V7},o($Va1,[2,104],{28:27,98:30,23:66,88:124,35:161,86:163,9:$V1,11:$V2,12:$V3,51:$V5,71:$V7,73:$VP,87:$VQ,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg}),{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:206,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},{28:207,71:$V7},{28:146,59:208,71:$V7},{28:146,59:209,71:$V7},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:65,51:[1,210],71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vd1,$VH,{70:213,26:[1,212],52:[1,211],55:$V81,72:$V91,73:$VY}),{51:[1,214]},o($Vc1,[2,109],{54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF}),{9:$V1,11:$V2,12:$V3,23:217,24:216,25:215,28:27,35:19,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,91:$Ve,96:$Vf,97:$Vg,98:30},{12:[1,218]},o($Vj,[2,94],{70:219,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($VG,[2,73]),{9:$V1,11:$V2,12:$V3,23:66,28:27,33:220,34:180,35:181,51:$V5,71:$V7,73:$VP,86:122,87:$VQ,88:124,90:$VR,91:$VS,92:$VT,93:$VU,96:$Vf,97:$Vg,98:30},o($Vl,[2,66]),{26:$VW,52:$VX,55:$V81,70:213,72:$V91,73:$VY},{26:$VW,52:$VX,53:[1,221],55:$V81,70:186,72:$V91,73:$VY},o($Vl,[2,53]),o([5,7,9,11,12,14,38,49,51,53,60,68,71,77,79,81,82,83,84,85,91,96,97],[2,105],{70:186,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),o($Vl,[2,54]),o($Vl,[2,102],{70:222,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),{14:[1,223],26:$VW,52:$VX,55:$V81,70:186,72:$V91,73:$VY},{14:[1,224],26:$VW,52:$VX,55:$V81,70:186,72:$V91,73:$VY},o($Vd1,$VH,{70:213,26:$VW,52:$VX,55:$V81,72:$V91,73:$VY}),{51:[1,225]},{51:[1,226]},{51:[1,227]},{14:[1,228]},{79:[1,229]},o($Vl,[2,43]),o([5,7,9,11,12,14,38,49,51,54,55,68,71,72,77,79,81,82,83,84,85,91,93,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],[2,44],{99:$Vk}),{13:230,14:[1,231],27:232,28:233,71:$V7},o($Vj,[2,95]),o($Ve1,[2,18]),{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:234,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},{11:[1,236],76:235},o($Vl,[2,91]),{78:[1,237]},{14:[1,238]},{14:[1,239]},{14:[1,240]},o($Vf1,[2,70]),{9:$V1,11:$V2,12:$V3,23:217,24:216,25:241,28:27,35:19,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$Vg1,91:$Ve,96:$Vf,97:$Vg,98:30},{14:[1,243],26:[1,244]},{15:245,29:$Vh1,36:$Vi1,40:$Vj1,41:$Vk1,42:$Vl1,43:$Vm1,44:$Vn1},o($Ve1,[2,16]),{29:[1,252]},o($Vl,[2,52]),o($Vl,[2,103]),{54:$Vb1},{9:$V1,11:$V11,12:$V3,23:66,28:155,35:149,51:$V5,59:153,61:253,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},{53:[1,254]},{26:[1,255]},o($Vf1,[2,69]),o($Vl,[2,86]),{12:[1,256]},{15:257,29:$Vh1,36:$Vi1,40:$Vj1,41:$Vk1,42:$Vl1,43:$Vm1,44:$Vn1},{27:258,28:233,71:$V7},{16:259,36:$Vo1},{30:[1,261]},o($Vp1,[2,32]),o($Vp1,[2,33]),o($Vp1,[2,34]),o($Vp1,[2,35]),o($Vp1,[2,36]),{30:[1,262]},{79:[1,263]},{28:264,71:$V7},{28:265,71:$V7},{9:$V1,11:$V2,12:$V3,23:66,28:27,35:266,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{16:267,36:$Vo1},o($Ve1,[2,15]),{17:[1,268]},{9:$V1,11:$V2,12:$V3,23:217,24:216,25:271,28:27,35:19,37:269,38:[1,270],46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,91:$Ve,96:$Vf,97:$Vg,98:30},{10:[1,272]},{10:[1,273]},{9:$V1,11:$V11,12:[1,275],23:66,28:155,35:149,51:$V5,59:153,61:274,71:$V7,74:150,75:151,76:152,77:$V21,80:$V31,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vl,[2,46]),{50:[1,276]},{14:[1,277],54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{17:[1,278]},o($Vj,[2,5]),{9:$V1,11:$V2,12:$V3,23:217,24:216,25:280,28:27,35:19,38:[1,279],46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,91:$Ve,96:$Vf,97:$Vg,98:30},{17:[2,23]},o($Vq1,[2,39]),{40:[1,281],41:[1,282],42:[1,283],43:[1,284],44:[1,285],45:[1,286]},o([14,26,39],$Vi1,{15:287,29:$Vh1,40:$Vj1,41:$Vk1,42:$Vl1,43:$Vm1,44:$Vn1}),o($Vl,[2,89]),{9:$V1,11:$V2,12:$V3,14:[1,288],23:66,28:27,35:65,51:$V5,71:$V7,91:$Ve,96:$Vf,97:$Vg,98:30},{12:[1,289]},{78:[1,290]},o($Vj,[2,4]),{17:[2,22]},o($Vq1,[2,38]),o($Vr1,$Vs1,{31:291,39:$Vt1}),o($Vr1,$Vs1,{31:293,39:$Vt1}),o($Vr1,$Vs1,{31:294,39:$Vt1}),o($Vr1,$Vs1,{31:295,39:$Vt1}),o($Vr1,$Vs1,{31:296,39:$Vt1}),o($Vr1,$Vs1,{31:297,39:$Vt1}),o($Ve1,$Vs1,{31:298,39:$Vt1}),o($Vl,[2,90]),{51:[1,299]},{9:$V1,11:$V2,12:$V3,23:217,24:216,25:300,28:27,35:19,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,91:$Ve,96:$Vf,97:$Vg,98:30},o($Vp1,[2,26]),o($Vp1,[2,24]),o($Vp1,[2,27]),o($Vp1,[2,28]),o($Vp1,[2,29]),o($Vp1,[2,30]),o($Vp1,[2,31]),o($Ve1,[2,17]),{26:[1,301]},{79:[1,302]},{51:[1,303]},{9:$V1,11:$V2,12:[1,305],23:217,24:216,25:304,28:27,35:19,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$Vg1,91:$Ve,96:$Vf,97:$Vg,98:30},{14:[1,306]},o($Vl,[2,87]),{9:$V1,11:$V2,12:$V3,23:217,24:216,25:307,28:27,35:308,46:20,47:21,48:22,49:$V4,51:$V5,68:$V6,71:$V7,77:$V8,91:$Ve,96:$Vf,97:$Vg,98:30},{53:[1,309]},{14:[1,310]},{14:$VM,54:$Vm,55:$Vn,72:$Vo,93:$Vp,99:$Vq,100:$Vr,101:$Vs,102:$Vt,103:$Vu,104:$Vv,105:$Vw,106:$Vx,107:$Vy,108:$Vz,109:$VA,110:$VB,111:$VC,112:$VD,113:$VE,114:$VF},{11:[1,311]},o($Vl,[2,88]),{54:[1,312]},{28:313,71:$V7},{55:[1,314]},{11:[1,315]},{54:[1,316]},{28:317,71:$V7},o($Vl,[2,47])],\ndefaultActions: {34:[2,1],270:[2,23],279:[2,22]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const thefortosimple = require('./Instrucciones/ForToSimple');\r\n    const thefortocompuesto = require('./Instrucciones/ForToCompuesto');\r\n\r\n    const theforsimple = require('./Instrucciones/ForSimple');\r\n    const atributosexpresion = require(\"../../XPATH/Analizador/Instrucciones/AtributosSimples\")\r\n    const identificadorpredicado = require(\"../../XPATH/Analizador/Instrucciones/IdentificadorPredicado\")\r\n    const aritmetica= require(\"./Expresiones/Aritmetica\");\r\n    const logica = require (\"./Expresiones/Logica\");\r\n    const relacional = require(\"./Expresiones/Relacional\");\r\n    const barrasnodo= require(\"./Instrucciones/BarrasNodo\")\r\n    const identificador= require(\"./Expresiones/Identificador\");\r\n    const variable= require(\"./Expresiones/Variable\");\r\n    const nativo= require(\"./Expresiones/Nativo\");\r\n    const asignacion= require(\"./Instrucciones/Asignacion\")\r\n    const funciones= require(\"./Instrucciones/Funciones\")\r\n    const declaracion= require(\"./Instrucciones/Declaracion\")\r\n    const llamada= require(\"./Instrucciones/Llamada\")\r\n    const theif = require('./Instrucciones/If')\r\n    const thelet=require('./Instrucciones/Let')\r\n    const Tipo= require(\"./Simbolos/Tipo\");\r\n    const condicionsimple= require(\"./Instrucciones/CondicionSimple\");\r\n    const condicion= require(\"./Instrucciones/Condicion\");\r\n    const lower=require(\"./Funciones/Lower\");\r\n    const number=require(\"./Funciones/Number\");\r\n    const string=require(\"./Funciones/String\");\r\n    const upper=require(\"./Funciones/Upper\");\r\n    const subs=require(\"./Funciones/Substring\");\r\n    const thefunctionif=require('./Instrucciones/IfFuncion');\r\n    const theifAnidado=require('./Instrucciones/IfFuncionAnidado');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-sensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:\nbreak;\ncase 1:\nbreak;\ncase 2:\nbreak;\ncase 3:\nbreak;\ncase 4:\nbreak;\ncase 5:\nbreak;\ncase 6:return 29;\nbreak;\ncase 7:return 30;\nbreak;\ncase 8:return 49;\nbreak;\ncase 9:return 68;\nbreak;\ncase 10:return 58;\nbreak;\ncase 11:return 60;\nbreak;\ncase 12:return 53;\nbreak;\ncase 13:return 50;\nbreak;\ncase 14:return 'RDOC';\nbreak;\ncase 15:return 77;\nbreak;\ncase 16:return 79;\nbreak;\ncase 17:return 78;\nbreak;\ncase 18:return 109;\nbreak;\ncase 19:return 110;\nbreak;\ncase 20:return 113;\nbreak;\ncase 21:return 111;\nbreak;\ncase 22:return 114;\nbreak;\ncase 23:return 112;\nbreak;\ncase 24:return 67;\nbreak;\ncase 25:return 52;\nbreak;\ncase 26:return 7;\nbreak;\ncase 27:return 8;\nbreak;\ncase 28:return 101;\nbreak;\ncase 29:return 72;\nbreak;\ncase 30:return 55;\nbreak;\ncase 31:return 102;\nbreak;\ncase 32:return 'RNODO';\nbreak;\ncase 33:return 'RTEXT';\nbreak;\ncase 34:return 80;\nbreak;\ncase 35:return 97;\nbreak;\ncase 36:return 9;\nbreak;\ncase 37:return 81;\nbreak;\ncase 38:return 85;\nbreak;\ncase 39:return 40\nbreak;\ncase 40:return 43\nbreak;\ncase 41:return 45\nbreak;\ncase 42:return 41 \nbreak;\ncase 43:return 42\nbreak;\ncase 44:return 44\nbreak;\ncase 45:return 83;\nbreak;\ncase 46:return 84;\nbreak;\ncase 47:return 82;\nbreak;\ncase 48:return 93;\nbreak;\ncase 49:return 12;\nbreak;\ncase 50:return 14;    \nbreak;\ncase 51:return 92;\nbreak;\ncase 52:return 73;\nbreak;\ncase 53:return 90;\nbreak;\ncase 54:return 87;\nbreak;\ncase 55:return 94;\nbreak;\ncase 56:return 95;\nbreak;\ncase 57:return 71;\nbreak;\ncase 58:return 106;\nbreak;\ncase 59:return 'MENORQUECIERRE';\nbreak;\ncase 60:return 105;\nbreak;\ncase 61:return 107;\nbreak;\ncase 62:return 108;\nbreak;\ncase 63:return 36;\nbreak;\ncase 64:return 38;\nbreak;\ncase 65:return 104;\nbreak;\ncase 66:return 54;\nbreak;\ncase 67:return 103;\nbreak;\ncase 68:return 99;\nbreak;\ncase 69:return 100;\nbreak;\ncase 70:return 115;\nbreak;\ncase 71:return 'POTENCIA';\nbreak;\ncase 72:return 102;\nbreak;\ncase 73:return 'POTENCIA';\nbreak;\ncase 74:return 91;\nbreak;\ncase 75:return 26;\nbreak;\ncase 76:return 69;\nbreak;\ncase 77:return 10;\nbreak;\ncase 78:return 17;\nbreak;\ncase 79:return 39;\nbreak;\ncase 80: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 96; \nbreak;\ncase 81: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 'QUOTE'; \nbreak;\ncase 82:return 11;\nbreak;\ncase 83:return 51;\nbreak;\ncase 84:return 5\nbreak;\ncase 85:console.log(\"Error Lexico\");\nbreak;\n}\n},\nrules: [/^(?:[(][:][^:]*[:]+[)])/,/^(?:[ \\r\\t]+)/,/^(?:\\s+)/,/^(?:\\n+)/,/^(?:\\/\\/.*)/,/^(?:[/][][^][]+([^/][^][]+)*[/])/,/^(?:as\\b)/,/^(?:xs\\b)/,/^(?:for\\b)/,/^(?:let\\b)/,/^(?:where\\b)/,/^(?:order by\\b)/,/^(?:return\\b)/,/^(?:in\\b)/,/^(?:doc\\b)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:then\\b)/,/^(?:eq\\b)/,/^(?:ne\\b)/,/^(?:lt\\b)/,/^(?:le\\b)/,/^(?:gt\\b)/,/^(?:ge\\b)/,/^(?:at\\b)/,/^(?:to\\b)/,/^(?:declare\\b)/,/^(?:function\\b)/,/^(?:div\\b)/,/^(?:or\\b)/,/^(?:and\\b)/,/^(?:mod\\b)/,/^(?:node\\b)/,/^(?:text\\b)/,/^(?:data\\b)/,/^(?:last\\b)/,/^(?:local\\b)/,/^(?:number\\b)/,/^(?:string\\b)/,/^(?:integer\\b)/,/^(?:decimal\\b)/,/^(?:double\\b)/,/^(?:float\\b)/,/^(?:char\\b)/,/^(?:boolean\\b)/,/^(?:upper-case\\b)/,/^(?:lower-case\\b)/,/^(?:substring\\b)/,/^(?:\\*)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\.\\.)/,/^(?:\\.)/,/^(?:\\/\\/)/,/^(?:\\/)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:>=)/,/^(?:<\\/)/,/^(?:<=)/,/^(?:<)/,/^(?:>)/,/^(?:\\{)/,/^(?:\\})/,/^(?:!=)/,/^(?:=)/,/^(?:==)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\^)/,/^(?:%)/,/^(?:\\^)/,/^(?:@)/,/^(?:,)/,/^(?::=)/,/^(?::)/,/^(?:;)/,/^(?:\\?)/,/^(?:\"[^\\\"]*\")/,/^(?:'[^\\']*')/,/^(?:([a-zA-Z_À-ÿ\\u00F1\\u00D1])[a-zA-Z0-9_^ÑñÀ-ÿ\\-\\.\\u00F1\\u00D10-9_]*)/,/^(?:[0-9]+(\\.[0-9]+)?\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = GrammXQuery;\nexports.Parser = GrammXQuery.Parser;\nexports.parse = function () { return GrammXQuery.parse.apply(GrammXQuery, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","export default class NodoErrores {\r\n    private tipoError: String;\r\n    private desc: String;\r\n    private fila: number;\r\n    private columna: number;\r\n    public getDesc(): String {\r\n      return this.desc;\r\n    }\r\n    public getTipoError(): String {\r\n      return this.tipoError;\r\n    }\r\n    public getcolumna(): number {\r\n      return this.columna;\r\n    }\r\n    public getFila(): number {\r\n      return this.fila;\r\n    }\r\n    constructor(tipo: String, desc: String, fila: number, columna: number) {\r\n      this.tipoError = tipo;\r\n      this.desc = desc;\r\n      this.fila = fila;\r\n      this.columna = columna;\r\n    }\r\n    public returnError(): String {\r\n      return (\r\n        'Se obtuvo: ' +\r\n        this.tipoError +\r\n        ' desc:{' +\r\n        this.desc +\r\n        '} en la fila: ' +\r\n        this.fila +\r\n        ' en la columna: ' +\r\n        this.columna +\r\n        '\\n'\r\n      );\r\n    }\r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gramatical-report',\r\n  templateUrl: './gramatical-report.component.html',\r\n  styleUrls: ['./gramatical-report.component.css']\r\n})\r\nexport class GramaticalReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    let info = window.localStorage.getItem('gramatica');\r\n    \r\n    let texto=document.getElementById(\"text2\");\r\n    if(texto!= null){\r\n      texto.innerHTML+=info;\r\n    }\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n\r\n\r\n\r\n\r\n<textarea name=\"Estruct\" id=\"text2\" cols=\"125\" rows=\"35\"></textarea>\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Exit extends Instruccion {\r\n\r\n    constructor(fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        return \"exit;\"\r\n    }\r\n}","\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\n\r\nexport default class Instrucciones extends Array<Instruccion[]>{\r\n    \r\n    constructor(instruction1: Instruccion[],instruction2:Instruccion[], fila: number, columna: number){\r\n        super();\r\n        if(instruction1!=null){\r\n            this.push(instruction1);\r\n        }\r\n        if(instruction2!=null){\r\n            this.push(instruction2)\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n}","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class Condicion extends Instruccion {\r\n\r\n    private operando1: Instruccion;\r\n    private operando2: Instruccion;\r\n    private operador: String;\r\n    private operandoUnico: Instruccion;\r\n    constructor(operador: String, linea: number, columna: number, op1: Instruccion, op2?: Instruccion) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.operador = operador;\r\n        if (!op2) this.operandoUnico = op1;\r\n        else {\r\n            this.operando1 = op1;\r\n            this.operando2 = op2;\r\n        }\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        console.log(\"aqui iria la consulta\");\r\n        console.log(tabla);\r\n\r\n    }\r\n    public getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { StringLiteralLike } from \"typescript\";\r\nimport Atributo from \"../Expresiones/Atributo\";\r\nimport Objeto from \"../Expresiones/Objeto\";\r\n\r\nexport class reporteTabla {\r\n  public identificador: String;\r\n  public tipo: String;\r\n  public entorno:String;\r\n  public contenido: String;\r\n  public linea:String;\r\n  public columna:String;\r\n  public posicion: String;\r\n\r\n  constructor(identificador: String, tipo:String, entorno: String, contenido: String,linea:String,columna:String,posicion:String) {\r\n    this.identificador = identificador;\r\n    this.tipo=tipo;\r\n    this.entorno=entorno;\r\n    this.contenido = contenido;\r\n    this.linea=linea;\r\n    this.columna=columna;\r\n    this.posicion=posicion;\r\n  }\r\n  public getIdentificador(): String {\r\n    return this.identificador;\r\n  }\r\n\r\n  public setIdentificador(identificador:string){\r\n    this.identificador=identificador;\r\n  }\r\n\r\n  public getContenido(): String {\r\n    return this.identificador;\r\n  }\r\n\r\n  public setContenido(contenido:string){\r\n    this.contenido=contenido;\r\n  }\r\n\r\n  public getTipo():String{\r\n    return this.tipo;\r\n  }\r\n\r\n  public setTipo(tipo:String) {\r\n    this.tipo = tipo;\r\n  }\r\n\r\n  public getEntorno():String{\r\n    return this.entorno;\r\n  }\r\n\r\n  public setEntorno(ent: String) {\r\n    this.entorno = ent;\r\n  }\r\n\r\n  public getLinea(): String {\r\n    return this.linea;\r\n  }\r\n  public getColumna(): String {\r\n    return this.columna;\r\n  }\r\n  public setLinea(linea: String) {\r\n    this.linea = linea;\r\n  }\r\n  public setColumna(col: String) {\r\n    this.columna = col;\r\n  }\r\n  public getPosicion():String{\r\n    return this.posicion;\r\n  }\r\n\r\n  public setPosicion(posicion:String){\r\n    this.posicion=posicion;\r\n  }\r\n\r\n\r\n}\r\n","import Simbolo from './Simbolo';\r\nimport Tipo, { tipoDato } from './Tipo';\r\n\r\nexport default class tablaSimbolos {\r\n  public tablaAnterior: tablaSimbolos | any;\r\n  private tipoDato: Tipo;\r\n  public tablaActual: Array<Simbolo>;\r\n  private nombreDato: String;\r\n  constructor(anterior?: tablaSimbolos) {\r\n    this.tablaAnterior = anterior;\r\n    this.tablaActual = new Array<Simbolo>();\r\n    this.tipoDato = new Tipo(tipoDato.CADENA);\r\n    this.nombreDato = '';\r\n  }\r\n  public getAnterior() {\r\n    return this.tablaAnterior;\r\n  }\r\n  public setAnterior(anterior: tablaSimbolos) {\r\n    this.tablaAnterior = anterior;\r\n  }\r\n  public getTabla() {\r\n    return this.tablaActual;\r\n  }\r\n  public setTabla(Tabla: Array<Simbolo>) {\r\n    this.tablaActual = Tabla;\r\n  }\r\n  public setVariable(simbolo: Simbolo) {\r\n    this.tablaActual.push(simbolo);\r\n    return `creada con exito`;\r\n  }\r\n\r\n  \r\n\r\n  public getVariable(id: String) {\r\n    for (let e: tablaSimbolos = this; e != null; e = e.getAnterior()) {\r\n      let encontrado: Simbolo=null;\r\n      for(let h of e.getTabla()){\r\n        if(h.getidentificador()==id){\r\n          encontrado=h;\r\n          break;\r\n        }\r\n      }\r\n      if (encontrado != null) {\r\n        return encontrado;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public getNombre(): String {\r\n    return this.nombreDato;\r\n  }\r\n  public setNombre(nombre: String) {\r\n    this.nombreDato = nombre;\r\n  }\r\n}\r\n//ARREGLO DE SOLO ID DE METODOS\r\n","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Nativo from \"../Expresiones/Nativo\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport BarrasNodo from \"./BarrasNodo\";\r\nimport Declaracion from \"./Declaracion\";\r\nimport IfFuncionAnidado from \"./IfFuncionAnidado\";\r\nimport Let from \"./Let\";\r\n\r\n\r\nexport default class Llamada extends Instruccion {\r\n\r\n    public identificador: string;\r\n    public parametros: Instruccion[];\r\n    constructor(identificador: string, parametros: Instruccion[], fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n        this.parametros = parametros;\r\n    }\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var ListaParametros: Array<Instruccion> = new Array<Instruccion>();\r\n        var listaInstrucciones: Array<Instruccion> = new Array<Instruccion>();\r\n        var cadenaparametros = \"\"\r\n        var c = 0;\r\n        var sim\r\n        var tabxmlanterior;\r\n        let countparameter = 0\r\n        let countparameter2 = 0\r\n        var tablasimbol= new tablaSimbolos();\r\n        /************************************************************************************************************************\r\n         *******************************************************AREA DE PARAMETROS************************************************\r\n         * **********************************************************************************************************************\r\n         */\r\n        var buscarFuncion = tabla.getVariable(this.identificador);\r\n        if (buscarFuncion != null) {\r\n            if (this.parametros != null) {\r\n                for (var key of tabla.getTabla()) {\r\n                    if (key.getidentificador() == this.identificador) {\r\n                        ///aqui se agrega la lista de instrucciones\r\n                        listaInstrucciones = buscarFuncion.getvalor()\r\n                    } else {\r\n                        ////aqui se agregan y declaran los paramentros\r\n                        ListaParametros = key.getvalor()\r\n                    }\r\n                }\r\n                if (this.parametros instanceof Array) {\r\n                    this.parametros.forEach(element => {\r\n                        if (element instanceof Array) {\r\n                            element.forEach(iteracion => {\r\n\r\n                                if (iteracion instanceof Nativo) {\r\n                                    countparameter++\r\n                                    var declaravalor = iteracion.interpretar(arbol, tabla, tablaxml)\r\n                                    ListaParametros.forEach(element => {\r\n                                        countparameter2++\r\n                                        if (countparameter == countparameter2) {\r\n                                            if (element instanceof Declaracion) {\r\n                                                var declara = element.interpretar(arbol, tabla, tablaxml)\r\n                                                var buscar1 = tabla.getVariable(declara);\r\n                                                if (buscar1 != null) {\r\n                                                    buscar1.setvalor(declaravalor)\r\n                                                    tablasimbol.setVariable(buscar1)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    countparameter2 = 0\r\n                                } else if (iteracion instanceof BarrasNodo) {\r\n                                    var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n                                    if (resultador instanceof tablaSimbolosxml) {\r\n                                        c++;\r\n                                        tabxmlanterior = tablaxml\r\n                                        tablaxml = resultador\r\n                                        if (c == element.length) {\r\n                                            if (arbol != null) {\r\n                                                console.log(\"LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\\n\")\r\n                                                sim = new Simbolo(new Tipo(tipoDato.FUNCION), this.identificador, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                                tabla.setVariable(sim)\r\n                                                tablaxml = tabxmlanterior\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                    if (resultador instanceof Array) {\r\n                                        console.log(resultador)\r\n                                        resultador.forEach(element => {\r\n                                            console.log(element.getvalor());\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else {\r\n                            ////SI FUERA STRING\r\n                            if (element instanceof Nativo) {\r\n                                countparameter++\r\n                                var declaravalor = element.interpretar(arbol, tabla, tablaxml)\r\n                                ListaParametros.forEach(element1 => {\r\n                                    countparameter2++\r\n                                    if (countparameter == countparameter2) {\r\n                                        if (element1 instanceof Declaracion) {\r\n                                            var declara = element1.interpretar(arbol, tabla, tablaxml)\r\n                                            var buscar1 = tabla.getVariable(declara);\r\n                                            if (buscar1 != null) {\r\n                                                buscar1.setvalor(declaravalor)\r\n                                                tablasimbol.setVariable(buscar1)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                countparameter2 = 0\r\n                            } else if (element instanceof BarrasNodo) {\r\n                                var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n                                if (resultador instanceof tablaSimbolosxml) {\r\n                                    c++;\r\n                                    tabxmlanterior = tablaxml\r\n                                    tablaxml = resultador\r\n                                    if (c == this.parametros.length) {\r\n                                        if (arbol != null) {\r\n                                            console.log(\"LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\\n\")\r\n                                            sim = new Simbolo(new Tipo(tipoDato.FUNCION), this.identificador, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                            tabla.setVariable(sim)\r\n                                            tablaxml = tabxmlanterior\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                                if (resultador instanceof Array) {\r\n                                    console.log(resultador)\r\n                                    resultador.forEach(element => {\r\n                                        console.log(element.getvalor());\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n\r\n            }\r\n\r\n            /*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n             * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ EJECUTAR INSTRUCCIONES @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n             * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n             */\r\n           \r\n            if(listaInstrucciones!=null){\r\n                listaInstrucciones.forEach(element => {\r\n                    if(element instanceof Let){\r\n                        var respuesta= element.interpretar(arbol,tablasimbol, tablaxml)\r\n                        if (respuesta instanceof Simbolo) {\r\n                            buscarFuncion.setvalor(respuesta.getvalor())\r\n                          } else if (respuesta instanceof Array) {\r\n                              buscarFuncion.setvalor(respuesta);\r\n                          } else if (respuesta instanceof tablaSimbolos) {\r\n                            buscarFuncion.setvalor(respuesta);\r\n                          }else{\r\n                            buscarFuncion.setvalor(respuesta);\r\n                          }\r\n                    }\r\n                    if (element instanceof IfFuncionAnidado) {\r\n                        var theifani = element.interpretar(arbol, tabla, tablaxml);\r\n                       // respuesta=theifani;\r\n                       buscarFuncion.setvalor(theifani)\r\n                        console.log(\"hola estamos en if anidado\")\r\n                        \r\n                        //cadena = theifani;\r\n                \r\n                      }\r\n                });\r\n\r\n            }\r\n            return buscarFuncion.getvalor()\r\n        }\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import NodoErrores from \"src/app/Backend/XML/Analizador/Excepciones/NodoErrores\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Variable from \"./Variable\";\r\n\r\nexport default class Relacional extends Instruccion {\r\n  public cond1: Instruccion;\r\n  public cond2: Instruccion;\r\n  public relacion: Relacionales;\r\n  constructor(\r\n    relacion: Relacionales,\r\n    fila: number,\r\n    columna: number,\r\n    cond1: Instruccion,\r\n    cond2: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.relacion = relacion;\r\n    this.cond1 = cond1;\r\n    this.cond2 = cond2;\r\n  }\r\n\r\n  public getNodoAST(): nodoAST {\r\n    let nodo = new nodoAST('RELACIONAL');\r\n    nodo.agregarHijoAST(this.cond1.getNodoAST());\r\n    nodo.agregarHijo(this.relacion + '', 'rel', this.relacion);\r\n    nodo.agregarHijoAST(this.cond2.getNodoAST());\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    let izq, der;\r\n    izq = this.obtieneValor(this.cond1, arbol, tabla, tablaxml);\r\n    if (izq instanceof NodoErrores) return izq;\r\n    der = this.obtieneValor(this.cond2, arbol, tabla, tablaxml);\r\n    if (der instanceof NodoErrores) return der;\r\n    if (\r\n      this.cond1.tipoDato.getTipo() == tipoDato.CADENA &&\r\n      this.cond2.tipoDato.getTipo() != tipoDato.CADENA\r\n    ) {\r\n      let opera = this.TipoOperando()\r\n      return { condicion1: izq, operador: opera, condicion2: der }\r\n    } else if (\r\n      this.cond2.tipoDato.getTipo() == tipoDato.CADENA &&\r\n      this.cond1.tipoDato.getTipo() != tipoDato.CADENA\r\n    ) {\r\n      let opera = this.TipoOperando()\r\n      return { condicion1: izq, operador: opera, condicion2: der }\r\n    } else {\r\n      this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n      switch (this.relacion) {\r\n        case Relacionales.IGUAL:\r\n          return izq == der;\r\n        case Relacionales.DIFERENTE:\r\n          return izq != der;\r\n        case Relacionales.MENORQUE:\r\n          return izq < der;\r\n        case Relacionales.MENORIGUAL:\r\n          return izq <= der;\r\n        case Relacionales.MAYORQUE:\r\n          return izq > der;\r\n        case Relacionales.MAYORIGUAL:\r\n          return izq >= der;\r\n        default:\r\n          return 'what';\r\n      }\r\n    }\r\n  }\r\n  obtieneValor(operando: Instruccion, arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml): any {\r\n    let valor = operando.interpretar(arbol, tabla, tablaxml)\r\n    if (operando instanceof Variable) {\r\n      var buscar1 = tabla.getVariable(valor);\r\n      if (buscar1 != null) {\r\n        return buscar1.getvalor()\r\n      }\r\n    } else {\r\n      switch (operando.tipoDato.getTipo()) {\r\n        case tipoDato.ENTERO:\r\n          return parseInt(valor);\r\n        case tipoDato.DECIMAL:\r\n          return parseFloat(valor);\r\n        case tipoDato.CARACTER:\r\n          var da = valor + '';\r\n          var res = da.charCodeAt(0);\r\n          return res;\r\n        case tipoDato.BOOLEANO:\r\n          let dats = valor + '';\r\n          let otr = dats.toLowerCase();\r\n          return valor;\r\n        case tipoDato.CADENA:\r\n          return '' + valor;\r\n      }\r\n    }\r\n\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  TipoOperando() {\r\n    switch (this.relacion) {\r\n      case Relacionales.IGUAL:\r\n        return \"==\";\r\n      case Relacionales.DIFERENTE:\r\n        return \"!=\";\r\n      case Relacionales.MENORQUE:\r\n        return \"<\";\r\n      case Relacionales.MENORIGUAL:\r\n        return \"<=\";\r\n      case Relacionales.MAYORQUE:\r\n        return \">\";\r\n      case Relacionales.MAYORIGUAL:\r\n        return \">=\";\r\n      default:\r\n        return 'what';\r\n    }\r\n  }\r\n}\r\n\r\nexport enum Relacionales {\r\n  IGUAL,\r\n  DIFERENTE,\r\n  MAYORQUE,\r\n  MENORQUE,\r\n  MAYORIGUAL,\r\n  MENORIGUAL,\r\n  NOIGUAL\r\n}\r\n","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar GramaticaXPath = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,23],$V2=[1,24],$V3=[1,9],$V4=[1,10],$V5=[1,11],$V6=[1,12],$V7=[1,13],$V8=[1,14],$V9=[1,15],$Va=[1,16],$Vb=[1,17],$Vc=[1,18],$Vd=[1,19],$Ve=[1,20],$Vf=[1,21],$Vg=[1,22],$Vh=[5,6],$Vi=[5,6,9,17,18,19,46,48,49,50,51,52,53,54,55,56,57,58,59],$Vj=[1,28],$Vk=[1,39],$Vl=[1,46],$Vm=[1,47],$Vn=[1,30],$Vo=[1,31],$Vp=[1,32],$Vq=[1,34],$Vr=[1,35],$Vs=[1,41],$Vt=[1,42],$Vu=[1,43],$Vv=[1,44],$Vw=[1,45],$Vx=[5,6,9,18,19,21,23,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,53,54,55,56,57,58,59],$Vy=[1,66],$Vz=[5,6,9,17,18,19,21,23,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,53,54,55,56,57,58,59],$VA=[5,6,9,17,19,21,23,46,48,49,50,51,52,53,54,55,56,57,58,59],$VB=[1,71],$VC=[1,69],$VD=[1,70],$VE=[1,72],$VF=[1,73],$VG=[1,74],$VH=[1,75],$VI=[1,76],$VJ=[1,77],$VK=[1,78],$VL=[1,79],$VM=[1,80],$VN=[1,81],$VO=[1,82],$VP=[2,33],$VQ=[5,6,9,17,19,21,23,30,31,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59],$VR=[5,6,9,17,19,21,23,33,34,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59],$VS=[5,6,9,17,19,21,23,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59],$VT=[5,6,9,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,53,54,55,56,57,58,59];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"NODO\":4,\"EOF\":5,\"OPTION\":6,\"INSTRUCCIONES\":7,\"INSTRUCCION\":8,\"BARRA\":9,\"EXPRESION\":10,\"ATRIBUTO\":11,\"AXES\":12,\"ALL\":13,\"PREDICADOS\":14,\"IDENTIFICADOR\":15,\"L_CORCHETES\":16,\"SELECT\":17,\"MULTIPLICACION\":18,\"ATRIBUTOS\":19,\"CORCHETEIZQ\":20,\"CORCHETEDER\":21,\"PARIZQ\":22,\"PARDER\":23,\"COMA\":24,\"CADENA\":25,\"entero\":26,\"NUMBER\":27,\"CARACTER_LITERAL\":28,\"STRING_LITERAL\":29,\"MENOS\":30,\"MAS\":31,\"DIVISION\":32,\"IGUAL\":33,\"NOIGUAL\":34,\"MENORQUE\":35,\"MENORIGUAL\":36,\"MAYORQUE\":37,\"MAYORIGUAL\":38,\"OR\":39,\"AND\":40,\"MODULO\":41,\"LAST\":42,\"POSITION\":43,\"NODE\":44,\"TEXT\":45,\"ANCESTOR\":46,\"DOSPUNTOS\":47,\"ANCESTORSELF\":48,\"ATTRIBUTE\":49,\"CHILD\":50,\"DESCENDENT\":51,\"DESCENDENTSELF\":52,\"FOLLOWING\":53,\"FOLLOWINGSIBLI\":54,\"NAMESPACE\":55,\"PARENT\":56,\"PRECEDING\":57,\"PRECEDINGSIBLI\":58,\"SELF\":59,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"OPTION\",9:\"BARRA\",15:\"IDENTIFICADOR\",17:\"SELECT\",18:\"MULTIPLICACION\",19:\"ATRIBUTOS\",20:\"CORCHETEIZQ\",21:\"CORCHETEDER\",22:\"PARIZQ\",23:\"PARDER\",24:\"COMA\",25:\"CADENA\",26:\"entero\",27:\"NUMBER\",28:\"CARACTER_LITERAL\",29:\"STRING_LITERAL\",30:\"MENOS\",31:\"MAS\",32:\"DIVISION\",33:\"IGUAL\",34:\"NOIGUAL\",35:\"MENORQUE\",36:\"MENORIGUAL\",37:\"MAYORQUE\",38:\"MAYORIGUAL\",39:\"OR\",40:\"AND\",41:\"MODULO\",42:\"LAST\",43:\"POSITION\",44:\"NODE\",45:\"TEXT\",46:\"ANCESTOR\",47:\"DOSPUNTOS\",48:\"ANCESTORSELF\",49:\"ATTRIBUTE\",50:\"CHILD\",51:\"DESCENDENT\",52:\"DESCENDENTSELF\",53:\"FOLLOWING\",54:\"FOLLOWINGSIBLI\",55:\"NAMESPACE\",56:\"PARENT\",57:\"PRECEDING\",58:\"PRECEDINGSIBLI\",59:\"SELF\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,1],[8,3],[8,2],[8,1],[8,1],[8,1],[14,1],[14,2],[13,2],[13,1],[13,1],[11,2],[11,2],[11,2],[11,3],[16,4],[16,3],[16,4],[16,3],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,3],[10,2],[10,3],[10,3],[10,3],[10,3],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4],[12,4]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 2:\r\nif($$[$0]!=false)$$[$0-2].push($$[$0]);this.$=$$[$0-2];\r\nbreak;\r\ncase 3: case 5: case 11:\r\nthis.$=($$[$0]!=false) ?[$$[$0]]:[];\r\nbreak;\r\ncase 4:\r\nif($$[$0]!=false)$$[$0-1].push($$[$0]);this.$=$$[$0-1];\r\nbreak;\r\ncase 6:\r\nthis.$ = new barrasnodo.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column, $$[$0-1]);\r\nbreak;\r\ncase 7:\r\nthis.$ = new barrasnodo.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column, null);\r\nbreak;\r\ncase 8: case 9: case 10: case 27: case 30: case 31: case 32: case 34:\r\nthis.$=$$[$0]\r\nbreak;\r\ncase 12:\r\nthis.$ = new predicado.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 13:\r\nthis.$ = new selectroot.default($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column, $$[$0]);\r\nbreak;\r\ncase 14:\r\nthis.$ = new selectroot.default($$[$0],_$[$0].first_line,_$[$0].first_column, null);\r\nbreak;\r\ncase 15:\r\nthis.$ = new todo.default($$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 16:\r\nthis.$ = new atributosexpresion.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 17: case 18:\r\nthis.$ = new atributosimple.default($$[$0-1],$$[$0],_$[$0-1].first_line,_$[$0-1].first_column);\r\nbreak;\r\ncase 19:\r\nthis.$ = new atributospredicado.default($$[$0-1],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 20:\r\nthis.$ = new arreglos.default($$[$0-3],_$[$0-3].first_line,_$[$0-3].first_column, $$[$0-1]);\r\nbreak;\r\ncase 21:\r\nthis.$ = new arreglos.default(null,_$[$0-2].first_line,_$[$0-2].first_column, $$[$0-1]);\r\nbreak;\r\ncase 22:\r\nthis.$ = new parentesis.default($$[$0-2],_$[$0-3].first_line,_$[$0-3].first_column, $$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = new parentesis.default($$[$0-1],_$[$0-2].first_line,_$[$0-2].first_column, null);\r\nbreak;\r\ncase 24: case 29:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 25:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 26:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.DECIMAL),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 28:\r\nthis.$=new nativo.default(new Tipo.default(Tipo.tipoDato.CARACTER),$$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 33:\r\nthis.$ = new identificador.default($$[$0],_$[$0].first_line,_$[$0].first_column);\r\nbreak;\r\ncase 35:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.RESTA,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 36:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.SUMA,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 37:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.MULTIPLICACION,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 38:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.DIVISION,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 39:\r\nthis.$=new relacional.default(relacional.Relacionales.IGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 40:\r\nthis.$=new relacional.default(relacional.Relacionales.NOIGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 41:\r\nthis.$=new relacional.default(relacional.Relacionales.MENOR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 42:\r\nthis.$=new relacional.default(relacional.Relacionales.MENORIGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 43:\r\nthis.$=new relacional.default(relacional.Relacionales.MAYOR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 44:\r\nthis.$=new relacional.default(relacional.Relacionales.MAYORIGUAL,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 45:\r\nthis.$=new logica.default(logica.Logicas.OR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 46:\r\nthis.$=new logica.default(logica.Logicas.AND,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 47:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.MODULADOR,_$[$0-2].first_line,_$[$0-2].first_column,$$[$0-2],$$[$0]);\r\nbreak;\r\ncase 48:\r\nthis.$=new aritmetica.default(aritmetica.Operadores.MENOSNUM,_$[$0-1].first_line,_$[$0-1].first_column,$$[$0],null);\r\nbreak;\r\ncase 49: case 50: case 51: case 52:\r\nthis.$ = new especiales.default($$[$0-2],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\ncase 53: case 54: case 55: case 56: case 57: case 58: case 59: case 60: case 61: case 62: case 63: case 64: case 65:\r\nthis.$ = new axes.default($$[$0-3],$$[$0],_$[$0-3].first_line,_$[$0-3].first_column);\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:4,9:$V0,11:6,12:7,13:8,17:$V1,18:$V2,19:$V3,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{1:[3]},{5:[1,25],6:[1,26]},o($Vh,[2,3],{11:6,12:7,13:8,8:27,9:$V0,17:$V1,18:$V2,19:$V3,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg}),o($Vi,[2,5]),{8:48,9:$Vj,10:29,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($Vi,[2,8]),o($Vi,[2,9]),o($Vi,[2,10]),{8:48,9:$V0,10:49,11:38,12:37,13:36,14:40,15:[1,52],16:33,17:[1,50],18:[1,51],19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{47:[1,53]},{47:[1,54]},{47:[1,55]},{47:[1,56]},{47:[1,57]},{47:[1,58]},{47:[1,59]},{47:[1,60]},{47:[1,61]},{47:[1,62]},{47:[1,63]},{47:[1,64]},{47:[1,65]},o($Vx,[2,14],{17:$Vy}),o($Vz,[2,15]),{1:[2,1]},{7:67,8:4,9:$V0,11:6,12:7,13:8,17:$V1,18:$V2,19:$V3,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($Vi,[2,4]),{8:48,9:$Vj,10:68,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($VA,[2,7],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($Vz,[2,24]),o($Vz,[2,25]),o($Vz,[2,26]),o($Vz,[2,27],{20:$VO}),o($Vz,[2,28]),o($Vz,[2,29]),o($Vz,[2,30]),o($Vz,[2,31]),o($Vz,[2,32]),o($Vz,$VP,{16:83,20:$Vl,22:$Vm}),o($Vz,[2,34]),{8:48,9:$V0,10:84,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{22:[1,85]},{22:[1,86]},{22:[1,87]},{22:[1,88]},{8:48,9:$V0,10:89,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:90,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($Vz,[2,11]),o($VA,[2,16],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($Vx,[2,17],{17:$Vy}),o($Vz,[2,18]),o($Vz,$VP,{16:91,20:$Vl,22:$Vm}),{47:[1,92]},{47:[1,93]},{47:[1,94]},{47:[1,95]},{47:[1,96]},{47:[1,97]},{47:[1,98]},{47:[1,99]},{47:[1,100]},{47:[1,101]},{47:[1,102]},{47:[1,103]},{47:[1,104]},o($Vz,[2,13]),o($Vh,[2,2],{11:6,12:7,13:8,8:27,9:$V0,17:$V1,18:$V2,19:$V3,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg}),o($VA,[2,6],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),{8:48,9:$V0,10:105,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:106,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:107,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:108,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:109,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:110,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:111,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:112,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:113,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:114,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:115,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:116,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:117,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:118,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($Vz,[2,12],{20:$VO}),o($Vz,[2,48]),{23:[1,119]},{23:[1,120]},{23:[1,121]},{23:[1,122]},{18:$VB,21:[1,123],30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN},{18:$VB,23:[1,124],30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN},o($Vz,[2,19],{20:$VO}),{8:48,9:$V0,10:125,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:126,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:127,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:128,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:129,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:130,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:131,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:132,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:133,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:134,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:135,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:136,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},{8:48,9:$V0,10:137,11:38,12:37,13:36,14:40,15:$Vk,16:33,17:$V1,18:$V2,19:$V3,20:$Vl,22:$Vm,25:$Vn,26:$Vo,27:$Vp,28:$Vq,29:$Vr,30:$Vs,42:$Vt,43:$Vu,44:$Vv,45:$Vw,46:$V4,48:$V5,49:$V6,50:$V7,51:$V8,52:$V9,53:$Va,54:$Vb,55:$Vc,56:$Vd,57:$Ve,58:$Vf,59:$Vg},o($VQ,[2,35],{18:$VB,32:$VE,41:$VN}),o($VQ,[2,36],{18:$VB,32:$VE,41:$VN}),o($Vz,[2,37]),o($Vz,[2,38]),o($VR,[2,39],{18:$VB,30:$VC,31:$VD,32:$VE,35:$VH,36:$VI,37:$VJ,38:$VK,41:$VN}),o($VR,[2,40],{18:$VB,30:$VC,31:$VD,32:$VE,35:$VH,36:$VI,37:$VJ,38:$VK,41:$VN}),o($VS,[2,41],{18:$VB,30:$VC,31:$VD,32:$VE,41:$VN}),o($VS,[2,42],{18:$VB,30:$VC,31:$VD,32:$VE,41:$VN}),o($VS,[2,43],{18:$VB,30:$VC,31:$VD,32:$VE,41:$VN}),o($VS,[2,44],{18:$VB,30:$VC,31:$VD,32:$VE,41:$VN}),o([5,6,9,17,19,21,23,39,46,48,49,50,51,52,53,54,55,56,57,58,59],[2,45],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,40:$VM,41:$VN}),o([5,6,9,17,19,21,23,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59],[2,46],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,41:$VN}),o($Vz,[2,47]),{18:$VB,21:[1,138],30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN},o($Vz,[2,49]),o($Vz,[2,50]),o($Vz,[2,51]),o($Vz,[2,52]),o($VT,[2,21]),o($VT,[2,23],{24:[1,139]}),o($VA,[2,53],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,54],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,55],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,56],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,57],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,58],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,59],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,60],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,61],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,62],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,63],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,64],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VA,[2,65],{18:$VB,30:$VC,31:$VD,32:$VE,33:$VF,34:$VG,35:$VH,36:$VI,37:$VJ,38:$VK,39:$VL,40:$VM,41:$VN}),o($VT,[2,20]),o($VT,[2,22])],\r\ndefaultActions: {25:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\nconst barrasnodo= require(\"./Analizador/Instrucciones/BarrasNodo\")\r\nconst identificador= require(\"./Analizador/Expresiones/Identificador\");\r\nconst CErrores= require(\"./Analizador/Excepciones/Errores\")\r\nconst CNodoErrores= require(\"./Analizador/Excepciones/NodoErrores\")\r\nconst inicio = require(\"../../componentes/contenido-inicio/contenido-inicio.component\")\r\nconst selectroot= require(\"./Analizador/Instrucciones/SelectRoot\")\r\nconst todo = require(\"./Analizador/Instrucciones/todo\")\r\nconst atributosimple = require(\"./Analizador/Instrucciones/AtributosSimples\")\r\nconst atributosexpresion = require(\"./Analizador/Instrucciones/AtributosExpresion\")\r\nconst atributospredicado = require(\"./Analizador/Instrucciones/AtributosPredicado\")\r\nconst predicado = require(\"./Analizador/Instrucciones/Predicados\")\r\nconst arreglos = require(\"./Analizador/Instrucciones/Arreglos\")\r\nconst parentesis= require(\"./Analizador/Expresiones/ParentesisExpresion\");\r\nconst axes=require(\"./Analizador/Funciones/Axes\")\r\nconst especiales= require(\"./Analizador/Funciones/Especiales\")\r\nconst nativo= require(\"./Analizador/Expresiones/Nativo\");\r\nconst Tipo= require(\"./Analizador/Simbolos/Tipo\");\r\nconst aritmetica= require(\"./Analizador/Expresiones/Aritmetica\");\r\nconst logica= require(\"./Analizador/Expresiones/Logica\");\r\nconst relacional= require(\"./Analizador/Expresiones/Relacional\");\r\nconst instrucciones= require(\"./Analizador/Abstracto/Instrucciones\")\r\n\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:// comentario simple línea\r\nbreak;\r\ncase 2:// comentario multiple líneas\r\nbreak;\r\ncase 3:return 48\r\nbreak;\r\ncase 4:return 52\r\nbreak;\r\ncase 5:return 54\r\nbreak;\r\ncase 6:return 58\r\nbreak;\r\ncase 7:return 26\r\nbreak;\r\ncase 8:return 29\r\nbreak;\r\ncase 9:return 28\r\nbreak;\r\ncase 10:return 46\r\nbreak;\r\ncase 11:return 49        \r\nbreak;\r\ncase 12:return 50\r\nbreak;\r\ncase 13:return 51\r\nbreak;\r\ncase 14:return 53\r\nbreak;\r\ncase 15:return 55\r\nbreak;\r\ncase 16:return 56\r\nbreak;\r\ncase 17:return 57\r\nbreak;\r\ncase 18:return 59\r\nbreak;\r\ncase 19:return 42\r\nbreak;\r\ncase 20:return 43\r\nbreak;\r\ncase 21:return 44\r\nbreak;\r\ncase 22:return 45\r\nbreak;\r\ncase 23:return 39\r\nbreak;\r\ncase 24:return 40\r\nbreak;\r\ncase 25:return 41\r\nbreak;\r\ncase 26:return 32\r\nbreak;\r\ncase 27:return 19\r\nbreak;\r\ncase 28:return 15;\r\nbreak;\r\ncase 29:return 25;\r\nbreak;\r\ncase 30:return 'DECIMAL';\r\nbreak;\r\ncase 31:return 27\r\nbreak;\r\ncase 32:return 9\r\nbreak;\r\ncase 33:return 36\r\nbreak;\r\ncase 34:return 38\r\nbreak;\r\ncase 35:return 35\r\nbreak;\r\ncase 36:return 37\r\nbreak;\r\ncase 37:return 'INTERROGACION'\r\nbreak;\r\ncase 38:return 33\r\nbreak;\r\ncase 39:return 22\r\nbreak;\r\ncase 40:return 23\r\nbreak;\r\ncase 41:return 20\r\nbreak;\r\ncase 42:return 21\r\nbreak;\r\ncase 43:return 24\r\nbreak;\r\ncase 44:return 6         \r\nbreak;\r\ncase 45:return 31\r\nbreak;\r\ncase 46:return 30\r\nbreak;\r\ncase 47:return 18 /* SELECTALL TAMBIEN*/\r\nbreak;\r\ncase 48:return 33\r\nbreak;\r\ncase 49:return 34\r\nbreak;\r\ncase 50:return 47\r\nbreak;\r\ncase 51:return 17\r\nbreak;\r\ncase 52:return 5\r\nbreak;\r\ncase 53:inicio.listaErrores.push(new CNodoErrores.default(\"Lexico\",\"No se esperaba el caracter: \"+yy_.yytext,yy_.yylloc.first_line,yy_.yylloc.first_column)); console.log(\"Lexico, No se esperaba el caracter: \"+yy_.yytext +\" Linea: \"+ yy_.yylloc.first_line + \"Columna: \" + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:\\/\\/.*)/i,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i,/^(?:ancestor-or-self\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:following-sibling\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:([0-9]+(\\.[0-9]+)?))/i,/^(?:((\"(\\\\\"|[^\"]|\\n)*\")))/i,/^(?:(('[^']*')))/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:child\\b)/i,/^(?:descendant\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding\\b)/i,/^(?:self\\b)/i,/^(?:last\\b)/i,/^(?:position\\b)/i,/^(?:node\\b)/i,/^(?:text\\b)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:div\\b)/i,/^(?:@)/i,/^(?:([a-zA-Z])[a-zA-Z0-9_!#$%&(),.\\*\\^Ññáéíúó]*)/i,/^(?:\"[^\\\"]*\")/i,/^(?:[0-9]+(\\.[0-9]+)\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:\\/)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\?)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:,)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:=)/i,/^(?:!=)/i,/^(?::)/i,/^(?:\\.)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = GramaticaXPath;\r\nexports.Parser = GramaticaXPath.Parser;\r\nexports.parse = function () { return GramaticaXPath.parse.apply(GramaticaXPath, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport nodoAST from 'src/app/Backend/XML/Analizador/Abstracto/nodoAST';\r\nimport Objeto from 'src/app/Backend/XML/Analizador/Expresiones/Objeto';\r\n//import Simbolo from 'src/app/Backend/XPATH/Analizador/Simbolos/Simbolo';\r\n//import tablaSimbolos from 'src/app/Backend/XPATH/Analizador/Simbolos/tablaSimbolos';\r\nimport * as vis from 'vis';\r\n@Component({\r\n  selector: 'app-arbol-ast',\r\n  templateUrl: './arbol-ast.component.html',\r\n  styleUrls: ['./arbol-ast.component.css']\r\n})\r\n\r\nexport class ArbolASTComponent implements OnInit {\r\n  //**desde aqui vro */\r\n  contador=1;\r\n  cuerpo='';\r\n  dataSource = '';\r\n  nodes = null;\r\n  edges = null;\r\n  network = null;\r\n  directionInput = document.getElementById(\"direction\");\r\n  constructor() { }\r\n  c = 0;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.destroy();\r\n    this.nodes = [];\r\n    this.edges = [];\r\n    var connectionCount = [];\r\n    let info = window.localStorage.getItem('simbolos');\r\n    let contenido:nodoAST = <nodoAST>JSON.parse(info);\r\n    console.log(contenido)\r\n\r\n    \r\n    var nivel = 0;\r\n    this.nodes.push({id: this.c, label: this.getValor(contenido), nivel:nivel})\r\n    this.nodes[this.c][\"level\"]=nivel;\r\n    var hijos = this.recorrerAST(this.c,contenido,nivel);\r\n    console.log(hijos)\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes.push({id: nodo.id, label: nodo.label})\r\n    }\r\n    for (let enlace of hijos.enlaces){\r\n      this.edges.push({from: enlace.id1, to: enlace.id2})\r\n    }\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes[nodo.id][\"level\"]=nodo.nivel;\r\n    }\r\n\r\n   \r\n    var container = document.getElementById(\"mynetwork\");\r\n    var data = {\r\n      nodes: this.nodes,\r\n      edges: this.edges,\r\n    };\r\n\r\n    var options = {\r\n      nodes:{// Control de nodos\r\n        borderWidth: 2,//Ajuste de ancho de borde de nodo\r\n        size: 30,//Haga clic en la configuración de ancho cuando esté seleccionado,\r\n        color: {\r\n            border: '#46304E',//Configuración de color del borde\r\n            background:'#D297E9',\r\n        },\r\n        font:{\r\n          color:\"#000000\",\r\n          face: 'Century Gothic'\r\n          }\r\n    },\r\n      edges: {\r\n        smooth: {\r\n          type: \"cubicBezier\",\r\n          forceDirection: \"vertical\",\r\n          roundness: 0.4,\r\n        }\r\n      },\r\n      layout: {\r\n        randomSeed: undefined,\r\n        improvedLayout:true,\r\n\r\n        hierarchical: {\r\n          \r\n          direction: \"UD\",\r\n          sortMethod: \"hubsize\"\r\n        },\r\n      },\r\n      \r\n      physics: false,\r\n    };\r\n    this.network = new vis.Network(container, data, options);\r\n\r\n    this.network.on(\"select\", function (params) {\r\n      document.getElementById(\"selection\").innerText =\r\n        \"Selection: \" + params.nodes;\r\n    });\r\n\r\n\r\n\r\n\r\n    let registros:Objeto[] = [];\r\n    \r\n  \r\n \r\n  }\r\n  \r\n  destroy() {\r\n    if (this.network !== null) {\r\n      this.network.destroy();\r\n      this.network = null;\r\n    }\r\n  }\r\n  recorrerAST(padre:number, nPadre:nodoAST, nivel:number)\r\n    {\r\n      var arr = {nodos:[],enlaces:[]}\r\n      for(let hijo of this.getHijos(nPadre))\r\n      {\r\n        nivel++\r\n        this.c++\r\n        arr.enlaces.push({id1:padre, id2:this.c})\r\n        arr.nodos.push({id:this.c, label:this.getValor(hijo), nivel:nivel})\r\n\r\n        var resultado = this.recorrerAST(this.c,hijo,nivel);\r\n        arr.enlaces = arr.enlaces.concat(resultado.enlaces);\r\n        arr.nodos = arr.nodos.concat(resultado.nodos);\r\n      }\r\n      return arr\r\n    }\r\n    getValor(nodo): string {\r\n      return nodo.valor;\r\n    }\r\n    getHijos(nodo): Array<nodoAST> {\r\n      return nodo.listaNodos;\r\n    }\r\n}\r\n","\r\n    \r\n\r\n\r\n<div id=\"mynetwork\"></div>\r\n","export default class Tipo {\r\n  private tipos: tipoDato;\r\n  constructor(tipos: tipoDato) {\r\n    this.tipos = tipos;\r\n  }\r\n  public getTipo(): tipoDato {\r\n    return this.tipos;\r\n  }\r\n  public setTipo(tipo: tipoDato): void {\r\n    this.tipos = tipo;\r\n  }\r\n  public igual(compara: Tipo) {\r\n    return (this.tipos = compara.tipos);\r\n  }\r\n}\r\n\r\nexport enum tipoDato {\r\n  CADENA,\r\n  OBJETO,\r\n  QUOTE,\r\n  ATRIBUTO,\r\n  FUNCION\r\n}\r\n","export default class Tipo {\r\n  private tipos: tipoDato;\r\n  constructor(tipos: tipoDato) {\r\n    this.tipos = tipos;\r\n  }\r\n  public getTipo(): tipoDato {\r\n    return this.tipos;\r\n  }\r\n  public setTipo(tipo: tipoDato): void {\r\n    this.tipos = tipo;\r\n  }\r\n  public igual(compara: Tipo) {\r\n    return (this.tipos = compara.tipos);\r\n  }\r\n}\r\n\r\nexport enum tipoDato {\r\n  CADENA,\r\n  OBJETO,\r\n  ENTERO,\r\n  DECIMAL,\r\n  BOOLEANO,\r\n  CARACTER,\r\n  SELECT,\r\n  ATRIBUTO,\r\n  FUNCION,\r\n  CICLOFOR,\r\n  WHERE,\r\n  ORDERBY\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend';\r\n}\r\n","<app-sidebar></app-sidebar>","import tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport { reporteTabla } from '../Reportes/reporteTabla';\r\nimport obtenerValor from '../Reportes/cambiarTipo';\r\nimport Atributo from 'src/app/Backend/XML/Analizador/Expresiones/Atributo';\r\nexport default class Arbol {\r\n  private instrucciones: Array<Instruccion[]>;\r\n  private NodoErrores: Array<NodoErrores>;\r\n  private funciones: Array<Instruccion>;\r\n  public listaSimbolos: Array<reporteTabla>;\r\n\r\n  public getSimbolos(): Array<reporteTabla> {\r\n    return this.listaSimbolos;\r\n  }\r\n  public actualizarTabla(\r\n    identificador: string,\r\n    valor: string,\r\n    linea: string,\r\n    entorno: string,\r\n    columna: string\r\n  ): boolean {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (\r\n        elemento.getIdentificador().toString() == identificador.toLowerCase() &&\r\n        elemento.getEntorno().toString() == entorno.toString()\r\n      ) {\r\n        elemento.setValor(valor);\r\n        elemento.setLinea(linea);\r\n        elemento.setColumna(columna);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  public BuscarTipo(identificador: string): string {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador() == identificador.toLowerCase()) {\r\n        return elemento.getForma().toString();\r\n      }\r\n    }\r\n    return 'as';\r\n  }\r\n\r\n  \r\n\r\n \r\n  public getfunciones(): Array<Instruccion> {\r\n    return this.funciones;\r\n  }\r\n  public setfunciones(value: Array<Instruccion>) {\r\n    this.funciones = value;\r\n  }\r\n  public getNodoErrores(): Array<NodoErrores> {\r\n    return this.NodoErrores;\r\n  }\r\n  public setNodoErrores(value: Array<NodoErrores>) {\r\n    this.NodoErrores = value;\r\n  }\r\n\r\n  public getinstrucciones(): Array<Instruccion[]> {\r\n    return this.instrucciones;\r\n  }\r\n  public setinstrucciones(value: Array<Instruccion[]>) {\r\n    this.instrucciones = value;\r\n  }\r\n  private consola: String = '';\r\n  public getconsola(): String {\r\n    return this.consola;\r\n  }\r\n  public setconsola(value: String) {\r\n    this.consola = value;\r\n  }\r\n  public actualizaConsola(uptodate: String) {\r\n    this.consola = `${this.consola}${uptodate}\\n`;\r\n  }\r\n  private tablaGlobal: tablaSimbolos;\r\n  public gettablaGlobal(): tablaSimbolos {\r\n    return this.tablaGlobal;\r\n  }\r\n  public settablaGlobal(value: tablaSimbolos) {\r\n    this.tablaGlobal = value;\r\n  }\r\n\r\n  constructor(instrucciones: Array<Instruccion[]>) {\r\n    this.instrucciones = instrucciones;\r\n    this.consola = '';\r\n    this.tablaGlobal = new tablaSimbolos();\r\n    this.NodoErrores = new Array<NodoErrores>();\r\n    this.funciones = new Array<Instruccion>();\r\n    this.listaSimbolos = new Array<reporteTabla>();\r\n  }\r\n}\r\n","import Simbolo from './Simbolo';\r\nimport Tipo, { tipoDato } from './Tipo';\r\n\r\nexport default class tablaSimbolos {\r\n  public tablaAnterior: tablaSimbolos | any;\r\n  private tipoDato: Tipo;\r\n  public tablaActual: Array<Simbolo>;\r\n  private nombreDato: String;\r\n\r\n  private list_asignaciones = []\r\n\r\n  constructor(anterior?: tablaSimbolos) {\r\n    this.tablaAnterior = anterior;\r\n    this.tablaActual = new Array<Simbolo>();\r\n    this.tipoDato = new Tipo(tipoDato.CADENA);\r\n    this.nombreDato = '';\r\n  }\r\n\r\n  public getAnterior() {\r\n    return this.tablaAnterior;\r\n  }\r\n  public setAnterior(anterior: tablaSimbolos) {\r\n    this.tablaAnterior = anterior;\r\n  }\r\n  public getTabla() {\r\n    return this.tablaActual;\r\n  }\r\n  public setTabla(Tabla: Array<Simbolo>) {\r\n    this.tablaActual = Tabla;\r\n  }\r\n  public setVariable(simbolo: Simbolo) {\r\n    /*\r\n    for (let e: tablaSimbolos = this; e != null; e = e.getAnterior()) {\r\n      let encontrado: Simbolo = null;\r\n      for(let h of e.getTabla()){\r\n        if(h.getidentificador()==simbolo.getidentificador()){\r\n          encontrado=h;\r\n          break;\r\n        }\r\n      }\r\n           \r\n      if (encontrado != null) {\r\n        return `La variable existe actualmente`;\r\n      }\r\n      break;\r\n    }\r\n    */\r\n    this.tablaActual.push(simbolo);\r\n    return `creada con exito`;\r\n  }\r\n\r\n  public getVariable(id: String) {\r\n    for (let e: tablaSimbolos = this; e != null; e = e.getAnterior()) {\r\n      let encontrado: Simbolo = null;\r\n      for (let h of e.getTabla()) {\r\n        if (h.getidentificador() == id) {\r\n          encontrado = h;\r\n          break;\r\n        }\r\n      }\r\n      if (encontrado != null) {\r\n        return encontrado;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public getNombre(): String {\r\n    return this.nombreDato;\r\n  }\r\n\r\n  public setNombre(nombre: String) {\r\n    this.nombreDato = nombre;\r\n  }\r\n\r\n  public pushListAsignacion(temp1, temp2) {\r\n    this.list_asignaciones.push({ temp1: temp1, temp2: temp2 })\r\n  }\r\n\r\n  public thisDeclarationExist(temp1, temp2): String {\r\n    for (let asignacion of this.list_asignaciones) {\r\n      if (asignacion.temp1 == temp2 && asignacion.temp2 == temp1) {\r\n        return \"\"\r\n      }\r\n    }\r\n\r\n    this.pushListAsignacion(temp1, temp2)\r\n    return temp1 + \"=\" + temp2\r\n  }\r\n\r\n}\r\n//ARREGLO DE SOLO ID DE METODOS\r\n","\r\n\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport CondicionSimple from \"./CondicionSimple\";\r\nimport SimboloXQuery from 'src/app/Backend/XQUERY/Analizador/Simbolos/Simbolo';\r\nimport BarrasNodo from \"./BarrasNodo\";\r\nimport Condicion from \"./Condicion\";\r\nimport Variable from \"../Expresiones/Variable\";\r\n\r\nexport default class ForSimple extends Instruccion {\r\n\r\n    public consulta: Instruccion;\r\n    public respuesta: Instruccion | String;\r\n    public thewhere: Instruccion;\r\n    public theorderby: Instruccion;\r\n    public cadena: string;\r\n    public consolita: any;\r\n    public variableanterior: string;\r\n\r\n    constructor(consulta: Instruccion, respuesta: Instruccion | String, linea: number, columna: number, thewhere?: Instruccion, theorderby?: Instruccion) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.consulta = consulta;\r\n        this.respuesta = respuesta;\r\n        this.thewhere = thewhere;\r\n        this.theorderby = theorderby;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        let c = 0;\r\n        let searchconsulta;\r\n        let sim;\r\n        arbol.codigo3d.push(\"// *****for*****\")\r\n        let etiquetaFor = arbol.getEtiqueta();\r\n        arbol.codigo3d.push(`L${etiquetaFor}:`)\r\n        if (this.consulta instanceof Array) {\r\n            this.consulta.forEach(cons => {\r\n                if (cons instanceof CondicionSimple) {\r\n                    let temconsulta = cons.interpretar(arbol, tabla, tablaxml)\r\n                    temconsulta.consulta.forEach(element => {\r\n                        c++;\r\n                        if (element instanceof BarrasNodo) {\r\n                            var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n\r\n                            if (resultador instanceof tablaSimbolosxml) {\r\n                                tablaxml = resultador\r\n                                if (c == temconsulta.consulta.length) {\r\n                                    if (arbol != null) {\r\n                                        sim = new Simbolo(new Tipo(tipoDato.FUNCION), temconsulta.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                        tabla.setVariable(sim)\r\n                                        var buscar = tabla.getVariable(temconsulta.variables);\r\n\r\n                                        if (buscar != null) {\r\n                                            searchconsulta = buscar.getvalor()\r\n\r\n                                            return buscar\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            } else if (resultador instanceof Array) {\r\n                                sim = new Simbolo(new Tipo(tipoDato.FUNCION), temconsulta.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                tabla.setVariable(sim)\r\n                                var buscar = tabla.getVariable(temconsulta.variables.toString());\r\n                                if (buscar != null) {\r\n                                    searchconsulta = buscar.getvalor()\r\n                                    return buscar\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        console.log(this.variableanterior)\r\n        c = 0;\r\n        let etiquetaV = arbol.getEtiqueta();\r\n        let etiquetaF = arbol.getEtiqueta();\r\n        if (this.thewhere != null) {\r\n            let cuando;\r\n            if (this.thewhere instanceof CondicionSimple) {\r\n                cuando = this.thewhere.interpretar(arbol, tabla, tablaxml);\r\n                cuando.consulta.forEach(element => {\r\n                    c++;\r\n                    if (element instanceof BarrasNodo) {\r\n                        var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n                        if (resultador instanceof tablaSimbolosxml) {\r\n                            tablaxml = resultador\r\n                            if (c == cuando.consulta.length) {\r\n                                if (arbol != null) {\r\n                                    var buscar = tabla.getVariable(cuando.variables);\r\n                                    if (buscar != null) {\r\n                                        buscar.setvalor(resultador)\r\n                                        return buscar\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else if (resultador instanceof Array) {\r\n                            arbol.etiquetasS.push(\"L\" + etiquetaF);\r\n\r\n                            arbol.codigo3d.push(`if(${cuando.variables}==1) goto L${etiquetaV};`)\r\n                            arbol.codigo3d.push(`goto L${etiquetaF};`)\r\n\r\n                            arbol.codigo3d.push(`L${etiquetaV}:`)\r\n                            sim = new Simbolo(new Tipo(tipoDato.WHERE), cuando.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                            tabla.setVariable(sim)\r\n                            var buscar = tabla.getVariable(cuando.variables.toString());\r\n                            if (buscar != null) {\r\n                                searchconsulta = buscar.getvalor()\r\n                                return buscar\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            } else if (this.thewhere instanceof Condicion) {\r\n\r\n            } else {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (this.respuesta != null) {\r\n            arbol.codigo3d.push(`goto L${etiquetaF};`)\r\n            if (this.respuesta instanceof Variable) {\r\n                var buscar = tabla.getVariable(this.respuesta.identificador);\r\n                if (buscar != null) {\r\n                    return buscar.getvalor()\r\n                }\r\n            } else\r\n                if (this.respuesta as string) {\r\n                    var buscar = tabla.getVariable(this.respuesta.toString());\r\n                    if (buscar != null) {\r\n                        return buscar.getvalor()\r\n                    }\r\n                }\r\n        }\r\n        /* if(this.theorderby!=null){\r\n \r\n         }\r\n \r\n         if(this.respuesta!=null){\r\n             this.consolita='';\r\n             if(this.respuesta instanceof Array){\r\n                 console.log(\"Aqui vendra si viene una consulta\")\r\n             }else{\r\n                 console.log(\"Entra aca si solo es una variable\")\r\n                  if (searchconsulta instanceof Array) {\r\n                     console.log(\"aca viene la magic\")\r\n                     searchconsulta.forEach(element => {\r\n                         this.respuesta=this.consolita;\r\n                         this.consolita += <string>element.getvalor() + \"\\n\";\r\n                         return this.consolita;\r\n                         \r\n                     });\r\n                 } else if (searchconsulta instanceof tablaSimbolosxml) {\r\n                     if (arbol != null) {\r\n                         this.consolita += this.recorrerTabla(searchconsulta, arbol);\r\n                         this.consolita += \"\\n\"\r\n                         this.respuesta=this.consolita\r\n                         return this.consolita;\r\n                     }\r\n \r\n                 }else{\r\n                     console.log(\"Entra aca si solo es una variable\")\r\n                     searchconsulta.forEach(element => {\r\n                         this.respuesta=this.consolita;\r\n                         this.consolita += <string>element.getvalor() + \"\\n\";\r\n                         return this.consolita;\r\n                         \r\n                     });\r\n \r\n                 }\r\n             }\r\n         }\r\n     }\r\n \r\n \r\n \r\n     recorrerTabla(t: tablaSimbolosxml, arbol: Arbol) {\r\n         var salida = ''\r\n         for (var key of t.tablaActual) {\r\n \r\n \r\n             let objetos = key.getvalor();\r\n            this.consolita+=<string>objetos + \"\\n\";;\r\n \r\n         }\r\n         return this.consolita;\r\n */\r\n\r\n    }\r\n\r\n\r\n    public getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css'],\r\n})\r\nexport class InicioComponent implements OnInit {\r\n  ngOnInit() {}\r\n}\r\n","<app-tabsinicio></app-tabsinicio>","\r\nimport NodoErrores from \"src/app/Backend/XML/Analizador/Excepciones/NodoErrores\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class Asignacion extends Instruccion {\r\n    private id: string;\r\n    private valor: Instruccion;\r\n\r\n    constructor(id: string, valor: Instruccion, linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.id = id;\r\n        this.valor = valor;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var simbolo = tabla.getVariable(this.id);\r\n\r\n        if (simbolo == null) return new NodoErrores(\"Semantico\", \"Variable no encontrada\", this.fila, this.columna);\r\n        var value: any;\r\n        value = null;\r\n        value = this.valor.interpretar(arbol, tabla, tablaxml)\r\n\r\n            \r\n        simbolo.setvalor(value);\r\n        return null;    \r\n    }\r\n    getNodoAST(): nodoAST {\r\n        var nodo=new nodoAST(\"Asignacion\");\r\n        nodo.agregarHijo(this.id);\r\n        nodo.agregarHijo(\"=\");\r\n        nodo.agregarHijoAST(this.valor.getNodoAST())\r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n }\r\n","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport BarrasNodo from \"src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport CondicionSimple from \"./CondicionSimple\";\r\n\r\nexport default class If extends Instruccion {\r\n    private condicion: Instruccion;\r\n    private insThen: Array<Instruccion> | null;\r\n    private insElse: Instruccion | null;\r\n\r\n    constructor(condicion: Instruccion, linea: number, columna: number, insThen: Array<Instruccion>, insElse?: Instruccion) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.condicion = condicion;\r\n        this.insThen = insThen;\r\n        this.insElse = insElse;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        let c = 0;\r\n        let sym;\r\n        let searchconsulta;\r\n\r\n                if (this.condicion instanceof CondicionSimple) {\r\n                    let thecondi = this.condicion.interpretar(arbol, tabla, tablaxml);\r\n                        thecondi.consulta.forEach(element => {\r\n                        c++\r\n                        if (element instanceof BarrasNodo) {\r\n                            var resultador = element.interpretar(arbol, tabla, tablaxml);\r\n                            if (resultador instanceof tablaSimbolosxml) {       \r\n                                tablaxml = resultador\r\n                                if (c == thecondi.consulta.length) {\r\n                                    if (arbol != null) {\r\n                                        sym = new Simbolo(new Tipo(tipoDato.FUNCION), thecondi.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                        tabla.setVariable(sym);\r\n                                        var buscar = tabla.getVariable(thecondi.variables);\r\n\r\n                                        if (buscar != null) {\r\n                                            searchconsulta = buscar.getvalor()\r\n\r\n                                            return buscar\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resultador instanceof Array) {\r\n                                sym = new Simbolo(new Tipo(tipoDato.FUNCION), thecondi.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                tabla.setVariable(sym)\r\n                                var buscar = tabla.getVariable(thecondi.variables.toString());\r\n                                if (buscar != null) {\r\n                                    searchconsulta = buscar.getvalor()\r\n                                    return buscar\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n          \r\n        if(this.insThen!=null){\r\n            let Sentencia;\r\n            if (this.insThen instanceof CondicionSimple) {\r\n                Sentencia = this.insThen.interpretar(arbol, tabla, tablaxml);\r\n                Sentencia.consulta.forEach(element => {\r\n                    c++;\r\n                    if (element instanceof BarrasNodo) {\r\n                        var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n                        if (resultador instanceof tablaSimbolosxml) {\r\n                            tablaxml = resultador\r\n                            if (c == Sentencia.consulta.length) {\r\n                                if (arbol != null) {\r\n                                    var buscar = tabla.getVariable(Sentencia.variables);\r\n                                    if (buscar != null) {\r\n                                        buscar.setvalor(resultador)\r\n                                        return buscar\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else if (resultador instanceof Array) {\r\n                            sym = new Simbolo(new Tipo(tipoDato.WHERE), Sentencia.variables, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                            tabla.setVariable(sym)\r\n                            var buscar = tabla.getVariable(Sentencia.variables.toString());\r\n                            if (buscar != null) {\r\n                                searchconsulta = buscar.getvalor()\r\n                                return buscar\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n           \r\n            } else {\r\n                \r\n            }\r\n\r\n        }\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n\r\n\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Relacional extends Instruccion {\r\n\r\n    private expresion1: Instruccion;\r\n    private operando: String;\r\n    private expresion2: Instruccion;\r\n    constructor(expresion1:Instruccion,operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion1 = expresion1\r\n        this.operando=operando\r\n        this.expresion2= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        var operadorizq = this.expresion1.interpretar(arbol, tabla);\r\n        var operadorder = this.expresion2.interpretar(arbol, tabla);\r\n        if (operadorizq != null && operadorder != null) {\r\n            if (this.expresion1 instanceof Termino && this.expresion2 instanceof Termino) {\r\n                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n            }else {\r\n                if (operadorder.contenido != null && operadorizq.contenido != null) {\r\n                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                }else{\r\n                    if (operadorder.operadorder != null) {\r\n                        if (this.expresion1 instanceof Termino) {\r\n                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (operadorizq.operadorder != null) {\r\n                        if (this.expresion2 instanceof Termino) {\r\n                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Identificador from '../Expresiones/Identificador';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Especiales extends Instruccion {\r\n \r\n  public Funcion: string;\r\n  public Expresion: Instruccion\r\n  constructor(funcion: string, fila: number, columna: number) {\r\n\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.Funcion = funcion\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    var nodo= new nodoAST('FUNCION ESPECIAL'); //PADRE SELECT\r\n    var nodsBarras= new nodoAST(this.Funcion)\r\n    nodo.agregarHijoAST(nodsBarras)\r\n    \r\n    return nodo;\r\n  }\r\n  interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  \r\n}\r\n","import NodoErrores from \"./NodoErrores\";\r\n\r\nclass Errores extends Array<NodoErrores>{\r\n\r\n    constructor(err:NodoErrores){\r\n        super();\r\n      this.push(err);\r\n    }\r\n\r\n    public static add(err:NodoErrores){\r\n        this.prototype.push(err);\r\n    }\r\n\r\n    public static verificarerror():string{\r\n        if(this.prototype.length>0){\r\n            return \"Se Detectaron Errores de Compilacion\";\r\n        }\r\n        return \"Compilacion Sin Errores\";\r\n    }\r\n\r\n    public static geterror():string{\r\n        var cad:string=\"\";\r\n        cad+=\"<html>\\n\";\r\n            cad+=\"<header>\\n\";\r\n                cad+=\"<title>Reporte Errores</title>\\n\";\r\n            cad+=\"</header>\\n\";\r\n            cad+=\"<body background=\\\"gray\\\">\\n\";\r\n                cad+=\"<div align=\\\"center\\\">\\n\";\r\n                    cad+=\"<h1>Reporte de Errores de Compilacion</h1>\\n\";\r\n                    cad+=\"<table border=\\\"2\\\" align=\\\"center\\\">\\n\";\r\n                        cad+=\"<tr>\\n\";\r\n                            cad+=\"<th>TIPO DE ERROR</th><th>DESCRIPCION</th><th>LINEA</th>\\n\";\r\n                        cad+=\"</tr>\\n\";\r\n                        for(var i=0; i<this.prototype.length;i++){\r\n                            cad+=\"<tr>\\n\";\r\n                                cad+=\"<td>\"+this.prototype[i].getTipoError()+\"</td><td>\"+\r\n                                this.prototype[i].getDesc()+\"</td><td>\"+\r\n                                this.prototype[i].getFila()+\"</td><td>\"+\r\n                                this.prototype[i].getcolumna()+\"</td>\\n\";\r\n                            cad+=\"</tr>\\n\";\r\n                        }\r\n                    cad+=\"</table>\\n\";\r\n                cad+=\"</div>\\n\";\r\n            cad+=\"</body>\\n\";\r\n        cad+=\"</html>\\n\";\r\n\r\n        return cad;\r\n    }\r\n\r\n    public static clear(){\r\n        while(this.prototype.length>0){\r\n            this.prototype.pop();\r\n        }\r\n    }\r\n}\r\nexport{Errores};","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Etiqueta extends Instruccion {\r\n\r\n    public identificador: string;\r\n    constructor(identificador: string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.identificador = identificador;\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n      return this\r\n    }\r\n\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport NodoErrores from \"../Errores/NodoErrores\";\r\nimport { reporteOp } from \"../Reportes/reporteOp\";\r\n\r\nexport default class Arbol {\r\n  private instrucciones: Array<Instruccion[]>;\r\n  private NodoErrores: Array<NodoErrores>;\r\n  private funciones: Array<Instruccion>;\r\n  public listaSimbolos: Array<reporteOp>;\r\n  public getSimbolos(): Array<reporteOp> {\r\n    return this.listaSimbolos;\r\n  }\r\n  public setReporte(instruccion:reporteOp){\r\n    this.listaSimbolos.push(instruccion)\r\n  }\r\n  \r\n \r\n  public getfunciones(): Array<Instruccion> {\r\n    return this.funciones;\r\n  }\r\n  public setfunciones(value: Array<Instruccion>) {\r\n    this.funciones = value;\r\n  }\r\n  public getNodoErrores(): Array<NodoErrores> {\r\n    return this.NodoErrores;\r\n  }\r\n  public setNodoErrores(value: Array<NodoErrores>) {\r\n    this.NodoErrores = value;\r\n  }\r\n\r\n  public getinstrucciones(): Array<Instruccion[]> {\r\n    return this.instrucciones;\r\n  }\r\n  public setinstrucciones(value: Array<Instruccion[]>) {\r\n    this.instrucciones = value;\r\n  }\r\n  private consola: String = '';\r\n  public getconsola(): String {\r\n    return this.consola;\r\n  }\r\n  public setconsola(value: String) {\r\n    this.consola = value;\r\n  }\r\n  public actualizaConsola(uptodate: String) {\r\n    this.consola = `${this.consola}${uptodate}\\n`;\r\n  }\r\n  private tablaGlobal: tablaSimbolos;\r\n  public gettablaGlobal(): tablaSimbolos {\r\n    return this.tablaGlobal;\r\n  }\r\n  public settablaGlobal(value: tablaSimbolos) {\r\n    this.tablaGlobal = value;\r\n  }\r\n\r\n  constructor(instrucciones: Array<Instruccion[]>) {\r\n    this.instrucciones = instrucciones;\r\n    this.consola = '';\r\n    this.tablaGlobal = new tablaSimbolos();\r\n    this.NodoErrores = new Array<NodoErrores>();\r\n    this.funciones = new Array<Instruccion>();\r\n    this.listaSimbolos = new Array<reporteOp>();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { InicioComponent } from './paginas/inicio/inicio.component';\r\nimport { ErroresComponent } from './paginas/errores/errores.component';\r\nimport { TablaSimbolosComponent } from './paginas/tabla-simbolos/tabla-simbolos.component';\r\nimport { ArbolASTComponent } from './paginas/arbol-ast/arbol-ast.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { SideBarComponent } from './componentes/side-bar/side-bar.component';\r\nimport { TabsinicioComponent } from './componentes/tabsinicio/tabsinicio.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { ContenidoInicioComponent } from './componentes/contenido-inicio/contenido-inicio.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { AceEditorComponent } from 'ng2-ace-editor';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { GramaticalReportComponent } from './paginas/gramatical-report/gramatical-report.component';\r\nimport { AstDescComponent } from './paginas/ast-desc/ast-desc.component';\r\nimport { XpathAscAstComponent } from './paginas/xpath-asc-ast/xpath-asc-ast.component';\r\nimport { ReporteOptimizacionComponent } from './paginas/reporte-optimizacion/reporte-optimizacion.component';\r\nimport { TablasimbolosXqueryComponent } from './paginas/tablasimbolos-xquery/tablasimbolos-xquery.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InicioComponent,\r\n    ErroresComponent,\r\n    TablaSimbolosComponent,\r\n    ArbolASTComponent,\r\n    SideBarComponent,\r\n    TabsinicioComponent,\r\n    ContenidoInicioComponent,\r\n    GramaticalReportComponent,\r\n    AstDescComponent,\r\n    XpathAscAstComponent,\r\n    ReporteOptimizacionComponent,\r\n    TablasimbolosXqueryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    CodemirrorModule,\r\n    BrowserAnimationsModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Print extends Instruccion {\r\n    public Expresion: Instruccion[];\r\n    constructor(expresion:Instruccion[], fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Expresion= expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\nimport Simbolo from 'src/app/Backend/XML/Analizador/Simbolos/Simbolo';\r\n\r\n\r\nexport default class Todo extends Instruccion {\r\n    public Operacion: string;\r\n    private cadena: string;\r\n    constructor(select: string, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Operacion = select\r\n    }\r\n    \r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        \r\n        return this.Operacion\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo = new nodoAST(this.Operacion); //PADRE SELECT    \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    CollectAtribute(key: Simbolo, cad: string, salidas: tablaSimbolos) {\r\n        if (key.getvalor().getTabla() != null) {\r\n            for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n                if (sim instanceof Simbolo) {\r\n                    if (sim.getAtributo().size != 0) {\r\n                        sim.getAtributo().forEach(element => {\r\n                            this.cadena += element.trim()+\"\\n\"\r\n                        });\r\n                    }\r\n                    if (sim.getvalor() instanceof tablaSimbolos) {\r\n                        this.CollectAtribute(sim,this.cadena, salidas)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export default class NodoErrores {\r\n  private tipoError: String;\r\n  private desc: String;\r\n  private fila: number;\r\n  private columna: number;\r\n  public getDesc(): String {\r\n    return this.desc;\r\n  }\r\n  public getTipoError(): String {\r\n    return this.tipoError;\r\n  }\r\n  public getcolumna(): number {\r\n    return this.columna;\r\n  }\r\n  public getFila(): number {\r\n    return this.fila;\r\n  }\r\n  constructor(tipo: String, desc: String, fila: number, columna: number) {\r\n    this.tipoError = tipo;\r\n    this.desc = desc;\r\n    this.fila = fila;\r\n    this.columna = columna;\r\n  }\r\n  public returnError(): String {\r\n    return (\r\n      'Se obtuvo: ' +\r\n      this.tipoError +\r\n      ' desc:{' +\r\n      this.desc +\r\n      '} en la fila: ' +\r\n      this.fila +\r\n      ' en la columna: ' +\r\n      this.columna +\r\n      '\\n'\r\n    );\r\n  }\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class Unset extends Instruccion {\r\n    public Expresion: Instruccion;\r\n    constructor(expresion:Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Expresion= expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // SI ES DE TIPO TERMINO \r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { listaErrores } from \"src/app/componentes/contenido-inicio/contenido-inicio.component\";\r\nimport NodoErrores from \"../../XML/Analizador/Excepciones/NodoErrores\";\r\nimport tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Aritmetica from \"../Expresion/Aritmetica\";\r\nimport Bit from \"../Expresion/Bit\";\r\nimport Identificador from \"../Expresion/Identificador\";\r\nimport Logica from \"../Expresion/Logica\";\r\nimport Relacional from \"../Expresion/Relacional\";\r\nimport Termino from \"../Expresion/Termino\";\r\nimport Unario from \"../Expresion/Unario\";\r\nimport { reporteOp } from \"../Reportes/reporteOp\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class AsignacionEstructura extends Instruccion {\r\n\r\n    private Temporales: Instruccion;\r\n    private ListaCorchetes: Instruccion;\r\n    private Expresion: Instruccion;\r\n    constructor(termino: Instruccion, l_corchetes: Instruccion, expresion: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Temporales = termino\r\n        this.ListaCorchetes = l_corchetes\r\n        this.Expresion = expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // si es Temporal y si es expresion las instrucciones, ListaCorchetes tipo Instruccion\r\n        let idtemp = \"\"\r\n        let cadena = \"\"\r\n        if (this.Temporales != null) {\r\n            if (this.Temporales instanceof Termino) {\r\n                let a = this.Temporales.interpretar(arbol, tabla)\r\n                idtemp = a.contenido;\r\n                cadena += idtemp + \" \"\r\n\r\n            } else if (this.Temporales instanceof Identificador) {\r\n                let a = this.Temporales.interpretar(arbol, tabla)\r\n                idtemp = a.contenido;\r\n                cadena += idtemp + \" \"\r\n            }\r\n        }\r\n        if (this.ListaCorchetes != null) {\r\n            var stack = /\\[/gi;\r\n            if (this.ListaCorchetes instanceof Array) {\r\n                for (var a of this.ListaCorchetes) {\r\n                    let temporal: Termino = a\r\n                    let aux = temporal.interpretar(arbol, tabla);\r\n                    cadena += \"[\" + aux.contenido + \"] =\"\r\n                }\r\n            }\r\n        }\r\n        if (this.Expresion != null) {\r\n            if (this.Expresion instanceof Aritmetica) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                if (a.operadorder === \"0\" && a.operador === \"+\" || a.operadorder == 0 && a.operador === \"+\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 12\", idtemp + \"= \" + a.operadorizq + \"+0;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \";\"\r\n                } else if (a.operadorizq === \"0\" && a.operador === \"+\" || a.operadorizq == 0 && a.operador === \"+\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 12\", idtemp + \"= 0+\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorder + \";\"\r\n                } else if (a.operadorder === \"0\" && a.operador === \"-\" || a.operadorder == 0 && a.operador === \"-\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 13\", idtemp + \"=\" + a.operadorizq + \"-0;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \";\"\r\n                } else if (a.operadorizq === \"0\" && a.operador === \"-\" || a.operadorizq == 0 && a.operador === \"-\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 13\", idtemp + \"= 0-\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorder + \";\"\r\n                } else if (a.operadorder === \"1\" && a.operador === \"*\" || a.operadorder == 1 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 14\", idtemp + \"=\" + a.operadorizq + \"*1;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \";\"\r\n                } else if (a.operadorizq === \"1\" && a.operador === \"*\" || a.operadorizq == 1 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 14\", idtemp + \"= 1*\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorder + \";\"\r\n                } else if (a.operadorder === \"2\" && a.operador === \"*\" || a.operadorder == 2 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 16\", idtemp + \"=\" + a.operadorizq + \"*2;\", idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\"\r\n                } else if (a.operadorizq === \"2\" && a.operador === \"*\" || a.operadorizq == 2 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 16\", idtemp + \"= 2*\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \"+\" + a.operadorder + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\"\r\n                } else if (a.operadorder === \"0\" && a.operador === \"*\" || a.operadorder == 0 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 17\", idtemp + \"=\" + a.operadorizq + \"*0;\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + \"0;\"\r\n                } else if (a.operadorizq === \"0\" && a.operador === \"*\" || a.operadorizq == 0 && a.operador === \"*\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 17\", idtemp + \"= 0*\" + a.operadorder + \";\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + \"0;\"\r\n                } else if (a.operadorder === \"1\" && a.operador === \"/\" || a.operadorder == 1 && a.operador === \"/\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 15\", idtemp + \"=\" + a.operadorizq + \"/1;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + a.operadorizq + \";\"\r\n                } else if (a.operadorizq === \"0\" && a.operador === \"/\" || a.operadorizq == 0 && a.operador === \"/\") {\r\n                    let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 18\", idtemp + \"= 0/\" + a.operadorder + \";\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                    arbol.setReporte(report)\r\n                    return idtemp + \"=\" + \"0;\"\r\n                } else if (a.operadorder === \"0\" && a.operador === \"/\" || a.operadorder == 0 && a.operador === \"/\") {\r\n                    listaErrores.push(new NodoErrores(\"Lexico Optimizacion\",\"No se puede operar /0 \",this.fila, this.columna));\r\n                    return \"\"\r\n                } else if (a.operadorizq === \"1\" && a.operador === \"/\" || a.operadorder == 1 && a.operador === \"/\") {\r\n                    return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                } else {\r\n                    return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                }\r\n\r\n            } else if (this.Expresion instanceof Logica) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Relacional) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Bit) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Unario) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Identificador) {\r\n                //SE HACE OTRO PROCEDIMIENTO\r\n            } else if (this.Expresion instanceof Termino) {\r\n                //SE HACE OTRO PROCEDIMIENTO\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n}","import { Expression } from \"@angular/compiler\";\r\nimport Tipo, { tipoDato } from \"src/app/Backend/XQUERY/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\n\r\nexport default class Upper extends Instruccion {\r\n    public expresion: Instruccion;\r\n\r\n    constructor(expresion: Instruccion, linea: number, columna: number,) {\r\n        super(new Tipo(tipoDato.ENTERO), linea, columna);\r\n        this.expresion = expresion;\r\n\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if (this.expresion instanceof Instruccion) {\r\n            console.log(\"entre\")\r\n            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);\r\n            var resp = hola.toString();\r\n            var uper = resp.toUpperCase();\r\n            var val = this.Textocd3(arbol, hola.toString())\r\n            arbol.codigo3d.push(\"//***print****\")\r\n            let countprint = arbol.getContadort();\r\n            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);\r\n            arbol.codigo3d.push(\"//*****ToUpperCase******\");\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(`toUpperCase();`);\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(\"imprimirString();\");\r\n            arbol.codigo3d.push(`printf(\"%c\",10);`);\r\n            return uper;\r\n        }\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    Textocd3(arbol: Arbol, valor: String) {\r\n        let stackID = arbol.getSTACK();\r\n        let contadorID = arbol.getContadort(); //temporales\r\n        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);\r\n        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n        let data: string = valor + \"\";\r\n        let estado = 0;\r\n        for (let x = 0; x < data.length; x++) {\r\n            const iterator = data[x];\r\n            switch (estado) {\r\n                case 0: {\r\n                    if (iterator == \"\\\\\") { estado = 1; continue; }\r\n                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n                    arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                    arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n                    arbol.codigo3d.push(\"guardarString();\");\r\n                    break;\r\n                }\r\n                case 1:\r\n                    {\r\n                        let assci = 0;\r\n                        if (iterator == \"n\") { assci = 10; }\r\n                        else if (iterator == \"\\\"\") { assci = 34; }\r\n                        else if (iterator == \"\\\\\") { assci = 92 }\r\n                        else if (iterator == \"r\") { assci = 10 }\r\n                        else if (iterator == \"t\") { assci = 9; }\r\n                        else {\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                        }\r\n                        arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                        arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                        arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n                        arbol.codigo3d.push(\"guardarString();\");\r\n                        estado = 0;\r\n                        break;\r\n                    }\r\n            }\r\n\r\n        }\r\n        arbol.codigo3d.push(\"$t0=hp;\");\r\n        arbol.codigo3d.push(\"$t1=-1;\");\r\n        arbol.codigo3d.push(\"guardarString();\");\r\n        const contadort = arbol.getContadort();\r\n        arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n\r\n        return `$t${contadorID}`\r\n    }\r\n\r\n}","<h1>TABLA DE SIMBOLOS</h1>\r\n<div class=\"tabla\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n      \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"ID\">\r\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.identificador}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"TIPO\">\r\n          <th mat-header-cell *matHeaderCellDef> Tipo </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.tipo}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"AMBITO\">\r\n          <th mat-header-cell *matHeaderCellDef> Ambito </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.entorno}} </td>\r\n        </ng-container>\r\n      \r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"CONTENIDO\">\r\n          <th mat-header-cell *matHeaderCellDef> Contenido </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.contenido}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"LINEA\">\r\n          <th mat-header-cell *matHeaderCellDef> Linea </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.linea}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"COLUMNA\">\r\n          <th mat-header-cell *matHeaderCellDef> Columna </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.columna}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"POSICION\">\r\n          <th mat-header-cell *matHeaderCellDef> Posicion </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.posicion}} </td>\r\n        </ng-container>\r\n      \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabla-simbolos',\r\n  templateUrl: './tabla-simbolos.component.html',\r\n  styleUrls: ['./tabla-simbolos.component.css'],\r\n})\r\nexport class TablaSimbolosComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'ID',\r\n    'TIPO',\r\n    'AMBITO',\r\n    'CONTENIDO',\r\n    'LINEA',  \r\n    'COLUMNA',\r\n    'POSICION'\r\n  ];\r\n  dataSource = '';\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n\r\n    let info = window.localStorage.getItem('symbol');\r\n    let otro = JSON.parse(info);\r\n    this.dataSource = otro;\r\n    console.log(\"Aqui abajo tabla simbolos\")\r\n    console.log(this.dataSource)\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport nodoAST from 'src/app/Backend/XML/Analizador/Abstracto/nodoAST';\r\nimport Objeto from 'src/app/Backend/XML/Analizador/Expresiones/Objeto';\r\nimport * as vis from 'vis';\r\n\r\n@Component({\r\n  selector: 'app-ast-desc',\r\n  templateUrl: './ast-desc.component.html',\r\n  styleUrls: ['./ast-desc.component.css']\r\n})\r\nexport class AstDescComponent implements OnInit {\r\n\r\n  contador=1;\r\n  cuerpo='';\r\n  dataSource = '';\r\n  nodes = null;\r\n  edges = null;\r\n  network = null;\r\n  directionInput = document.getElementById(\"direction\");\r\n  constructor() { }\r\n  c = 0;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.nodes = [];\r\n    this.edges = [];\r\n    var connectionCount = [];\r\n    let info = window.localStorage.getItem('simbolos1');\r\n    let contenido:nodoAST = <nodoAST>JSON.parse(info);\r\n    console.log(contenido)\r\n\r\n    \r\n    var nivel = 0;\r\n    this.nodes.push({id: this.c, label: this.getValor(contenido), nivel:nivel})\r\n    this.nodes[this.c][\"level\"]=nivel;\r\n    var hijos = this.recorrerAST(this.c,contenido,nivel);\r\n    console.log(hijos)\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes.push({id: nodo.id, label: nodo.label})\r\n    }\r\n    for (let enlace of hijos.enlaces){\r\n      this.edges.push({from: enlace.id1, to: enlace.id2})\r\n    }\r\n    for (let nodo of hijos.nodos){\r\n      this.nodes[nodo.id][\"level\"]=nodo.nivel;\r\n    }\r\n\r\n   \r\n    var container = document.getElementById(\"mynetwork\");\r\n    var data = {\r\n      nodes: this.nodes,\r\n      edges: this.edges,\r\n    };\r\n\r\n    var options = {\r\n      nodes:{// Control de nodos\r\n        borderWidth: 2,//Ajuste de ancho de borde de nodo\r\n        size: 30,//Haga clic en la configuración de ancho cuando esté seleccionado,\r\n        color: {\r\n            border: '#46304E',//Configuración de color del borde\r\n            background:'#D297E9',\r\n        },\r\n        font:{\r\n          color:\"#000000\",\r\n          face: 'Century Gothic'\r\n          }\r\n    },\r\n      edges: {\r\n        smooth: {\r\n          type: \"cubicBezier\",\r\n          forceDirection: \"vertical\",\r\n          roundness: 0.4,\r\n        }\r\n      },\r\n      layout: {\r\n        randomSeed: undefined,\r\n        improvedLayout:true,\r\n\r\n        hierarchical: {\r\n          \r\n          direction: \"UD\",\r\n          sortMethod: \"hubsize\"\r\n        },\r\n      },\r\n      \r\n      physics: false,\r\n    };\r\n    this.network = new vis.Network(container, data, options);\r\n\r\n    this.network.on(\"select\", function (params) {\r\n      document.getElementById(\"selection\").innerText =\r\n        \"Selection: \" + params.nodes;\r\n    });\r\n    let registros:Objeto[] = [];\r\n  }\r\n  \r\n  destroy() {\r\n    if (this.network !== null) {\r\n      this.network.destroy();\r\n      this.network = null;\r\n    }\r\n  }\r\n  recorrerAST(padre:number, nPadre:nodoAST, nivel:number)\r\n    {\r\n      var arr = {nodos:[],enlaces:[]}\r\n      for(let hijo of this.getHijos(nPadre))\r\n      {\r\n        nivel++\r\n        this.c++\r\n        arr.enlaces.push({id1:padre, id2:this.c})\r\n        arr.nodos.push({id:this.c, label:this.getValor(hijo), nivel:nivel})\r\n\r\n        var resultado = this.recorrerAST(this.c,hijo,nivel);\r\n        arr.enlaces = arr.enlaces.concat(resultado.enlaces);\r\n        arr.nodos = arr.nodos.concat(resultado.nodos);\r\n      }\r\n      return arr\r\n    }\r\n    getValor(nodo): string {\r\n      return nodo.valor;\r\n    }\r\n    getHijos(nodo): Array<nodoAST> {\r\n      return nodo.listaNodos;\r\n    }\r\n}\r\n","\r\n\r\n\r\n\r\n<div id=\"mynetwork\"></div>\r\n","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport BarrasNodo from \"src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Variable from \"../Expresiones/Variable\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport CondicionSimple from \"./CondicionSimple\";\r\n\r\nexport default class IfFuncion extends Instruccion {\r\n    private condicion: Instruccion;\r\n    private insThen: Array<Instruccion> | null;\r\n    private insElse: Instruccion | null;\r\n\r\n\r\n    constructor(condicion: Instruccion, insThen: Array<Instruccion>, linea: number, columna: number, insElse?: Instruccion) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.condicion = condicion;\r\n        this.insThen = insThen;\r\n        this.insElse = insElse;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n\r\n        var value: any;\r\n        value = this.condicion.interpretar(arbol, tabla, tablaxml);\r\n        console.log(\"condicion \")\r\n        console.log(value)\r\n\r\n        var result = null;\r\n        if (Boolean(value)) {\r\n            for (let m of this.insThen) {\r\n                if (m instanceof Instruccion) {\r\n                    result = m.interpretar(arbol, tabla, tablaxml)\r\n                }\r\n                result=this.insThen\r\n            }\r\n\r\n        } else {\r\n\r\n            if (this.insElse instanceof Instruccion) {\r\n                if (this.insElse instanceof Variable) {\r\n                    result = this.insElse.interpretar(arbol, tabla, tablaxml);\r\n                    var buscar = tabla.getVariable(result);\r\n                    if (buscar != null) {\r\n                        result = buscar.getvalor()\r\n                        return buscar\r\n                    }\r\n                } else {\r\n                    result = this.insElse.interpretar(arbol, tabla, tablaxml);\r\n\r\n                }\r\n            } else {\r\n                result = this.insElse\r\n            }\r\n            console.log(result)\r\n\r\n\r\n        }\r\n        return result;\r\n\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n\r\n\r\n}","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class Identificador extends Instruccion {\r\n  getNodoAST(): nodoAST {\r\n    let nodo = new nodoAST(this.identificador);\r\n    return nodo;\r\n  }\r\n\r\n  public identificador: string;\r\n  constructor(identificador: string, fila: number, columna: number) {\r\n    super(new Tipo(tipoDato.CADENA), fila, columna);\r\n    this.identificador = identificador.toLowerCase();\r\n  }\r\n\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    let contador = arbol.getContadort();\r\n    let stack = arbol.getSTACK();\r\n    arbol.codigo3d.push(`// declaracion LET ${this.identificador}`);\r\n    arbol.codigo3d.push(`$t${contador}=sp+${stack};`);\r\n    return this.identificador;\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n}\r\n","import { Expression } from \"@angular/compiler\";\r\nimport Tipo, { tipoDato } from \"src/app/Backend/XQUERY/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\n\r\nexport default class Lower extends Instruccion {\r\n    public expresion: Instruccion;\r\n\r\n    constructor(expresion: Instruccion, linea: number, columna: number,) {\r\n        super(new Tipo(tipoDato.ENTERO), linea, columna);\r\n        this.expresion = expresion;\r\n\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        if (this.expresion instanceof Instruccion) {\r\n            console.log(\"entre\")\r\n            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);\r\n            var resp = hola.toString();\r\n            var low = resp.toLowerCase();\r\n            var val = this.Textocd3(arbol, hola.toString())\r\n            arbol.codigo3d.push(\"//***print****\")\r\n            let countprint = arbol.getContadort();\r\n            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);\r\n            arbol.codigo3d.push(\"//*****ToLowerCase******\");\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(`toLowerCase();`);\r\n            arbol.codigo3d.push(`$t0=$t${countprint};`);\r\n            arbol.codigo3d.push(\"imprimirString();\");\r\n            arbol.codigo3d.push(`printf(\"%c\",10);`);\r\n            return low;\r\n        }\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    Textocd3(arbol: Arbol, valor: String) {\r\n        let stackID = arbol.getSTACK();\r\n        let contadorID = arbol.getContadort(); //temporales\r\n        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);\r\n        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n        let data: string = valor + \"\";\r\n        let estado = 0;\r\n        for (let x = 0; x < data.length; x++) {\r\n            const iterator = data[x];\r\n            switch (estado) {\r\n                case 0: {\r\n                    if (iterator == \"\\\\\") { estado = 1; continue; }\r\n                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n                    arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                    arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n                    arbol.codigo3d.push(\"guardarString();\");\r\n                    break;\r\n                }\r\n                case 1:\r\n                    {\r\n                        let assci = 0;\r\n                        if (iterator == \"n\") { assci = 10; }\r\n                        else if (iterator == \"\\\"\") { assci = 34; }\r\n                        else if (iterator == \"\\\\\") { assci = 92 }\r\n                        else if (iterator == \"r\") { assci = 10 }\r\n                        else if (iterator == \"t\") { assci = 9; }\r\n                        else {\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                            arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n                            arbol.codigo3d.push(\"guardarString();\");\r\n                        }\r\n                        arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                        arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                        arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n                        arbol.codigo3d.push(\"guardarString();\");\r\n                        estado = 0;\r\n                        break;\r\n                    }\r\n            }\r\n\r\n        }\r\n        arbol.codigo3d.push(\"$t0=hp;\");\r\n        arbol.codigo3d.push(\"$t1=-1;\");\r\n        arbol.codigo3d.push(\"guardarString();\");\r\n        const contadort = arbol.getContadort();\r\n        arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n        \r\n        return `$t${contadorID}`\r\n    }\r\n\r\n}","\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\n\r\nexport default class AtributoExpresion extends Instruccion {\r\n    public Operacion: string;\r\n    public expresion: Instruccion;\r\n    constructor(select: string,expresion:Instruccion, fila: number, columna: number){\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Operacion = select\r\n        this.expresion=expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo= new nodoAST(\"ATRIBUTO\"); //PADRE SELECT\r\n        if(this.expresion!=null){\r\n            nodo.agregarHijo(this.Operacion)\r\n            nodo.agregarHijoAST(this.expresion.getNodosAST())\r\n           \r\n        }\r\n        \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n      }\r\n}","//relacionales\r\n\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Logica extends Instruccion {\r\n  private cond1: Instruccion | undefined;\r\n  private cond2: Instruccion | undefined;\r\n  private condExcep: Instruccion | undefined;\r\n  private loogica: Logicas;\r\n  constructor(\r\n    relacion: Logicas,\r\n    fila: number,\r\n    columna: number,\r\n    cond1: Instruccion,\r\n    cond2?: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.loogica = relacion;\r\n    if (!cond2) this.condExcep = cond1;\r\n    else {\r\n      this.cond1 = cond1;\r\n      this.cond2 = cond2;\r\n    }\r\n  }\r\n\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST('LOGICO');\r\n    if (this.condExcep != null) {\r\n      nodo.agregarHijo(this.loogica + '', 'log', this.loogica);\r\n      nodo.agregarHijoAST(this.condExcep.getNodosAST());\r\n    } else {\r\n      nodo.agregarHijoAST(this.cond1?.getNodosAST());\r\n      nodo.agregarHijo(this.loogica + '', 'log', this.loogica);\r\n      nodo.agregarHijoAST(this.cond2?.getNodosAST());\r\n    }\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    let izq, der, unico;\r\n    izq = der = unico = null;\r\n    if (this.condExcep != null) {\r\n      unico = this.condExcep.interpretar(arbol, tabla);\r\n      if (unico instanceof NodoErrores) return unico;\r\n    } else {\r\n      izq = this.cond1?.interpretar(arbol, tabla);\r\n      if (izq instanceof NodoErrores) return izq;\r\n      der = this.cond2?.interpretar(arbol, tabla);\r\n      if (der instanceof NodoErrores) return der;\r\n    }\r\n    //inicio comparacion\r\n    switch (this.loogica) {\r\n      case Logicas.AND:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n        return izq && der ? true : false;\r\n      case Logicas.OR:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n        return izq || der ? true : false;\r\n      case Logicas.NOT:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n\r\n        return !unico;\r\n    }\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n\r\nexport enum Logicas {\r\n  OR,\r\n  AND,\r\n  NOT,\r\n}\r\n","\r\nimport Simbolo from 'src/app/Backend/XML/Analizador/Simbolos/Simbolo';\r\nimport tablaSimbolos from 'src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos';\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Aritmetica from '../Expresiones/Aritmetica';\r\nimport Identificador from '../Expresiones/Identificador';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\nimport AtributoSimple from './AtributosSimples';\r\nimport SelectRoot from './SelectRoot';\r\nimport Todo from './todo';\r\nconst inicio = require(\"../../../../componentes/contenido-inicio/contenido-inicio.component\")\r\n\r\nexport default class BarrasNodo extends Instruccion {\r\n  public variablePublica:any\r\n\r\n  public Barra: string;\r\n  public Barra2: string;\r\n  public Operacion: Instruccion   //Nodo\r\n  contenido: string = \"\";\r\n  constructor(barra1: string, expresion: Instruccion, fila: number, columna: number, barra2?: string) {\r\n\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.Barra = barra1\r\n    this.Barra2 = barra2\r\n    this.Operacion = expresion\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    var nodo = new nodoAST('INSTRUCCION'); //PADRE SELECT\r\n    var nodsBarras = new nodoAST(this.Barra)\r\n    nodo.agregarHijoAST(nodsBarras)\r\n    if (this.Barra2 != null) {\r\n      /*nodo.agregarHijo(this.Barra2)*/\r\n      var nodsBarras2 = new nodoAST(this.Barra2)\r\n      nodo.agregarHijoAST(nodsBarras2)\r\n    }\r\n    if (this.Operacion != null) {\r\n\r\n      nodo.agregarHijoAST(this.Operacion.getNodosAST())\r\n    }\r\n\r\n    return nodo;\r\n  }\r\n\r\n\r\n  //BARRA: SELECCIONA DESDE EL NODO RAIZ\r\n  //DOBLE BARRA: SELECCIONA LOS NODOS QUE HAGAN MATCH EN EL DOCUMENTO NO IMPORTANDO DONDE ESTEN DESDE EL NODO ACTUAL \r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    //arbol.gettablaGlobal();\r\n    //BARRA\r\n    console.log('BARRA')\r\n    console.log(tabla)\r\n     this.variablePublica = this.Operacion.interpretar(arbol, tabla);\r\n    console.log(this.Operacion)\r\n    //if (variable != null) {\r\n    if (this.Barra2 == null) {\r\n      console.log(\"Aqui esta el arbol\");\r\n      let salidas:tablaSimbolos = new tablaSimbolos();\r\n      let cadena = ''\r\n      let error = ''\r\n\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          console.log(this.Operacion.cadena)\r\n          return this.Operacion.cadena\r\n        } else {\r\n          return \"No hay atributos\"\r\n        }\r\n      } else if (this.Operacion instanceof Aritmetica) {\r\n\r\n      } else if (this.Operacion instanceof SelectRoot){\r\n        if(this.variablePublica===\".\"){\r\n          for (var key of tabla.getTabla()) {\r\n            salidas.setVariable(key)\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }else{\r\n          //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR\r\n          var temporal=tabla.tablaAnterior\r\n          if(temporal!=null){\r\n            \r\n            for(var i of temporal.tablaActual){\r\n              console.log(inicio.ArbolGlobalReporte)\r\n              for(var b of inicio.ArbolGlobalReporte){\r\n                if( b.identificador=== i.identificador && b.entorno==\"Global\"){\r\n                  return \"Nodo no encontado: [object XMLDocument]\"\r\n                }\r\n              }\r\n              salidas.setVariable(i)\r\n            }\r\n          }else{\r\n            cadena=\"Nodo no encontado: [object XMLDocument]\"\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }\r\n      }else if (this.Operacion instanceof Todo) {\r\n        for (var key of tabla.getTabla()) {\r\n          salidas.setVariable(key)\r\n        }\r\n        if (cadena != '') {\r\n          return cadena\r\n        }\r\n        return salidas\r\n      } else {\r\n        for (var key of tabla.getTabla()) {\r\n         \r\n          if (key.getidentificador() == this.variablePublica) {\r\n            \r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          } else {\r\n            error = \"Nodo no encontrado \";\r\n            console.log(error);\r\n          }\r\n\r\n        }\r\n        if (cadena != '') {\r\n          return cadena\r\n        } else if (error != '') {\r\n          return error\r\n        }\r\n        console.log(\"OBJETOSSALIDA\")\r\n        console.log(salidas)\r\n        salidas.setAnterior(tabla)\r\n        return salidas\r\n\r\n      }\r\n\r\n    } else {         // **************************************ESTE ES DOBLE BARRA******************************\r\n      console.log(\"entro doble barra\")\r\n      //DOBLE BARRA\r\n      let salidas = new tablaSimbolos();\r\n      let cadena = ''\r\n\r\n      /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          return this.Operacion.cadena\r\n        }\r\n        return this.variablePublica\r\n      } else if (this.Operacion instanceof Todo) {\r\n      } else if (this.Operacion instanceof SelectRoot){\r\n        if(this.variablePublica===\".\"){\r\n          for (var key of tabla.getTabla()) {\r\n            salidas.setVariable(key)\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }else{\r\n          //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR\r\n          var temporal=tabla.tablaAnterior\r\n          if(temporal!=null){\r\n            \r\n            for(var i of temporal.tablaActual){\r\n              console.log(inicio.ArbolGlobalReporte)\r\n              for(var b of inicio.ArbolGlobalReporte){\r\n                if( b.identificador=== i.identificador && b.entorno==\"Global\"){\r\n                  return \"Nodo no encontado: [object XMLDocument]\"\r\n                }\r\n              }\r\n              salidas.setVariable(i)\r\n            }\r\n          }else{\r\n            cadena=\"Nodo no encontado: [object XMLDocument]\"\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          return salidas\r\n        }\r\n      }else {\r\n\r\n        for (var key of tabla.getTabla()) {\r\n          if (key.getidentificador() == this.variablePublica) {\r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          console.log(\"OBJETOSSALIDA\")\r\n          console.log(salidas)\r\n          salidas.setAnterior(tabla)\r\n          return salidas\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  CollectAll(key: Simbolo, cad: string, salidas: tablaSimbolos) {\r\n    if (key.getvalor().getTabla() != null) {\r\n      for (let sim of key.getvalor().getTabla()) {\r\n        salidas.setVariable(sim)\r\n        if (sim instanceof Simbolo) {\r\n          if (sim.getAtributo().size != 0) {\r\n            sim.getAtributo().forEach(element => {\r\n              cad += element.trim() + \"\\n\"\r\n            });\r\n          }\r\n          if (sim.getvalor() instanceof tablaSimbolos) {\r\n            this.CollectAll(sim, cad, salidas)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    let variable = this.Operacion.codigo3D(arbol, tabla);\r\n    console.log(this.Operacion)\r\n    //if (variable != null) {\r\n    if (this.Barra2 == null) {\r\n      console.log(\"Aqui esta el arbol\");\r\n      let salidas = new tablaSimbolos();\r\n      let cadena = ''\r\n      let error = ''\r\n\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          console.log(this.Operacion.cadena)\r\n          return this.Operacion.cadena\r\n        }\r\n        return variable\r\n      } else if (this.Operacion instanceof Aritmetica) {\r\n\r\n      } else {\r\n        for (var key of tabla.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          } else {\r\n            error = \"Nodo no encontrado \";\r\n            console.log(error);\r\n          }\r\n\r\n        }\r\n        if (cadena != '') {\r\n          return cadena\r\n        } else if (error != '') {\r\n          return error\r\n        }\r\n        console.log(\"OBJETOSSALIDA\")\r\n        console.log(salidas)\r\n        return salidas\r\n\r\n      }\r\n\r\n    } else {\r\n      console.log(\"entro doble barra\")\r\n      //DOBLE BARRA\r\n      let salidas = new tablaSimbolos();\r\n      let cadena = ''\r\n\r\n      /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */\r\n      if (this.Operacion instanceof AtributoSimple) {\r\n        //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .\r\n        if (this.Operacion.cadena != '') {\r\n          return this.Operacion.cadena\r\n        }\r\n        return variable\r\n      } else {\r\n\r\n        for (var key of tabla.getTabla()) {\r\n          if (key.getidentificador() == variable) {\r\n            console.log(key.getidentificador())\r\n            if (key.getvalor() instanceof tablaSimbolos) {\r\n              for (let sim of key.getvalor().getTabla()) {\r\n                salidas.setVariable(sim)\r\n              }\r\n\r\n            }\r\n            else {\r\n              cadena += key.getvalor().replaceAll(\"%20\", \" \").replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(\"&amp;\", \"&\").replaceAll(\"&apos;\", \"'\").replaceAll(\"&quot;\", \"\\\"\").replaceAll(\"   \", \"\\n\");\r\n            }\r\n          }\r\n          if (cadena != '') {\r\n            return cadena\r\n          }\r\n          console.log(\"OBJETOSSALIDA\")\r\n          console.log(salidas)\r\n          return salidas\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { listaErrores } from \"src/app/componentes/contenido-inicio/contenido-inicio.component\";\r\nimport NodoErrores from \"../../XML/Analizador/Excepciones/NodoErrores\";\r\nimport tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Conversion extends Instruccion {\r\n    private tipo: String;\r\n    private expresion: Instruccion;\r\n    constructor(operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.tipo=operando\r\n        this.expresion= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        let variable= this.expresion.interpretar(arbol, tabla);\r\n        if(this.tipo===\"int\"){\r\n            if(this.expresion instanceof Termino){\r\n                return \"(int) \"+variable.contenido\r\n            }\r\n        }else if(this.tipo===\"double\"){\r\n            if(this.expresion instanceof Termino){\r\n                return \"(double) \"+variable.contenido\r\n            }\r\n        }else if(this.tipo===\"float\"){\r\n            if(this.expresion instanceof Termino){\r\n                return \"(float) \"+variable.contenido\r\n            }\r\n        }else if(this.tipo===\"char\"){\r\n            if(this.expresion instanceof Termino){\r\n                return \"(char) \"+variable.contenido\r\n            }\r\n        }else{\r\n            //ERROR SEMANTICO SON TODOS LOS TIPOS SOPORTADOS POR C\r\n            listaErrores.push(new NodoErrores(\"Semantico Optimizacion\", \"Tipo de conversion no soportados por c\",this.fila,this.columna));\r\n        }\r\n        \r\n    }\r\n\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Aritmetica extends Instruccion {\r\n\r\n    private expresion1: Instruccion;\r\n    private operando: String;\r\n    private expresion2: Instruccion;\r\n    constructor(expresion1: Instruccion, operando: String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion1 = expresion1\r\n        this.operando = operando\r\n        this.expresion2 = expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        var operadorizq = this.expresion1.interpretar(arbol, tabla);\r\n        var operadorder = this.expresion2.interpretar(arbol, tabla);\r\n        if (operadorizq != null && operadorder != null) {\r\n            if (this.expresion1 instanceof Termino && this.expresion2 instanceof Termino) {\r\n                if (this.operando === \"+\") {\r\n                    // t0= t0+0   o   t0=0+t0\r\n                    if (operadorder.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }else {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }\r\n                } else if (this.operando === \"-\") {\r\n                    // t0= t0-0   o   t0=0-t0\r\n                    if (operadorder.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }else {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }\r\n                } else if (this.operando === \"*\") {\r\n                    // t0= t0*1   o   t0=1*t0\r\n                    if (operadorder.contenido == 1) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 1) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorder.contenido == 2) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 2) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorder.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }else {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }\r\n                } else if (this.operando === \"/\") {\r\n                    // t0= t0/1   o   t0=1*t0\r\n                    if (operadorder.contenido == 1) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 1) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } if (operadorder.contenido != 0) {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    } else if (operadorizq.contenido == 0) {\r\n                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }else {\r\n                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                // en este puede venir contenido ya sea de identificador cosa que no acepta el anterior\r\n                if (operadorder.contenido != null && operadorizq.contenido != null) {\r\n                    if (this.operando === \"+\") {\r\n                        // t0= t0+0   o   t0=0+t0\r\n                        if (operadorder.contenido == 0) {\r\n                            return { operadorder: operadorder.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (this.operando === \"-\") {\r\n                        // t0= t0-0   o   t0=0-t0\r\n                        if (operadorder.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (this.operando === \"*\") {\r\n                        // t0= t0*1   o   t0=1*t0\r\n                        if (operadorder.contenido == 1) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 1) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorder.contenido == 2) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 2) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorder.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n\r\n                        }\r\n                    } else if (this.operando === \"/\") {\r\n                        // t0= t0/1   o   t0=1*t0\r\n                        if (operadorder.contenido == 1) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 1) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } if (operadorder.contenido != 0) {\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else if (operadorizq.contenido == 0) {\r\n                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    // en este acepta si hay uno anterior con la estructura \r\n                    //{ operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                    // analiza las posibilidades\r\n                    if (operadorder.operadorder != null) {\r\n                        if (this.expresion1 instanceof Termino) {\r\n                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    } else if (operadorizq.operadorder != null) {\r\n                        if (this.expresion2 instanceof Termino) {\r\n                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } else {\r\n                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString()\r\n                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString()\r\n                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XMLgraph = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,11],$V1=[1,3],$V2=[1,4],$V3=[1,5],$V4=[5,9,10,13,16,17],$V5=[1,11],$V6=[2,14],$V7=[10,12,14,15],$V8=[5,10,16],$V9=[1,19];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"OBJETO\":4,\"EOF\":5,\"INSTRUCCION\":6,\"CUERPO\":7,\"OBJETOS\":8,\"MENORQUEESPECIAL\":9,\"IDENTIFICADOR\":10,\"L_ATRIBUTOS\":11,\"MAYORQUEESPECIAL\":12,\"MENORQUE\":13,\"SELFCLOSE\":14,\"MAYORQUE\":15,\"SALIDA\":16,\"COMENTARIOS\":17,\"ATRIBUTO\":18,\"IGUAL\":19,\"CADENA\":20,\"QUOTE\":21,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"CUERPO\",9:\"MENORQUEESPECIAL\",10:\"IDENTIFICADOR\",12:\"MAYORQUEESPECIAL\",13:\"MENORQUE\",14:\"SELFCLOSE\",15:\"MAYORQUE\",16:\"SALIDA\",17:\"COMENTARIOS\",19:\"IGUAL\",20:\"CADENA\",21:\"QUOTE\"},\r\nproductions_: [0,[3,2],[6,1],[6,1],[8,2],[8,1],[4,5],[4,5],[4,8],[4,7],[4,1],[4,0],[11,2],[11,1],[11,0],[18,3],[18,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n return \"<START> ::= <OBJETO> <EOF>\\n\"+$$[$0-1];\r\nbreak;\r\ncase 2:\r\n \r\n                \r\n                this.$=$$[$0]+\"<INSTRUCCION> ::= <CUERPO>\\n\" +\"<INSTRUCCION> ::= \"+\" \\n\"\r\n        \r\nbreak;\r\ncase 3:\r\n \r\n                \r\n                this.$=$$[$0]+\"<INSTRUCCION> ::= <OBJETOS>\\n\"  \r\n        \r\nbreak;\r\ncase 4:\r\n \r\n                this.$=\"<OBJETOS> ::= <OBJETOS><OBJETO>\\n\"+$$[$0-1]+$$[$0]\r\n         \r\nbreak;\r\ncase 5:\r\n \r\n                this.$=\"<OBJETOS> ::= <OBJETO>\\n\"+$$[$0]\r\n         \r\nbreak;\r\ncase 6:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUEESPECIAL> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUEESPECIAL> <INSTRUCCION>\\n<OBJETO> ::= <?\"+$$[$0-3]+\" \"+$$[$0-2]+\"?>\\n\"+$$[$0]\r\n        \r\nbreak;\r\ncase 7:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <SELFCLOSE> <INSTRUCCION>\\n<OBJETO> ::= <\"+$$[$0-3]+\" \"+ $$[$0-2]+\"/>\\n\"+$$[$0]\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <SALIDA> <IDENTIFICADOR> <MAYORQUE>\\n<OBJETO> ::= <\"+$$[$0-6]+$$[$0-5]+\">\\n\"+$$[$0-3]+\"<\"+$$[$0-1]+\">\\n\"\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n                this.$=\"<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <IDENTIFICADOR> <MAYORQUE>\\n<OBJETO> ::= <\"+$$[$0-5]+$$[$0-4]+\">\\n\"+$$[$0-2]+\"<\"+$$[$0-1]+\">\\n\"\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n                this.$=\"<OBJETO> ::= <COMENTARIOS>\\n<OBJETO> ::= <!--\"+$$[$0]+\"-->\\n\"\r\n        \r\nbreak;\r\ncase 11: case 14:\r\nthis.$=\"\"\r\nbreak;\r\ncase 12:\r\n\r\n                this.$=\"<L_ATRIBUTOS> ::= <L_ATRIBUTOS><ATRIBUTO>\\n\"+$$[$0-1]+$$[$0]+\"\\n\"\r\n          \r\nbreak;\r\ncase 13:\r\n\r\n                this.$=\"<L_ATRIBUTOS> ::= <ATRIBUTO>\\n\"+$$[$0]+\"\\n\"\r\n          \r\nbreak;\r\ncase 15: case 16:\r\n\r\n                this.$=\"<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><CADENA>\\n<ATRIBUTO> ::= \"+$$[$0-2]+\"= \\\"\"+$$[$0]+\"\\\"\\n\"\r\n        \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,5:$V0,9:$V1,13:$V2,17:$V3},{1:[3]},{5:[1,6]},{10:[1,7]},{10:[1,8]},o($V4,[2,10]),{1:[2,1]},{10:$V5,11:9,12:$V6,18:10},o([14,15],$V6,{18:10,11:12,10:$V5}),{10:$V5,12:[1,13],18:14},o($V7,[2,13]),{19:[1,15]},{10:$V5,14:[1,16],15:[1,17],18:14},o($V8,$V0,{6:18,8:20,4:21,7:$V9,9:$V1,13:$V2,17:$V3}),o($V7,[2,12]),{20:[1,22],21:[1,23]},o($V8,$V0,{8:20,4:21,6:24,7:$V9,9:$V1,13:$V2,17:$V3}),o([10,16],$V0,{8:20,4:21,6:25,7:$V9,9:$V1,13:$V2,17:$V3}),o($V4,[2,6]),o($V4,[2,2]),o($V8,[2,3],{4:26,9:$V1,13:$V2,17:$V3}),o($V4,[2,5]),o($V7,[2,15]),o($V7,[2,16]),o($V4,[2,7]),{10:[1,28],16:[1,27]},o($V4,[2,4]),{10:[1,29]},{15:[1,30]},{15:[1,31]},o($V4,[2,9]),o($V4,[2,8])],\r\ndefaultActions: {6:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\n\r\n\r\n    var palabra = \"\"\r\n    var palabra1 = \"\"\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:console.log(\"Comenzo el comentario\"); this.begin(\"Comentario\"); \r\nbreak;\r\ncase 2:\r\nbreak;\r\ncase 3:\r\nbreak;\r\ncase 4:console.log(\"Termino el comentario\"); this.popState();\r\nbreak;\r\ncase 5:console.log(\"Texto dentro del comentario: \"+yy_.yytext+\" :(\"); return 17\r\nbreak;\r\ncase 6:this.begin('cuerpo'); return 15\r\nbreak;\r\ncase 7:this.begin('INITIAL');if(palabra.replaceAll(\" \",\"\") == \"\")  return 16; yy_.yytext = palabra; palabra = \"\";if(palabra.replaceAll(\" \",\"\") == \"\") return 7;\r\nbreak;\r\ncase 8:this.begin('INITIAL');  return 13; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 9:this.begin('INITIAL');  return 14; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 10:palabra += yy_.yytext;\r\nbreak;\r\ncase 11:return 12\r\nbreak;\r\ncase 12:return 16\r\nbreak;\r\ncase 13:return 14\r\nbreak;\r\ncase 14:return 9\r\nbreak;\r\ncase 15:return 13\r\nbreak;\r\ncase 16:return 19;\r\nbreak;\r\ncase 17: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 20; \r\nbreak;\r\ncase 18: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 21; \r\nbreak;\r\ncase 19:return 10;\r\nbreak;\r\ncase 20:return 5\r\nbreak;\r\ncase 21:\r\nbreak;\r\ncase 22:\r\nbreak;\r\ncase 23:\r\nbreak;\r\ncase 24:console.log(\"Error Lexico\");\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\/\\/.*)/i,/^(?:<!--)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:-->)/i,/^(?:[^\"-->\"]+)/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:<)/i,/^(?:.)/i,/^(?:\\?>)/i,/^(?:<\\/)/i,/^(?:\\/>)/i,/^(?:<\\?)/i,/^(?:<)/i,/^(?:=)/i,/^(?:\"[^\\\"]*\")/i,/^(?:'[^\\']*')/i,/^(?:([a-zA-Z])[a-zA-Z0-9_]*)/i,/^(?:$)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n+)/i,/^(?:\\s+)/i,/^(?:.)/i],\r\nconditions: {\"Comentario\":{\"rules\":[2,3,4,5],\"inclusive\":false},\"xml\":{\"rules\":[0,1,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24],\"inclusive\":true},\"cuerpo\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XMLgraph;\r\nexports.Parser = XMLgraph.Parser;\r\nexports.parse = function () { return XMLgraph.parse.apply(XMLgraph, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport { reporteTabla } from '../Reportes/reporteTabla';\r\nimport Atributo from 'src/app/Backend/XML/Analizador/Expresiones/Atributo';\r\nimport Tipo from './Tipo';\r\nexport default class Arbol {\r\n  private instrucciones: Array<Instruccion>;\r\n\r\n  private NodoErrores: Array<NodoErrores>;\r\n\r\n  public listaSimbolos: Array<reporteTabla>;\r\n  private dot: string;\r\n  private c: number;\r\n  private encoding: String;\r\n  /**CODIGO DE 3 DIRECCIONES */\r\n  public codigo3d: Array<String>;\r\n  public Encabezadocodigo3d: Array<String>;\r\n  contadort: number;\r\n  etiquetasL: number;\r\n  contadorP: number;\r\n  contadorS: number;\r\n  pila: Array<Tipo>;\r\n  etiquetasS: Array<string>;\r\n\r\n  public getEncoding(): String {\r\n    return this.encoding;\r\n  }\r\n\r\n  public setEncoding(encoding: String) {\r\n    this.encoding = encoding;\r\n  }\r\n\r\n  public getSimbolos(): Array<reporteTabla> {\r\n    return this.listaSimbolos;\r\n  }\r\n\r\n\r\n  public BuscarTipo(identificador: String): String {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador() == identificador) {\r\n        return elemento.getTipo().toString();\r\n      }\r\n    }\r\n\r\n    return 'as';\r\n  }\r\n\r\n\r\n\r\n\r\n  public actualizarTabla(identificador: string, linea: string, columna: string): boolean {\r\n    for (var elemento of this.listaSimbolos) {\r\n      if (elemento.getIdentificador().toString() == identificador) {\r\n        elemento.setContenido(linea);\r\n        elemento.setLinea(linea);\r\n        elemento.setColumna(linea);\r\n        elemento.setEntorno(identificador);\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  public getNodoErrores(): Array<NodoErrores> {\r\n    return this.NodoErrores;\r\n  }\r\n  public setNodoErrores(value: Array<NodoErrores>) {\r\n    this.NodoErrores = value;\r\n  }\r\n\r\n\r\n\r\n  public getinstrucciones(): Array<Instruccion> {\r\n    return this.instrucciones;\r\n  }\r\n  public setinstrucciones(value: Array<Instruccion>) {\r\n    this.instrucciones = value;\r\n  }\r\n  private consola: String = '';\r\n  public getconsola(): String {\r\n    return this.consola;\r\n  }\r\n  public setconsola(value: String) {\r\n    this.consola = value;\r\n  }\r\n  public actualizaConsola(uptodate: String) {\r\n    this.consola = `${this.consola}${uptodate}\\n`;\r\n  }\r\n  private tablaGlobal: tablaSimbolos;\r\n  public gettablaGlobal(): tablaSimbolos {\r\n    return this.tablaGlobal;\r\n  }\r\n  public settablaGlobal(value: tablaSimbolos) {\r\n    this.tablaGlobal = value;\r\n  }\r\n\r\n  constructor(instrucciones: Array<Instruccion>) {\r\n    this.instrucciones = instrucciones;\r\n    this.consola = '';\r\n    this.tablaGlobal = new tablaSimbolos();\r\n    this.NodoErrores = new Array<NodoErrores>();\r\n    this.listaSimbolos = new Array<reporteTabla>();\r\n    this.dot = \"\"\r\n    this.c = 0\r\n    /*CODIGO 3 DIRECCIONES*/\r\n    this.codigo3d = new Array<String>();\r\n    this.Encabezadocodigo3d = new Array<String>();\r\n    this.Encabezadocodigo3d.push(\"double heap[30101999];\");\r\n    this.Encabezadocodigo3d.push(\"double stack[30101999];\");\r\n    this.Encabezadocodigo3d.push(\"char Numero[500];\");\r\n\r\n    this.Encabezadocodigo3d.push(\"double hp;\");\r\n    this.Encabezadocodigo3d.push(\"double sp;\");\r\n\r\n    this.Encabezadocodigo3d.push(\"void potencia(){\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>0)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t2*$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t1-1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // lafuncion imprimir\r\n    this.Encabezadocodigo3d.push(\"void imprimirString(){\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",(int)$t1);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // metodo guardar en hepp el string\r\n    this.Encabezadocodigo3d.push(\"void guardarString(){\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"hp=hp+1;\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // numero a string\r\n    this.Encabezadocodigo3d.push(\"void NumberToString(){\");\r\n    this.Encabezadocodigo3d.push('snprintf(Numero, 500, \"%f\", $t2);');\r\n    this.Encabezadocodigo3d.push(\"$t3=0;\");\r\n    this.Encabezadocodigo3d.push(\"$t6=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==0) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==46) goto L2;\"); // si es un punto\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t4;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t3=$t3+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t6=$t6+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // aqui son los decimales\r\n    this.Encabezadocodigo3d.push(\"$t5=$t3;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t3=$t3+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==48)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"if($t5>$t6)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t6];\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t4;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t6=$t6+1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t5<$t6)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t5>=$t6)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // bool a string\r\n    this.Encabezadocodigo3d.push(\"void BooleanToString(){\");\r\n    this.Encabezadocodigo3d.push('snprintf(Numero, 500, \"%f\", $t2);');\r\n    this.Encabezadocodigo3d.push(\"$t3=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=Numero[(int)$t3];\");\r\n    this.Encabezadocodigo3d.push(\"if($t4==49) goto L1;\"); // 49 es 1\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\"); // imprimir true\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=116;\"); //t\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=114;\"); //r\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=117;\"); //u\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=101;\"); //e\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // imprimir false\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=102;\");  //f\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=97;\"); //a\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=108;\"); //l\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=115;\"); //s\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=101;\"); //e\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n\r\n    // concatenarString\r\n    this.Encabezadocodigo3d.push(\"void concatenarString(){\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");// el valor del caracter\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");// el valor del caracter\r\n    this.Encabezadocodigo3d.push(\"if($t1==0) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)hp]=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"hp=hp+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // cantidadString\r\n    this.Encabezadocodigo3d.push(\"void tamanioString(){\");\r\n    this.Encabezadocodigo3d.push(\"$t4=0;\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-3) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // comparar string\r\n    this.Encabezadocodigo3d.push(\"void compararString(){\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"$t3=heap[(int)$t1];\");\r\n    this.Encabezadocodigo3d.push(\"if($t2!=$t3)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"if($t2==-1) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=$t1+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=0;\");\r\n    this.Encabezadocodigo3d.push(\"goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=1;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // charat\r\n    this.Encabezadocodigo3d.push(\"void CharAt(){\");\r\n    this.Encabezadocodigo3d.push(\"$t5=0;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=-1;\"); // contador\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-3) goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t3==$t4) goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<0)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t4=$t4+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t5=1;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // toLowerCase\r\n    this.Encabezadocodigo3d.push(\"void toLowerCase(){\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");// salida\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<91)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>64)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t1+32;\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    //toUpperCase\r\n    this.Encabezadocodigo3d.push(\"void toUpperCase(){\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1!=-1) goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");// salida\r\n    this.Encabezadocodigo3d.push(\"L1:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<123)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"if($t1>96)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t1-32;\");\r\n    this.Encabezadocodigo3d.push(\"heap[(int)$t0]=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    //imprimir Arreglo\r\n    this.Encabezadocodigo3d.push(\"void PrintArreglo(){\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==240)goto L0;\");\r\n    this.Encabezadocodigo3d.push(\"// 240 es un numero para ver si el arreglo tiene VALORES\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==241)goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"// 241 es un numero donde muestra la posicion de otro arreglo\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==242)goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"// 242 es un numero donde muestra la posicion de otro arreglo\");\r\n    this.Encabezadocodigo3d.push(\"L0:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+2;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==239)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==238)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==237)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"L1:\");// es un string\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L1;\");\r\n    this.Encabezadocodigo3d.push(\"L2:\"); // es un numero\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"$t8=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");// usar t7\r\n    this.Encabezadocodigo3d.push(\"$t7=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"NumberToString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=-1;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t7;\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t8;\");\r\n    this.Encabezadocodigo3d.push(\"goto L2;\");\r\n    this.Encabezadocodigo3d.push(\"L3:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-2)goto L3;\");\r\n    this.Encabezadocodigo3d.push(\"$t8=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=heap[(int)$t0];\");// usar t7\r\n    this.Encabezadocodigo3d.push(\"$t7=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t2=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"BooleanToString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=hp;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=-1;\");\r\n    this.Encabezadocodigo3d.push(\"guardarString();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t7;\");\r\n    this.Encabezadocodigo3d.push(\"imprimirString();\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",32);\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t8;\");\r\n    this.Encabezadocodigo3d.push(\"goto L3;\");\r\n\r\n    this.Encabezadocodigo3d.push(\"L4:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+3;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t9=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"PrintArreglo();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t9;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0-2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L4;\");\r\n    this.Encabezadocodigo3d.push(\"L5:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+3;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t10=$t0;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t1;\");\r\n    this.Encabezadocodigo3d.push(\"PrintArreglo();\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t10;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0-2;\");\r\n    this.Encabezadocodigo3d.push(\"goto L5;\");\r\n    this.Encabezadocodigo3d.push(\"L20:\");\r\n    this.Encabezadocodigo3d.push(\"printf(\\\"%c\\\",10);\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    // obtener la pocicion en el arreglo\r\n    this.Encabezadocodigo3d.push(\"void ObtenerPosArreglo(){\");\r\n    this.Encabezadocodigo3d.push(\"if($t0==-1)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"if($t0==-2)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+1;\");\r\n    this.Encabezadocodigo3d.push(\"$t1=heap[(int)$t0];\");\r\n    this.Encabezadocodigo3d.push(\"if($t1<=$t2)goto L20;\");\r\n    this.Encabezadocodigo3d.push(\"$t5=2+$t2;\");\r\n    this.Encabezadocodigo3d.push(\"$t0=$t0+$t5;\");\r\n    this.Encabezadocodigo3d.push(\"goto L10;\");\r\n    this.Encabezadocodigo3d.push(\"L20:\");\r\n    this.Encabezadocodigo3d.push(\"$t0=-1;\");\r\n    this.Encabezadocodigo3d.push(\"L10:\");\r\n    this.Encabezadocodigo3d.push(\"return;\");\r\n    this.Encabezadocodigo3d.push(\"}\");\r\n    this.etiquetasS = new Array<string>();\r\n    this.pila = new Array<Tipo>();\r\n    this.contadort = 15;//T\r\n    this.etiquetasL = 5;//L\r\n    this.contadorP = 0;\r\n    this.contadorS = 0;\r\n  }\r\n  getEtiqueta() {\r\n    return this.etiquetasL++;\r\n  }\r\n  getContadort() {\r\n    return this.contadort++;\r\n  }\r\n  getSTACK() {\r\n    return this.contadorS++;\r\n  }\r\n  setContadort(contador: number) {\r\n    this.contadort = contador;\r\n  }\r\n  setStack(count: number) {\r\n    this.contadorS = count\r\n  }\r\n  setEtiqueta(count: number) {\r\n    this.etiquetasL = count\r\n  }\r\n}\r\n","//relacionales\r\n\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\nimport tablaSimbolosxml from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport tablaSimbolos from '../Simbolos/tablaSimbolos';\r\nimport Variable from './Variable';\r\nimport Relacional from './Relacional';\r\nimport { Parser } from 'GramaticaXML';\r\n\r\nexport default class Logica extends Instruccion {\r\n  private cond1: Instruccion | undefined;\r\n  private cond2: Instruccion | undefined;\r\n  private condExcep: Instruccion | undefined;\r\n  private loogica: Logicas;\r\n  constructor(\r\n    relacion: Logicas,\r\n    fila: number,\r\n    columna: number,\r\n    cond1: Instruccion,\r\n    cond2?: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.loogica = relacion;\r\n    if (!cond2) this.condExcep = cond1;\r\n    else {\r\n      this.cond1 = cond1;\r\n      this.cond2 = cond2;\r\n    }\r\n  }\r\n\r\n  public getNodoAST(): nodoAST {\r\n    let nodo = new nodoAST('LOGICO');\r\n    if (this.condExcep != null) {\r\n      nodo.agregarHijo(this.loogica + '', 'log', this.loogica);\r\n      nodo.agregarHijoAST(this.condExcep.getNodoAST());\r\n    } else {\r\n      nodo.agregarHijoAST(this.cond1?.getNodoAST());\r\n      nodo.agregarHijo(this.loogica + '', 'log', this.loogica);\r\n      nodo.agregarHijoAST(this.cond2?.getNodoAST());\r\n    }\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    let izq, der, unico;\r\n    izq = der = unico = null;\r\n    if (this.condExcep != null) {\r\n      unico = this.condExcep.interpretar(arbol, tabla, tablaxml)\r\n      if (unico instanceof NodoErrores) return unico;\r\n    } else {\r\n      izq = this.cond1?.interpretar(arbol, tabla, tablaxml)\r\n      if(this.cond1 instanceof Relacional){\r\n        var tipo1\r\n        var tipo2\r\n        tipo1=this.cond1.cond1.tipoDato.getTipo();\r\n        tipo2=this.cond1.cond2.tipoDato.getTipo();\r\n        if(tipo1==tipoDato.CADENA){\r\n          if(tipo2==tipoDato.ENTERO){\r\n            var tempcondicion1 =parseInt(izq.condicion1)\r\n            izq= this.hacerOperacionRel(tempcondicion1,izq.operador,izq.condicion2)\r\n          }\r\n        }\r\n        if(tipo1==tipoDato.ENTERO){\r\n          if(tipo2==tipoDato.CADENA){\r\n            var tempcondicion2= parseInt(izq.condicion2)   \r\n            izq= this.hacerOperacionRel(izq.condicion1,izq.operador,tempcondicion2 )        \r\n          }\r\n        }\r\n      }\r\n      if (izq instanceof NodoErrores){\r\n        return izq;\r\n      } else if (this.cond1 instanceof Variable) {\r\n        var buscar1 = tabla.getVariable(izq);\r\n        if (buscar1 != null) {\r\n          izq = buscar1.getvalor()\r\n        }\r\n       \r\n      }\r\n      var cambiandotipo\r\n      try {\r\n        cambiandotipo = parseInt(izq)\r\n        this.cond1.tipoDato.setTipo(tipoDato.ENTERO)\r\n      } catch (error) {\r\n        try {\r\n          cambiandotipo = parseFloat(izq)\r\n          this.cond1.tipoDato.setTipo(tipoDato.DECIMAL)\r\n        } catch (error) {\r\n          this.cond1.tipoDato.setTipo(tipoDato.CADENA)\r\n        }\r\n      }\r\n      der = this.cond2?.interpretar(arbol, tabla, tablaxml)\r\n      if(this.cond2 instanceof Relacional){\r\n        var tipo1\r\n        var tipo2\r\n        tipo1=this.cond2.cond1.tipoDato.getTipo();\r\n        tipo2=this.cond2.cond2.tipoDato.getTipo();\r\n        if(tipo1==tipoDato.CADENA){\r\n          if(tipo2==tipoDato.ENTERO){\r\n            var tempcond1= parseInt(der.condicion1)\r\n            der= this.hacerOperacionRel(tempcond1,der.operador,der.condicion2 )\r\n          }\r\n        }\r\n        if(tipo1==tipoDato.ENTERO){\r\n          if(tipo2==tipoDato.CADENA){\r\n            var tempcond2= parseInt(der.condicion2)\r\n            der= this.hacerOperacionRel(der.condicion1,der.operador,tempcond2 )           \r\n          }\r\n        }\r\n      }\r\n      if (der instanceof NodoErrores) {\r\n        return der;\r\n      }else if (this.cond2 instanceof Variable) {\r\n        var buscar2 = tabla.getVariable(izq);\r\n        if (buscar2 != null) {\r\n          der = buscar2.getvalor()\r\n        }\r\n       \r\n      }\r\n      var cambiandotipo2\r\n      try {\r\n        cambiandotipo2 = parseInt(der)\r\n        this.cond2.tipoDato.setTipo(tipoDato.ENTERO)\r\n      } catch (error) {\r\n        try {\r\n          cambiandotipo2 = parseFloat(der)\r\n          this.cond2.tipoDato.setTipo(tipoDato.DECIMAL)\r\n        } catch (error) {\r\n          this.cond2.tipoDato.setTipo(tipoDato.CADENA)\r\n        }\r\n      }\r\n    }\r\n    //inicio comparacion\r\n    switch (this.loogica) {\r\n      case Logicas.AND:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n        return izq && der ? true : false;\r\n      case Logicas.OR:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n        return izq || der ? true : false;\r\n      case Logicas.NOT:\r\n        this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n\r\n        return !unico;\r\n    }\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  hacerOperacionRel(cond1: any, Operador: String, cond2: any): Boolean {\r\n    switch (Operador) {\r\n      case \"==\":\r\n        return cond1 == cond2;\r\n      case \"!=\":\r\n        return cond1 != cond2;\r\n      case \"<\":\r\n        return cond1 < cond2;\r\n      case \"<=\":\r\n        return cond1 <= cond2;\r\n      case \">\":\r\n        return cond1 > cond2;\r\n      case \">=\":\r\n        return cond1 >= cond2;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport enum Logicas {\r\n  OR,\r\n  AND,\r\n  NOT,\r\n}\r\n","//aritmeticas\r\n\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Relacional extends Instruccion {\r\n  private cond1: Instruccion;\r\n  private cond2: Instruccion;\r\n  private relacion: Relacionales;\r\n  constructor(\r\n    relacion: Relacionales,\r\n    fila: number,\r\n    columna: number,\r\n    cond1: Instruccion,\r\n    cond2: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.relacion = relacion;\r\n    this.cond1 = cond1;\r\n    this.cond2 = cond2;\r\n  }\r\n\r\n  public getNodosAST(): nodoAST {\r\n    let nodo = new nodoAST('RELACIONAL');\r\n    nodo.agregarHijoAST(this.cond1.getNodosAST());\r\n    nodo.agregarHijo(this.relacion + '', 'rel', this.relacion);\r\n    nodo.agregarHijoAST(this.cond2.getNodosAST());\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    let izq, der;\r\n    izq = this.obtieneValor(this.cond1, arbol, tabla);\r\n    if (izq instanceof NodoErrores) return izq;\r\n    der = this.obtieneValor(this.cond2, arbol, tabla);\r\n    if (der instanceof NodoErrores) return der;\r\n    if (\r\n      this.cond1.tipoDato.getTipo() == tipoDato.CADENA &&\r\n      this.cond2.tipoDato.getTipo() != tipoDato.CADENA\r\n    ) {\r\n      return new NodoErrores(\r\n        'ERROR SEMANTICO',\r\n        'NO SE PUEDE COMPARAR UNA CADENA CON OTRO TIPO DE DATO QUE NO SEA CADENA',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (\r\n      this.cond2.tipoDato.getTipo() == tipoDato.CADENA &&\r\n      this.cond1.tipoDato.getTipo() != tipoDato.CADENA\r\n    ) {\r\n      return new NodoErrores(\r\n        'ERROR SEMANTICO',\r\n        'NO SE PUEDE COMPARAR UNA CADENA CON OTRO TIPO DE DATO QUE NO SEA CADENA',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else {\r\n      this.tipoDato.setTipo(tipoDato.BOOLEANO);\r\n      switch (this.relacion) {\r\n        case Relacionales.IGUAL:\r\n          return izq == der;\r\n        case Relacionales.DIFERENTE:\r\n          return izq != der;\r\n        case Relacionales.MENOR:\r\n          return izq < der;\r\n        case Relacionales.MENORIGUAL:\r\n          return izq <= der;\r\n        case Relacionales.MAYOR:\r\n          return izq > der;\r\n        case Relacionales.MAYORIGUAL:\r\n          return izq >= der;\r\n        default:\r\n          return 'what';\r\n      }\r\n    }\r\n  }\r\n  obtieneValor(operando: Instruccion, arbol: Arbol, tabla: tablaSimbolos): any {\r\n    let valor = operando.interpretar(arbol, tabla);\r\n    switch (operando.tipoDato.getTipo()) {\r\n      case tipoDato.ENTERO:\r\n        return parseInt(valor);\r\n      case tipoDato.DECIMAL:\r\n        return parseFloat(valor);\r\n      case tipoDato.CARACTER:\r\n        var da = valor + '';\r\n        var res = da.charCodeAt(0);\r\n        return res;\r\n      case tipoDato.BOOLEANO:\r\n        let dats = valor + '';\r\n        let otr = dats.toLowerCase();\r\n        return parseInt(otr);\r\n      case tipoDato.CADENA:\r\n        return '' + valor;\r\n    }\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n\r\nexport enum Relacionales {\r\n  IGUAL,\r\n  DIFERENTE,\r\n  MAYOR,\r\n  MENOR,\r\n  MAYORIGUAL,\r\n  MENORIGUAL,\r\n  NOIGUAL\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabsinicio',\r\n  templateUrl: './tabsinicio.component.html',\r\n  styleUrls: ['./tabsinicio.component.css']\r\n})\r\nexport class TabsinicioComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group dynamicHeight>\r\n   \r\n      <mat-tab label=\"CONTENIDO 1\">\r\n          <app-contenido-inicio></app-contenido-inicio>\r\n      </mat-tab >\r\n      <mat-tab label=\"CONTENIDO 2\">\r\n      <app-contenido-inicio></app-contenido-inicio>\r\n      </mat-tab >\r\n      <mat-tab label=\"CONTENIDO 3\">\r\n      <app-contenido-inicio></app-contenido-inicio>\r\n      </mat-tab >\r\n    </mat-tab-group>\r\n    ","import Tipo from './Tipo';\r\n\r\nexport default class Simbolo {\r\n  private tipo: Tipo;\r\n  private identificador: String;\r\n  private atributo = new Map<String, String>();\r\n  private linea: String;\r\n  private columna: String;\r\n  private valor: any; //este es el valor que va a recibir\r\n\r\n  private cd3variable:any;\r\n  private temporal\r\n  private ambito:String\r\n  private cdatributo:any;\r\n  constructor(tipo: Tipo, identificador: String, linea: String, columna: String, ambito:String, valor?: any,cd3script?: string) {\r\n    this.tipo = tipo;\r\n    this.identificador = identificador.toLowerCase();\r\n    this.valor = valor;\r\n    this.linea = linea;\r\n    this.columna = columna;\r\n    this.cd3variable= cd3script;\r\n    this.ambito=ambito;\r\n  }\r\n  //getters y setters\r\n  public gettipo(): Tipo {\r\n    return this.tipo;\r\n  }\r\n  public settipo(value: Tipo) {\r\n    this.tipo = value;\r\n  }\r\n  public getidentificador(): String {\r\n    return this.identificador;\r\n  }\r\n  public setidentificador(value: String) {\r\n    this.identificador = value;\r\n  }\r\n  public getvalor(): any {\r\n    return this.valor;\r\n  }\r\n  public setvalor(value: any) {\r\n    this.valor = value;\r\n  }\r\n  \r\n  public agregarAtributo(par1: String, par2: String,linea:String, columna:String, cd3:String) {\r\n    this.atributo.set(par1, par2);\r\n    this.cdatributo=cd3;\r\n    this.linea=linea;\r\n    this.columna=columna;\r\n  }\r\n\r\n  public getAtributo(): Map<String, String> {\r\n    return this.atributo;\r\n  }\r\n\r\n  public setAtributo(atributo: Map<String, String>) {\r\n    this.atributo = atributo;\r\n    \r\n  }\r\n  public getAtributoLinea(){\r\n    return this.linea\r\n  }\r\n  public getAtributoColumna(){\r\n    return this.columna\r\n  }\r\n  public get3DAtributo(){\r\n    return this.cdatributo\r\n  }\r\n\r\n  public getLinea(): String {\r\n    return this.linea;\r\n  }\r\n  public getColumna(): String {\r\n    return this.columna;\r\n  }\r\n  public setLinea(linea: String) {\r\n    this.linea = linea;\r\n  }\r\n  public setColumna(col: String) {\r\n    this.columna = col;\r\n  }\r\n\r\n\r\n  public getcd3Value(etiqueta:String){\r\n    this.cd3variable=etiqueta\r\n  }\r\n  public setcd3Value():String{\r\n    return this.cd3variable\r\n  }\r\n  public igualdadambito():String{\r\n    this.temporal=this.ambito\r\n    return this.ambito\r\n  }\r\n  public setanteriorEntorno(ent :String){\r\n    this.temporal= ent\r\n  }\r\n  public getantriorEntorno():String{\r\n    return this.temporal;\r\n  }\r\n  public getambito():String{\r\n    return this.ambito\r\n  }\r\n}\r\n","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar GramaticaXMLDescPRUEBA = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,4],$V2=[1,10],$V3=[2,13],$V4=[12,14,15],$V5=[5,10,16],$V6=[2,6],$V7=[1,18],$V8=[5,9,10,13,16],$V9=[10,12,14,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"START\":3,\"OBJETO\":4,\"EOF\":5,\"INSTRUCCION\":6,\"CUERPO\":7,\"OBJETOS\":8,\"MENORQUEESPECIAL\":9,\"IDENTIFICADOR\":10,\"L_ATRIBUTOS\":11,\"MAYORQUEESPECIAL\":12,\"MENORQUE\":13,\"SELFCLOSE\":14,\"MAYORQUE\":15,\"SALIDA\":16,\"ATRIBUTO\":17,\"IGUAL\":18,\"CADENA\":19,\"QUOTE\":20,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"CUERPO\",9:\"MENORQUEESPECIAL\",10:\"IDENTIFICADOR\",12:\"MAYORQUEESPECIAL\",13:\"MENORQUE\",14:\"SELFCLOSE\",15:\"MAYORQUE\",16:\"SALIDA\",18:\"IGUAL\",19:\"CADENA\",20:\"QUOTE\"},\r\nproductions_: [0,[3,2],[6,1],[6,1],[8,2],[8,1],[8,0],[4,5],[4,5],[4,8],[4,7],[11,2],[11,1],[11,0],[17,3],[17,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n  console.log($$[$0-1]); return $$[$0-1];\r\nbreak;\r\ncase 2: case 3:\r\n this.$ = $$[$0];\r\nbreak;\r\ncase 4:\r\n $$[$0].push($$[$0-1]); this.$ = $$[$0]; \r\nbreak;\r\ncase 5:\r\n this.$ = [$$[$0]];\r\nbreak;\r\ncase 7: case 8:\r\nthis.$ = new objeto.default($$[$0-3],null,$$[$0-2],$$[$0],_$[$0-4].first_line,_$[$0-4].first_column);\r\nbreak;\r\ncase 9:\r\nthis.$ = new objeto.default($$[$0-6],null,$$[$0-5],$$[$0-3],_$[$0-7].first_line,_$[$0-7].first_column);\r\nbreak;\r\ncase 10:\r\nthis.$ = new objeto.default($$[$0-5],$$[$0-2],$$[$0-4],null,_$[$0-6].first_line,_$[$0-6].first_column);\r\nbreak;\r\ncase 11:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 12:\r\n  this.$ = [$$[$0]];\r\nbreak;\r\ncase 14: case 15:\r\nthis.$=new atributo.default($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column);\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,9:$V0,13:$V1},{1:[3]},{5:[1,5]},{10:[1,6]},{10:[1,7]},{1:[2,1]},{10:$V2,11:8,12:$V3,17:9},o([14,15],$V3,{17:9,11:11,10:$V2}),{12:[1,12]},o($V4,[2,12],{17:9,11:13,10:$V2}),{18:[1,14]},{14:[1,15],15:[1,16]},o($V5,$V6,{6:17,8:19,4:20,7:$V7,9:$V0,13:$V1}),o($V4,[2,11]),{19:[1,21],20:[1,22]},o($V5,$V6,{8:19,4:20,6:23,7:$V7,9:$V0,13:$V1}),o([10,16],$V6,{8:19,4:20,6:24,7:$V7,9:$V0,13:$V1}),o($V8,[2,7]),o($V8,[2,2]),o($V8,[2,3]),o($V5,[2,5],{4:20,8:25,9:$V0,13:$V1}),o($V9,[2,14]),o($V9,[2,15]),o($V8,[2,8]),{10:[1,27],16:[1,26]},o($V8,[2,4]),{10:[1,28]},{15:[1,29]},{15:[1,30]},o($V8,[2,10]),o($V8,[2,9])],\r\ndefaultActions: {5:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\nconst atributo = require(\"./Expresiones/Atributo\");\r\nconst tipo= require(\"./Simbolos/Tipo\");\r\nconst objeto= require(\"./Expresiones/Objeto\");\r\nconst CErrores= require(\"./Excepciones/Errores\")\r\nconst CNodoErrores= require(\"./Excepciones/NodoErrores\")\r\nconst inicio = require(\"../../../componentes/contenido-inicio/contenido-inicio.component\")\r\n\r\n\r\n    var palabra = \"\"\r\n    var palabra1 = \"\"\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:\r\nbreak;\r\ncase 1:this.begin('cuerpo'); return 15\r\nbreak;\r\ncase 2:this.begin('INITIAL');if(palabra.replaceAll(\" \",\"\") == \"\")  return 16; yy_.yytext = palabra; palabra = \"\";if(palabra.replaceAll(\" \",\"\") == \"\") return 7;\r\nbreak;\r\ncase 3:this.begin('INITIAL');  return 13; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 4:this.begin('INITIAL');  return 14; yy_.yytext = palabra; palabra = \"\"; return 7;\r\nbreak;\r\ncase 5:palabra += yy_.yytext;\r\nbreak;\r\ncase 6:return 12\r\nbreak;\r\ncase 7:return 16\r\nbreak;\r\ncase 8:return 14\r\nbreak;\r\ncase 9:return 9\r\nbreak;\r\ncase 10:return 13\r\nbreak;\r\ncase 11:return 18;\r\nbreak;\r\ncase 12: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 19; \r\nbreak;\r\ncase 13: yy_.yytext=yy_.yytext.substr(1,yy_.yyleng-2); return 20; \r\nbreak;\r\ncase 14:return 10;\r\nbreak;\r\ncase 15:return 5\r\nbreak;\r\ncase 16:\r\nbreak;\r\ncase 17:\r\nbreak;\r\ncase 18:\r\nbreak;\r\ncase 19:inicio.listaErrores.push(new CNodoErrores.default(\"Lexico\",\"No se esperaba el caracter: \"+yy_.yytext,yy_.yylloc.first_line,yy_.yylloc.first_column)); console.log(\"Lexico, No se esperaba el caracter: \"+yy_.yytext +\" Linea: \"+ yy_.yylloc.first_line + \"Columna: \" + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:<)/i,/^(?:.)/i,/^(?:\\?>)/i,/^(?:<\\/)/i,/^(?:\\/>)/i,/^(?:<\\?)/i,/^(?:<)/i,/^(?:=)/i,/^(?:\"[^\\\"]*\")/i,/^(?:'[^\\']*')/i,/^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i,/^(?:$)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n+)/i,/^(?:\\s+)/i,/^(?:.)/i],\r\nconditions: {\"Comentario\":{\"rules\":[],\"inclusive\":false},\"xml\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"cuerpo\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = GramaticaXMLDescPRUEBA;\r\nexports.Parser = GramaticaXMLDescPRUEBA.Parser;\r\nexports.parse = function () { return GramaticaXMLDescPRUEBA.parse.apply(GramaticaXMLDescPRUEBA, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nimport Termino from \"./Termino\";\r\n\r\nexport default class Unario extends Instruccion {\r\n    private operando: String;\r\n    private expresion: Instruccion;\r\n    constructor(operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.operando=operando\r\n        this.expresion= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 operacion operando2\r\n        var operadorder = this.expresion.interpretar(arbol, tabla);\r\n        if (operadorder != null) {\r\n            if (this.expresion instanceof Termino) {\r\n                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: \"\", linea: this.fila.toString(), columna: this.columna.toString() }\r\n            }else {\r\n                if (operadorder.contenido != null ) {\r\n                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: \"\", linea: this.fila.toString(), columna: this.columna.toString() }\r\n                }else{\r\n                    if (operadorder.operadorder != null) {\r\n                        if (this.expresion instanceof Termino) {\r\n                            let arm =  operadorder.operador +operadorder.operadorder.toString() \r\n                            return { operadorder: arm, operador: this.operando, operadorizq: \"\", linea: this.fila.toString(), columna: this.columna.toString() }\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","\r\n\r\nimport tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Aritmetica from \"../Expresion/Aritmetica\";\r\nimport Bit from \"../Expresion/Bit\";\r\nimport Identificador from \"../Expresion/Identificador\";\r\nimport Logica from \"../Expresion/Logica\";\r\nimport Relacional from \"../Expresion/Relacional\";\r\nimport Termino from \"../Expresion/Termino\";\r\nimport Unario from \"../Expresion/Unario\";\r\nimport { reporteOp } from \"../Reportes/reporteOp\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\nexport default class Asignacion extends Instruccion {\r\n\r\n    private Temporales: Instruccion;\r\n    private Expresion: Instruccion;\r\n    constructor(termino: Instruccion, expresion: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Temporales = termino\r\n        this.Expresion = expresion\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // si es termino y si es expresion las instrucciones\r\n        let tem: Termino\r\n        let cadena = \"\"\r\n        let idtemp = \"\"\r\n        if (this.Temporales != null) {\r\n            if (this.Temporales instanceof Termino) {\r\n                let a = this.Temporales.interpretar(arbol, tabla)\r\n                idtemp = a.contenido;\r\n                cadena += a.contenido + \"=\"\r\n\r\n            } else if (this.Temporales instanceof Identificador) {\r\n                let a = this.Temporales.interpretar(arbol, tabla)\r\n                idtemp = a.contenido;\r\n                cadena += a.contenido + \"=\"\r\n            } else {\r\n                idtemp = this.Temporales.toString();\r\n                cadena += this.Temporales.toString() + \"=\"\r\n            }\r\n        }\r\n        if (this.Expresion != null) {\r\n            if (this.Expresion instanceof Aritmetica) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                if (a.operadorder == idtemp || a.operadorizq == idtemp) {\r\n                    if (a.operadorder === \"0\" && a.operador === \"+\" || a.operadorder == 0 && a.operador === \"+\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 6\", idtemp + \"=\" + idtemp + \"+0\" + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"+\" || a.operadorizq == 0 && a.operador === \"+\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 6\", idtemp + \"=\" + \"0+\" + idtemp + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorder === \"0\" && a.operador === \"-\" || a.operadorder == 0 && a.operador === \"-\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 7\", idtemp + \"=\" + idtemp + \"-0\" + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"-\" || a.operadorizq == 0 && a.operador === \"-\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 7\", idtemp + \"=\" + \"0-\" + idtemp + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorder === \"1\" && a.operador === \"*\" || a.operadorder == 1 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 8\", idtemp + \"=\" + idtemp + \"*1\" + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorizq === \"1\" && a.operador === \"*\" || a.operadorizq == 1 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 8\", idtemp + \"=\" + \"1*\" + idtemp + \";\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorder === \"1\" && a.operador === \"/\" || a.operadorder == 1 && a.operador === \"/\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 9\", idtemp + \"=\" + idtemp + \"/1;\", \"\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return \"\"\r\n                    } else if (a.operadorizq === \"1\" && a.operador === \"/\" || a.operadorizq == 1 && a.operador === \"/\") {\r\n                        return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                    } else {\r\n                        return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                    }\r\n                } else {\r\n                    if (a.operadorder === \"0\" && a.operador === \"+\" || a.operadorder == 0 && a.operador === \"+\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 10\", idtemp + \"= \" + a.operadorizq + \"+0;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"+\" || a.operadorizq == 0 && a.operador === \"+\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 10\", idtemp + \"= 0+\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorder + \";\"\r\n                    } else if (a.operadorder === \"0\" && a.operador === \"-\" || a.operadorder == 0 && a.operador === \"-\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 11\", idtemp + \"=\" + a.operadorizq + \"-0;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"-\" || a.operadorizq == 0 && a.operador === \"-\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 11\", idtemp + \"= 0-\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorder + \";\"\r\n                    } else if (a.operadorder === \"1\" && a.operador === \"*\" || a.operadorder == 1 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 12\", idtemp + \"=\" + a.operadorizq + \"*1;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorizq === \"1\" && a.operador === \"*\" || a.operadorizq == 1 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 12\", idtemp + \"= 1*\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorder + \";\"\r\n                    } else if (a.operadorder === \"2\" && a.operador === \"*\" || a.operadorder == 2 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 14\", idtemp + \"=\" + a.operadorizq + \"*2;\", idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorizq === \"2\" && a.operador === \"*\" || a.operadorizq == 2 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 14\", idtemp + \"= 2*\" + a.operadorder + \";\", idtemp + \"=\" + a.operadorder + \"+\" + a.operadorder + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \"+\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorder === \"0\" && a.operador === \"*\" || a.operadorder == 0 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 15\", idtemp + \"=\" + a.operadorizq + \"*0;\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + \"0;\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"*\" || a.operadorizq == 0 && a.operador === \"*\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 15\", idtemp + \"= 0*\" + a.operadorder + \";\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + \"0;\"\r\n                    } else if (a.operadorder === \"1\" && a.operador === \"/\" || a.operadorder == 1 && a.operador === \"/\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 13\", idtemp + \"=\" + a.operadorizq + \"/1;\", idtemp + \"=\" + a.operadorizq + \";\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + a.operadorizq + \";\"\r\n                    } else if (a.operadorizq === \"0\" && a.operador === \"/\" || a.operadorizq == 0 && a.operador === \"/\") {\r\n                        let report = new reporteOp(\"Simplificación algebraica y por fuerza\", \"Regla 16\", idtemp + \"= 0/\" + a.operadorder + \";\", idtemp + \"=\" + \"0;\", a.linea, a.columna)\r\n                        arbol.setReporte(report)\r\n                        return idtemp + \"=\" + \"0;\"\r\n                    } else if (a.operadorizq === \"1\" && a.operador === \"/\" || a.operadorder == 1 && a.operador === \"/\") {\r\n                        return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                    } else {\r\n                        return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n                    }\r\n                }\r\n            } else if (this.Expresion instanceof Logica) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Relacional) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Bit) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Unario) {\r\n                let a = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + a.operadorizq + a.operador + a.operadorder + \";\"\r\n            } else if (this.Expresion instanceof Identificador) {\r\n                //SE HACE OTRO PROCEDIMIENTO\r\n                let term2 = this.Expresion.interpretar(arbol, tabla)\r\n                return idtemp + \"=\" + term2.contenido\r\n            } else if (this.Expresion instanceof Termino) {\r\n                //SE HACE OTRO PROCEDIMIENTO\r\n                let term2 = this.Expresion.interpretar(arbol, tabla)\r\n            \r\n                let result = tabla.thisDeclarationExist(idtemp, term2.contenido)\r\n               \r\n                if (result == \"\") {\r\n                    let report = new reporteOp(\"Eliminacion de instrucciones redundants de carga y almacenamiento\", \"Regla 5\", idtemp + \"=\" + term2.contenido, \"REMOVIDO\", term2.fila, term2.columna)\r\n                    arbol.setReporte(report)\r\n                }\r\n\r\n                return result\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n","import NodoErrores from \"src/app/Backend/XML/Analizador/Excepciones/NodoErrores\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Variable from \"./Variable\";\r\n\r\nexport default class Aritmetica extends Instruccion {\r\n\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  private operando1: Instruccion | undefined;\r\n  private operando2: Instruccion | undefined;\r\n  private operandoUnico: Instruccion | undefined;\r\n  private operador: Operadores;\r\n  private Resultado = \"\"\r\n  private TemResultado = \"\"\r\n  private tree: Arbol;\r\n  constructor(\r\n    operador: Operadores,\r\n    fila: number,\r\n    columna: number,\r\n    op1: Instruccion,\r\n    op2?: Instruccion\r\n  ) {\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.operador = operador;\r\n    if (!op2) this.operandoUnico = op1;\r\n    else {\r\n      this.operando1 = op1;\r\n      this.operando2 = op2;\r\n    }\r\n  }\r\n  public getNodoAST(): nodoAST {\r\n    let nodo = new nodoAST('ARITMETICA');\r\n    if (this.operandoUnico != null) {\r\n      nodo.agregarHijo(this.operador + '');\r\n      nodo.agregarHijoAST(this.operandoUnico.getNodoAST());\r\n    } else {\r\n      nodo.agregarHijoAST(this.operando1?.getNodoAST());\r\n      nodo.agregarHijo(this.operador + '', 'ar', this.operador);\r\n      nodo.agregarHijoAST(this.operando2?.getNodoAST());\r\n    }\r\n    return nodo;\r\n  }\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n    this.tree = arbol;\r\n    let izq, der, uno;\r\n    izq = der = uno = null;\r\n    if (this.operandoUnico != null) {\r\n      uno = this.operandoUnico.interpretar(arbol, tabla, tablaxml)\r\n      if (uno instanceof NodoErrores) return uno;\r\n    } else {\r\n      izq = this.operando1?.interpretar(arbol, tabla, tablaxml)\r\n      if (this.operando1 instanceof Variable) {\r\n        var buscar1 = tabla.getVariable(izq);\r\n        if (buscar1 != null) {\r\n          izq = buscar1.getvalor()\r\n        }\r\n        var cambiandotipo\r\n        try {\r\n          cambiandotipo = parseInt(izq)\r\n          this.operando1.tipoDato.setTipo(tipoDato.ENTERO)\r\n        } catch (error) {\r\n          try {\r\n            cambiandotipo = parseFloat(izq)\r\n            this.operando1.tipoDato.setTipo(tipoDato.DECIMAL)\r\n          } catch (error) {\r\n            this.operando1.tipoDato.setTipo(tipoDato.CADENA)\r\n          }\r\n        }\r\n      }\r\n      der = this.operando2?.interpretar(arbol, tabla, tablaxml)\r\n      if (this.operando2 instanceof Variable) {\r\n        var buscar2 = tabla.getVariable(der);\r\n        if (buscar2 != null) {\r\n          der = buscar2.getvalor()\r\n        }\r\n        var cambiandotipo\r\n        try {\r\n          cambiandotipo = parseInt(izq)\r\n          this.operando2.tipoDato.setTipo(tipoDato.ENTERO)\r\n        } catch (error) {\r\n          try {\r\n            cambiandotipo = parseFloat(izq)\r\n            this.operando2.tipoDato.setTipo(tipoDato.DECIMAL)\r\n          } catch (error) {\r\n            this.operando2.tipoDato.setTipo(tipoDato.CADENA)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    switch (this.operador) {\r\n      case Operadores.SUMA:\r\n        arbol.codigo3d.push(\"// SUMA de operadores\");\r\n        return this.operador1Suma(izq, der);\r\n      case Operadores.RESTA:\r\n        arbol.codigo3d.push(\"// RESTA de operadores\");\r\n        return this.operador1Resta(izq, der);\r\n      case Operadores.MULTIPLICACION:\r\n        arbol.codigo3d.push(\"// MULTIPLICACION de operadores\");\r\n        return this.operador1Multi(izq, der);\r\n      case Operadores.DIVISION:\r\n        arbol.codigo3d.push(\"// DIVISION de operadores\");\r\n        return this.operador1Division(izq, der);\r\n      case Operadores.MODULADOR:\r\n        arbol.codigo3d.push(\"// MODULADOR de operadores\");\r\n        return this.operador1Mod(izq, der);\r\n      case Operadores.MENOSNUM:\r\n        arbol.codigo3d.push(\"// UNARIO MENOS de operadores\");\r\n        return this.opMenosUnario(uno);\r\n      default:\r\n        return new NodoErrores(\r\n          'ERROR SEMANTICO',\r\n          'OPERADOR INVALIDO',\r\n          this.fila,\r\n          this.columna\r\n        );\r\n    }\r\n  }\r\n\r\n  /*----------------------------------------------------------MENOSUNARIO------------------------------------------------- */\r\n  private opMenosUnario(izq: any) {\r\n    let opUn = this.operandoUnico?.tipoDato.getTipo();\r\n    switch (opUn) {\r\n      case tipoDato.ENTERO:\r\n        this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n        return parseInt(izq) * -1;\r\n      case tipoDato.DECIMAL:\r\n        this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n        return parseFloat(izq) * -1.0;\r\n    }\r\n  }\r\n  /*----------------------------------------------------------SUMA------------------------------------------------- */\r\n  private operador1Suma(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n    op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Suma(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Suma(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Suma(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Suma(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Suma(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Suma(numero: number, op2: any, izq: any, der: any) {\r\n    var c1 = this.tree.getContadort()\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          return parseInt(izq) + parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna entero\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"BooleanToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"BooleanToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(izq) + 1 : parseInt(izq);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) + res;\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          return parseFloat(izq) + parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseFloat(izq) + 1 : parseFloat(izq);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna decimal\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) + res;\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = izq + '';\r\n          let otr = dats.toLowerCase();\r\n          if (otr == 'true') return parseInt(der) + 1;\r\n          return parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats1 = izq + '';\r\n          let otr1 = dats1.toLowerCase();\r\n          return otr1 == 'true' ? parseFloat(der) + 1 : parseFloat(der);\r\n        case tipoDato.CADENA: //retorna cadena\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna cadena\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.DECIMAL: //retorna cadena\r\n          this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.BOOLEANO: //retorna cadena\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"BooleanToString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CADENA: //retorna cadena\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n        this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n        this.tree.codigo3d.push(\"concatenarString();\");\r\n        this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n        this.tree.codigo3d.push(\"concatenarString();\");\r\n        this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          return izq + '' + der;\r\n        case tipoDato.CARACTER: //retorna cadena\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var dato = der;\r\n          return izq + '' + dato;\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 + parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 + parseFloat(der);\r\n        case tipoDato.CADENA: //retorna cadena\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var otro11 = izq;\r\n          return otro11 + '' + der;\r\n        case tipoDato.CARACTER: //retorna cadena\r\n        this.tree.codigo3d.push(\"$t\" + c1 + \"=hp;\");\r\n          this.tree.codigo3d.push(\"$t0=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.tree.codigo3d.push(\"$t0=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"concatenarString();\");\r\n          this.Resultado = \"$t\" + c1 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.CADENA);\r\n          var otro = der;\r\n          var otro1 = izq;\r\n          return otro1 + '' + otro;\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    }\r\n  }\r\n  /*----------------------------------------------------------RESTA------------------------------------------------- */\r\n  private operador1Resta(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n    op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Resta(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Resta(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Resta(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Resta(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Resta(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Resta(numero: number, op2: any, izq: any, der: any) {\r\n    var c12 = this.tree.getContadort()\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) - parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(izq) - 1 : parseInt(izq);\r\n        case tipoDato.CARACTER: //retorna entero\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) - res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) - parseFloat(der);\r\n        case tipoDato.BOOLEANO: //retorna decimal\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats = der + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseFloat(izq) - 1 : parseFloat(izq);\r\n        case tipoDato.CARACTER: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) - res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 3) {\r\n      \r\n      //boolean\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          let dats = izq + '';\r\n          let otr = dats.toLowerCase();\r\n          return otr == 'true' ? parseInt(der) - 1 : parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          let dats1 = izq + '';\r\n          let otr1 = dats1.toLowerCase();\r\n          return otr1 == 'true' ? parseFloat(der) - 1 : parseFloat(der);\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 - parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c12 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c12 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 - parseFloat(der);\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    }\r\n  }\r\n  /*----------------------------------------------------------MULTIPLICACION------------------------------------------------- */\r\n  private operador1Multi(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n    op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Multi(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Multi(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Multi(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Multi(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Multi(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Multi(numero: number, op2: any, izq: any, der: any) {\r\n    var c13 = this.tree.getContadort()\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) * parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.CARACTER: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseInt(izq) * res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) * parseFloat(der);\r\n        case tipoDato.CARACTER: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return parseFloat(izq) * res;\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 * parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return res1 * parseFloat(der);\r\n        default:\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    }\r\n  }\r\n  /*----------------------------------------------------------DIVISION------------------------------------------------- */\r\n  private operador1Division(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n    op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Division(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Division(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Division(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Division(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Division(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Division(numero: number, op2: any, izq: any, der: any) {\r\n    var c13 = this.tree.getContadort()\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseInt(izq) / parseInt(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.CARACTER: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return res != 0\r\n            ? parseInt(izq) / res\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return der != 0\r\n            ? parseFloat(izq) / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.CARACTER: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da = der + '';\r\n          var res = da.charCodeAt(0);\r\n          return der != 0\r\n            ? parseFloat(izq) / res\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n          //error\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return der != 0\r\n            ? res1 / parseInt(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c13 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c13 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          var da1 = izq + '';\r\n          var res1 = da1.charCodeAt(0);\r\n          return der != 0\r\n            ? res1 / parseFloat(der)\r\n            : 'NO SE PUEDE DIVIDIR SOBRE CERO';\r\n        default:\r\n          this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n          //error semantico\r\n          return new NodoErrores(\r\n            'SEMANTICO',\r\n            'TIPO DE DATO NO PERMITIDO',\r\n            this.fila,\r\n            this.columna\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  /*----------------------------------------------------------MODULACION------------------------------------------------- */\r\n  private operador1Mod(izq: any, der: any) {\r\n    let op1 = this.operando1?.tipoDato.getTipo();\r\n    let op2 = this.operando2?.tipoDato.getTipo();\r\n    switch (\r\n    op1 //operador 1\r\n    ) {\r\n      case tipoDato.ENTERO:\r\n        return this.op2Mod(1, op2, izq, der);\r\n      case tipoDato.DECIMAL:\r\n        return this.op2Mod(2, op2, izq, der);\r\n      case tipoDato.BOOLEANO:\r\n        return this.op2Mod(3, op2, izq, der);\r\n      case tipoDato.CADENA:\r\n        return this.op2Mod(4, op2, izq, der);\r\n      case tipoDato.CARACTER:\r\n        return this.op2Mod(5, op2, izq, der);\r\n    }\r\n  }\r\n  private op2Mod(numero: number, op2: any, izq: any, der: any) {\r\n    var c14 = this.tree.getContadort()\r\n    if (numero == 1) {\r\n      //entero\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna entero\r\n        this.tree.codigo3d.push(\"$t\" + c14 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c14 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.ENTERO);\r\n          return parseInt(izq) % parseInt(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c14 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c14 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n       \r\n      }\r\n      this.tree.codigo3d.push(\"$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 2) {\r\n      //decimal\r\n      switch (\r\n      op2 //OPERADOR 2\r\n      ) {\r\n        case tipoDato.ENTERO: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c14 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c14 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n        case tipoDato.DECIMAL: //retorna decimal\r\n        this.tree.codigo3d.push(\"$t\" + c14 + \"=hp;\"); // guardara el inicio de la cadena\r\n          this.tree.codigo3d.push(\"$t2=\" + izq + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.tree.codigo3d.push(\"$t2=\" + der + \";\");\r\n          this.tree.codigo3d.push(\"NumberToString();\");\r\n          this.Resultado = \"$t\" + c14 + \"\"\r\n          this.tipoDato = new Tipo(tipoDato.DECIMAL);\r\n          return parseFloat(izq) % parseFloat(der);\r\n        \r\n      }\r\n      this.tree.codigo3d.push(\"$$t0=hp;\");\r\n      this.tree.codigo3d.push(\"$$t1=-1;\");\r\n      this.tree.codigo3d.push(\"guardarString();\");\r\n    } else if (numero == 3) {\r\n      //boolean\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 4) {\r\n      //cadena\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    } else if (numero == 5) {\r\n      //caracter\r\n      //error\r\n      return new NodoErrores(\r\n        'SEMANTICO',\r\n        'TIPO DE DATO NO PERMITIDO',\r\n        this.fila,\r\n        this.columna\r\n      );\r\n    }\r\n  }\r\n}\r\nexport enum Operadores {\r\n  SUMA,\r\n  RESTA,\r\n  MULTIPLICACION,\r\n  DIVISION,\r\n  POTENCIA,\r\n  MODULADOR,\r\n  MENOSNUM,\r\n}\r\n","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo from \"../Simbolo/Tipo\";\r\n\r\nexport abstract class Instruccion {\r\n    public tipoDato: Tipo;\r\n    public fila: number;\r\n    public columna: number;\r\n    constructor(tipo: Tipo, fila: number, columna: number) {\r\n      this.tipoDato = tipo;\r\n      this.fila = fila;\r\n      this.columna = columna;\r\n    }\r\n  \r\n    abstract interpretar(arbol: Arbol, tabla: tablaSimbolos): any;\r\n    \r\n  }","import Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo from '../Simbolos/Tipo';\r\nimport nodoAST from './nodoAST';\r\nexport abstract class Instruccion {\r\n  public tipoDato: Tipo;\r\n  public fila: number;\r\n  public columna: number;\r\n  constructor(tipo: Tipo, fila: number, columna: number) {\r\n    this.tipoDato = tipo;\r\n    this.fila = fila;\r\n    this.columna = columna;\r\n  }\r\n\r\n  abstract interpretar(arbol: Arbol, tabla: tablaSimbolos): any;\r\n  abstract getNodosAST(): nodoAST;\r\n  abstract codigo3D(arbol: Arbol, tabla: tablaSimbolos):any;\r\n  \r\n}\r\n","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport tablaSimbolos from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class IdentificadorPredicado extends Instruccion {\r\n   \r\n    public Identificador: string;\r\n    public Corchetes: Instruccion\r\n    constructor(Identificador: string, lcorchetes:Instruccion, fila: number, columna: number){\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Identificador = Identificador;\r\n        this.Corchetes= lcorchetes\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo= new nodoAST('IDENTIFICADOR'); //PADRE SELECT\r\n        /**TIPOS DE ATRIBUTOS\r\n         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)\r\n         * ATRIBUTOS SELECT\r\n         * ATRIBUTOS MULTIPLICACION\r\n         * ATRIBUTOS IDENTIFICADOR L_CORCHETES \r\n         * libro[][]\r\n         * @año[]\r\n         */\r\n        if(this.Identificador!=null){\r\n            nodo.agregarHijo(\"identificador\");\r\n            nodo.agregarHijo(this.Identificador);\r\n            \r\n        }\r\n        \r\n        if(this.Corchetes!=null){\r\n            \r\n            nodo.agregarHijoAST(this.Corchetes.getNodosAST())\r\n           \r\n        }\r\n        \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n      }\r\n}","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\nexport default class MultipleComa extends Instruccion {\r\n\r\n    private expresion1: Instruccion;\r\n    private operando: String;\r\n    private expresion2: Instruccion;\r\n    constructor(expresion1:Instruccion,operando:String, expresion2: Instruccion, fila: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.expresion1 = expresion1\r\n        this.operando=operando\r\n        this.expresion2= expresion2\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        // operando1 , operando2\r\n        var operadorizq = this.expresion1.interpretar(arbol, tabla);\r\n        var operadorder = this.expresion2.interpretar(arbol, tabla);\r\n        let cadena=\"\"\r\n        cadena+= operadorizq.contenido+\",\"+operadorder.contenido;\r\n        return cadena\r\n    }\r\n\r\n}\r\n","\r\nimport nodoAST from \"src/app/Backend/XML/Analizador/Abstracto/nodoAST\";\r\nimport Arbol from \"src/app/Backend/XML/Analizador/Simbolos/Arbol\";\r\nimport tablaSimbolos from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport Tipo from \"src/app/Backend/XML/Analizador/Simbolos/Tipo\";\r\nimport { tipoDato } from \"src/app/Backend/XML/Analizador/Simbolos/Tipo\";\r\nimport { Instruccion } from \"src/app/Backend/XML/Analizador/Abstracto/Instruccion\";\r\nimport { reporteTabla } from \"../Reportes/reporteTabla\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\n\r\nexport default class Atributo extends Instruccion {\r\n\r\n  public identificador: string;\r\n  public valor: string;\r\n  public linea: number;\r\n  public columna: number;\r\n\r\n  constructor(identificador: string, valor: string, linea: number, columna: number) {\r\n    super(new Tipo(tipoDato.ATRIBUTO), linea, columna);\r\n    this.identificador = identificador;\r\n    this.valor = valor;\r\n    linea = this.linea;\r\n    columna = this.columna;\r\n  }\r\n\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    return { identificador: this.identificador, valor: this.valor, linea: this.fila, columna: this.columna }\r\n  }\r\n\r\n  public getNodo(): nodoAST {\r\n\r\n    let nodo = new nodoAST('ATRIBUTO'); //PADRE ATRIBUTO\r\n\r\n    var padreidentificador = new nodoAST('IDENTIFICADOR'); //PADRE IDENTIFICADOR\r\n    padreidentificador.agregarHijo(this.identificador);\r\n    nodo.agregarHijoAST(padreidentificador);\r\n    let igual = new nodoAST('=')\r\n    nodo.agregarHijoAST(igual);\r\n\r\n    var padre = new nodoAST(\"VALOR\"); //PADRE IDENTIFICADOR\r\n    padre.agregarHijo(this.valor)\r\n    nodo.agregarHijoAST(padre);\r\n\r\n\r\n    return nodo;\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    var simbolo\r\n    let stackID = arbol.getSTACK();\r\n    let contadorID = arbol.getContadort(); //temporales\r\n    arbol.codigo3d.push(`// declaracion atributo ${this.identificador}`);\r\n    arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n\r\n    let data: string = this.valor + \"\";\r\n    let estado = 0;\r\n    for (let x = 0; x < data.length; x++) {\r\n      const iterator = data[x];\r\n      switch (estado) {\r\n        case 0: {\r\n          if (iterator == \"\\\\\") { estado = 1; continue; }\r\n          arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n          arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n          arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n          arbol.codigo3d.push(\"guardarString();\");\r\n          break;\r\n        }\r\n        case 1:\r\n          {\r\n            let assci = 0;\r\n            if (iterator == \"n\") { assci = 10; }\r\n            else if (iterator == \"\\\"\") { assci = 34; }\r\n            else if (iterator == \"\\\\\") { assci = 92 }\r\n            else if (iterator == \"r\") { assci = 10 }\r\n            else if (iterator == \"t\") { assci = 9; }\r\n            else {\r\n              arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n              arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n              arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n              arbol.codigo3d.push(\"guardarString();\");\r\n              arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n              arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n              arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n              arbol.codigo3d.push(\"guardarString();\");\r\n            }\r\n            arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n            arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n            arbol.codigo3d.push(\"guardarString();\");\r\n            estado = 0;\r\n            break;\r\n          }\r\n      }\r\n\r\n    }\r\n    arbol.codigo3d.push(\"$t0=hp;\");\r\n    arbol.codigo3d.push(\"$t1=-1;\");\r\n    arbol.codigo3d.push(\"guardarString();\");\r\n    const contadort = arbol.getContadort();\r\n    arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n    arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n   \r\n    \r\n    return { identificador: this.identificador, valor: this.valor, linea: this.fila, columna: this.columna, cd3script: `$t${contadorID}` }\r\n  }\r\n}\r\n","import { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class AtributosPredicado extends Instruccion {\r\n   \r\n    public Identificador: string;\r\n    public Corchetes: Instruccion\r\n    constructor(select: string, lcorchetes:Instruccion, fila: number, columna: number){\r\n        super(new Tipo(tipoDato.CADENA), fila, columna);\r\n        this.Identificador = select\r\n        this.Corchetes= lcorchetes\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getNodosAST(): nodoAST {\r\n        var nodo= new nodoAST('ATRIBUTOS'); //PADRE SELECT\r\n        /**TIPOS DE ATRIBUTOS\r\n         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)\r\n         * ATRIBUTOS SELECT\r\n         * ATRIBUTOS MULTIPLICACION\r\n         * ATRIBUTOS IDENTIFICADOR L_CORCHETES \r\n         * libro[][]\r\n         * @año[]\r\n         */\r\n        if(this.Identificador!=null){\r\n            nodo.agregarHijo(\"@\");\r\n            nodo.agregarHijo(this.Identificador);\r\n            \r\n        }\r\n        \r\n        if(this.Corchetes!=null){\r\n            \r\n            nodo.agregarHijoAST(this.Corchetes.getNodosAST())\r\n           \r\n        }\r\n        \r\n        return nodo;\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error('Method not implemented.');\r\n      }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ArbolASTComponent } from './paginas/arbol-ast/arbol-ast.component';\r\nimport { ErroresComponent } from './paginas/errores/errores.component';\r\nimport { InicioComponent } from './paginas/inicio/inicio.component';\r\nimport { TablaSimbolosComponent } from './paginas/tabla-simbolos/tabla-simbolos.component';\r\nimport {GramaticalReportComponent} from './paginas/gramatical-report/gramatical-report.component'\r\nimport { AstDescComponent } from './paginas/ast-desc/ast-desc.component';\r\nimport { XpathAscAstComponent } from './paginas/xpath-asc-ast/xpath-asc-ast.component';\r\nimport { ReporteOptimizacionComponent } from './paginas/reporte-optimizacion/reporte-optimizacion.component';\r\nimport { TablasimbolosXqueryModule } from './paginas/tablasimbolos-xquery/tablasimbolos-xquery.module';\r\n\r\nconst routes: Routes = [\r\n  { path: 'gramatical', component: GramaticalReportComponent },\r\n // { path: 'gramatical', component: ErroresComponent },\r\n  { path: 'ast', component: ArbolASTComponent },\r\n  { path: 'ast-desc', component: AstDescComponent },\r\n  { path: 'xpath-ast', component: XpathAscAstComponent },\r\n  { path: 'errores', component: ErroresComponent },\r\n  { path: 'inicio', component: InicioComponent },\r\n  { path: 'optimo', component: ReporteOptimizacionComponent },\r\n  { path: 'simbolos', component: TablaSimbolosComponent },\r\n  { path: 'simbolos-xquery', component: TablasimbolosXqueryModule },\r\n\r\n  { path: '', component: InicioComponent },\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\n\r\nexport default class ForToSimple extends Instruccion {\r\n\r\n    private variable: Instruccion;\r\n    private respuesta: Instruccion;\r\n    private num1: number;\r\n    private num2: number\r\n\r\n    constructor(variable: Instruccion, respuesta: Instruccion, num1: number, num2: number, linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.variable = variable;\r\n        this.respuesta = respuesta;\r\n        this.num1 = num1;\r\n        this.num2 = num2;\r\n    }\r\n\r\n    public interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var nu1 = this.num1\r\n        var nu2 = this.num2\r\n        let cadena=\"\"\r\n\r\n        for (let index = nu1; index <=nu2; index++) {\r\n            cadena+=\"$\"+index + \"\\n\"\r\n            \r\n        }\r\n        return cadena;\r\n\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import Tipo from './Tipo';\r\n\r\nexport default class Simbolo {\r\n  private tipo: Tipo;\r\n  private identificador: String;\r\n  private atributo = new Map<String, String>();\r\n  private linea: String;\r\n  private columna: String;\r\n  private valor: any; //este es el valor que va a recibir\r\n\r\n  private cd3variable:any;\r\n  private temporal\r\n  private ambito:String\r\n  private cdatributo:any;\r\n  constructor(tipo: Tipo, identificador: String, linea: String, columna: String, ambito:String, valor?: any,cd3script?: string) {\r\n    this.tipo = tipo;\r\n    this.identificador = identificador.toLowerCase();\r\n    this.valor = valor;\r\n    this.linea = linea;\r\n    this.columna = columna;\r\n    this.cd3variable= cd3script;\r\n    this.ambito=ambito;\r\n  }\r\n  //getters y setters\r\n  public gettipo(): Tipo {\r\n    return this.tipo;\r\n  }\r\n  public settipo(value: Tipo) {\r\n    this.tipo = value;\r\n  }\r\n  public getidentificador(): String {\r\n    return this.identificador;\r\n  }\r\n  public setidentificador(value: String) {\r\n    this.identificador = value;\r\n  }\r\n  public getvalor(): any {\r\n    return this.valor;\r\n  }\r\n  public setvalor(value: any) {\r\n    this.valor = value;\r\n  }\r\n  \r\n  public agregarAtributo(par1: String, par2: String,linea:String, columna:String, cd3:String) {\r\n    this.atributo.set(par1, par2);\r\n    this.cdatributo=cd3;\r\n    this.linea=linea;\r\n    this.columna=columna;\r\n  }\r\n\r\n  public getAtributo(): Map<String, String> {\r\n    return this.atributo;\r\n  }\r\n\r\n  public setAtributo(atributo: Map<String, String>) {\r\n    this.atributo = atributo;\r\n    \r\n  }\r\n  public getAtributoLinea(){\r\n    return this.linea\r\n  }\r\n  public getAtributoColumna(){\r\n    return this.columna\r\n  }\r\n  public get3DAtributo(){\r\n    return this.cdatributo\r\n  }\r\n\r\n  public getLinea(): String {\r\n    return this.linea;\r\n  }\r\n  public getColumna(): String {\r\n    return this.columna;\r\n  }\r\n  public setLinea(linea: String) {\r\n    this.linea = linea;\r\n  }\r\n  public setColumna(col: String) {\r\n    this.columna = col;\r\n  }\r\n\r\n\r\n  public getcd3Value(etiqueta:String){\r\n    this.cd3variable=etiqueta\r\n  }\r\n  public setcd3Value():String{\r\n    return this.cd3variable\r\n  }\r\n  public igualdadambito():String{\r\n    this.temporal=this.ambito\r\n    return this.ambito\r\n  }\r\n  public setanteriorEntorno(ent :String){\r\n    this.temporal= ent\r\n  }\r\n  public getantriorEntorno():String{\r\n    return this.temporal;\r\n  }\r\n  public getambito():String{\r\n    return this.ambito\r\n  }\r\n}","\r\nimport { Instruccion } from '../Abstracto/Instruccion';\r\nimport nodoAST from '../Abstracto/nodoAST';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport Identificador from '../Expresiones/Identificador';\r\nimport Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolos from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport Tipo, { tipoDato } from '../Simbolos/Tipo';\r\n\r\nexport default class Axes extends Instruccion {\r\n \r\n  public Axes: string;\r\n  public Expresion: Instruccion\r\n  constructor(barra1: string,expresion:Instruccion, fila: number, columna: number) {\r\n\r\n    super(new Tipo(tipoDato.ENTERO), fila, columna);\r\n    this.Axes = barra1\r\n    this.Expresion= expresion\r\n  }\r\n  public getNodosAST(): nodoAST {\r\n    var nodo= new nodoAST('AXES'); //PADRE SELECT\r\n    var nodsBarras= new nodoAST(this.Axes)\r\n    nodo.agregarHijoAST(nodsBarras)\r\n    if(this.Expresion!=null){\r\n        \r\n          nodo.agregarHijoAST(this.Expresion.getNodosAST())\r\n    }\r\n    \r\n    return nodo;\r\n  }\r\n  interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","import Arbol from '../Simbolos/Arbol';\r\nimport tablaSimbolosxml from '../../../XML/Analizador/Simbolos/tablaSimbolos';\r\nimport tablaSimbolos from '../Simbolos/tablaSimbolos'\r\nimport nodoAST from './nodoAST';\r\nimport Tipo from '../Simbolos/Tipo';\r\nexport abstract class  Instruccion\r\n{\r\n  public tipoDato: Tipo;\r\n  public fila: number;\r\n  public columna: number;\r\n  constructor(tipo: Tipo, fila: number, columna: number) {\r\n    this.tipoDato = tipo;\r\n    this.fila = fila;\r\n    this.columna = columna;\r\n  }\r\n  abstract interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml:tablaSimbolosxml): any;\r\n  abstract getNodoAST(): nodoAST;\r\n  abstract codigo3D(arbol: Arbol, tabla:tablaSimbolos):any;\r\n}","\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Declaracion from \"./Declaracion\";\r\n\r\n\r\nexport default class Funcion extends Instruccion {\r\n    public Identificador: String;\r\n    public Parametros: Instruccion[];\r\n    public Tipo: Tipo;\r\n    public Bloque: Instruccion[];\r\n\r\n    constructor(identificador: String, parametros: Instruccion[], tipo: Tipo, bloque: Instruccion[], linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.Identificador = identificador;\r\n        this.Parametros = parametros;\r\n        this.Tipo = tipo;\r\n        this.Bloque = bloque;\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n        var listaelementos=\"\"\r\n        if (this.Parametros != null) {\r\n            this.Parametros.forEach(element => {\r\n                if(element instanceof Declaracion){\r\n                    listaelementos+= element.Tipo\r\n                }\r\n                \r\n               \r\n            });\r\n            var simbolo = new Simbolo(this.Tipo, this.Identificador+listaelementos, this.fila.toString(), this.columna.toString(),\"Global\", this.Parametros);\r\n            tabla.setVariable(simbolo)\r\n            var simbolo = new Simbolo(this.Tipo, this.Identificador, this.fila.toString(), this.columna.toString(),\"Global\", this.Bloque);\r\n            tabla.setVariable(simbolo)\r\n            \r\n        } else {\r\n            var simbolo = new Simbolo(this.Tipo, this.Identificador+\"par\", this.fila.toString(), this.columna.toString(),\"Global\", this.Bloque);\r\n            tabla.setVariable(simbolo)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport nodoAST from \"../Abstracto/nodoAST\";\r\nimport Arbol from \"../Simbolos/Arbol\";\r\nimport tablaSimbolosxml from \"src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport tablaSimbolos from \"../Simbolos/tablaSimbolos\";\r\nimport Tipo, { tipoDato } from \"../Simbolos/Tipo\";\r\nimport Simbolo from \"../Simbolos/Simbolo\";\r\nimport Aritmetica from \"../Expresiones/Aritmetica\";\r\nimport BarrasNodo from \"./BarrasNodo\";\r\nimport Variable from \"../Expresiones/Variable\";\r\n\r\nexport default class Let extends Instruccion {\r\n\r\n    private variable: String;\r\n    private expresion: Instruccion | String;\r\n    private retorno: Instruccion | String;\r\n\r\n    constructor(variable: String, expreison: Instruccion | String, retorno: Instruccion | String, linea: number, columna: number) {\r\n        super(new Tipo(tipoDato.CADENA), linea, columna);\r\n        this.variable = variable;\r\n        this.expresion = expreison;\r\n        this.retorno = retorno;\r\n    }\r\n    interpretar(arbol: Arbol, tabla: tablaSimbolos, tablaxml: tablaSimbolosxml) {\r\n\r\n        if (this.expresion instanceof Instruccion) {\r\n            var search = tabla.getVariable(this.variable);\r\n            if (search == null) {\r\n                //NO SE ENCONTRO NINGUNA COINCIDENCIA CON LA VARIABLE\r\n                var resexp = this.expresion.interpretar(arbol, tabla, tablaxml)\r\n\r\n                var simbolo = new Simbolo(new Tipo(tipoDato.FUNCION), this.variable, this.fila.toString(), this.columna.toString(), \"\", resexp);\r\n                tabla.setVariable(simbolo)\r\n                //PARTE DE RETORNO QUE FUNCIONA COMO UN PRINT\r\n                //var resultadoretorno = this.retorno.interpretar(arbol, tabla, tablaxml);\r\n                if (this.retorno != null) {\r\n                    if (this.retorno as Instruccion) {\r\n                        var resp: Instruccion = <Instruccion>this.retorno\r\n                        var aux = resp.interpretar(arbol, tabla, tablaxml)\r\n                        if (resp instanceof Variable) {\r\n                            var buscar1 = tabla.getVariable(aux);\r\n                            if (buscar1 != null) {\r\n                                return buscar1.getvalor()\r\n                            }\r\n                        } else {\r\n                            return aux\r\n                        }\r\n\r\n                    } else {\r\n                        if (this.retorno as string) {\r\n                            console.log(typeof this.retorno)\r\n                            var buscar = tabla.getVariable(this.retorno.toString());\r\n                            if (buscar != null) {\r\n                                return buscar\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    return \"\"\r\n                }\r\n\r\n            } else {\r\n                //SI SE ENCONTRO COINCIDENCIA POR ENDE NO SE PUEDE VOLVER A DECLARAR ESE LET\r\n            }\r\n\r\n        } else if (this.expresion instanceof Array) {\r\n            var sim;\r\n            let c = 0;\r\n            var cadena = '';\r\n            var retornoscadena = null;\r\n            let salidas: tablaSimbolos = new tablaSimbolos();\r\n            var longitud = this.expresion.length\r\n            this.expresion.forEach(element => {\r\n                c++\r\n                if (element as BarrasNodo) {\r\n                    //se compara el tablaxml para hacer validar los datos\r\n                    var resultador = element.interpretar(arbol, tabla, tablaxml)\r\n                    if (resultador instanceof tablaSimbolosxml) {\r\n                        tablaxml = resultador\r\n                        if (c == longitud) {\r\n                            if (arbol != null) {\r\n                                console.log(\"LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\\n\")\r\n                                sim = new Simbolo(new Tipo(tipoDato.FUNCION), this.variable, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                tabla.setVariable(sim)\r\n                                if (this.retorno != null) {\r\n                                    if (this.retorno instanceof Variable) {\r\n                                        var buscar = tabla.getVariable(this.retorno.identificador);\r\n                                        if (buscar != null) {\r\n                                            retornoscadena = buscar.getvalor()\r\n                                            return buscar\r\n                                        }\r\n                                    } else {\r\n                                        var buscar = tabla.getVariable(this.retorno.toString());\r\n                                        if (buscar != null) {\r\n                                            retornoscadena = buscar.getvalor()\r\n                                            return buscar\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    if (resultador instanceof Array) {\r\n                        console.log(resultador)\r\n                        if (this.retorno != null) {\r\n\r\n                            if (this.retorno instanceof Variable) {\r\n                                let contador = arbol.getContadort();\r\n                                let stack = arbol.getSTACK();\r\n                                arbol.codigo3d.push(`// declaracion LET ${this.variable}`);\r\n                                arbol.codigo3d.push(`$t${contador}=sp+${stack};`);\r\n                                sim = new Simbolo(new Tipo(tipoDato.FUNCION), this.variable, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                tabla.setVariable(sim)\r\n                                var buscar = tabla.getVariable(this.retorno.identificador);\r\n                                if (buscar != null) {\r\n                                    retornoscadena = buscar.getvalor()\r\n                                    return buscar\r\n                                }\r\n                            }\r\n                            if (this.retorno as string) {\r\n                                console.log(typeof this.retorno)\r\n                                let contador = arbol.getContadort();\r\n                                let stack = arbol.getSTACK();\r\n                                arbol.codigo3d.push(`// declaracion LET ${this.variable}`);\r\n                                arbol.codigo3d.push(`$t${contador}=sp+${stack};`);\r\n                                sim = new Simbolo(new Tipo(tipoDato.FUNCION), this.variable, this.fila.toString(), this.columna.toString(), \"\", resultador);\r\n                                tabla.setVariable(sim)\r\n                                var buscar = tabla.getVariable(this.retorno.toString());\r\n                                if (buscar != null) {\r\n                                    retornoscadena = buscar.getvalor()\r\n                                    return buscar\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            });\r\n            if (cadena != '') {\r\n                return cadena\r\n            }\r\n            if (retornoscadena != null) {\r\n\r\n                return retornoscadena\r\n            }\r\n            if (salidas != null) {\r\n                return salidas\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    getNodoAST(): nodoAST {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\n","\r\nimport { Instruccion } from 'src/app/Backend/XML/Analizador/Abstracto/Instruccion';\r\nimport nodoAST from 'src/app/Backend/XML/Analizador/Abstracto/nodoAST';\r\nimport Atributo from 'src/app/Backend/XML/Analizador/Expresiones/Atributo';\r\nimport Simbolo from 'src/app/Backend/XML/Analizador/Simbolos/Simbolo';\r\nimport Tipo, { tipoDato } from 'src/app/Backend/XML/Analizador/Simbolos/Tipo';\r\nimport Arbol from 'src/app/Backend/XML/Analizador/Simbolos/Arbol';\r\nimport tablaSimbolos from '../Simbolos/tablaSimbolos';\r\nimport NodoErrores from '../Excepciones/NodoErrores';\r\nimport { listaErrores } from 'src/app/componentes/contenido-inicio/contenido-inicio.component';\r\nimport { reporteTabla } from '../Reportes/reporteTabla';\r\n\r\nexport default class Objeto extends Instruccion {\r\n  public identificador: string;\r\n  public contenido: string;\r\n  public listaAtributos: Atributo[];\r\n  public listaObjetos: Objeto[];\r\n  public linea: number;\r\n  public columna: number;\r\n  constructor(identificador: string, contenido: string, listaAtributos: Atributo[] = [], listaObjetos: Objeto[], linea: number, columna: number) {\r\n    super(new Tipo(tipoDato.OBJETO), linea, columna);\r\n    this.identificador = identificador;\r\n    this.contenido = contenido;\r\n    this.listaAtributos = listaAtributos;\r\n    this.listaObjetos = listaObjetos;\r\n    this.linea = linea;\r\n    this.columna = columna;\r\n  }\r\n\r\n  public interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    var simbolo;\r\n\r\n\r\n    if (this.listaAtributos != null) {\r\n      for (let i of this.listaAtributos) {\r\n        var s = i.interpretar(arbol, tabla);\r\n        if (s.identificador == \"encoding\") {\r\n          arbol.setEncoding(s.valor);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    if (this.listaObjetos != null) {\r\n\r\n      var ts = new tablaSimbolos(); /*entorno hijo */\r\n      for (let i of this.listaObjetos) {\r\n        var r = i.interpretar(arbol, tabla); /* Obtiene el objeto hijo */\r\n        ts.setVariable(r);\r\n      }\r\n      simbolo = new Simbolo(new Tipo(tipoDato.OBJETO), this.identificador, this.linea.toString(), this.columna.toString(),\"anteriorentorno\" ,ts);\r\n      //arbol.actualizarTabla(simbolo,this.linea.toString(),this.columna.toString());\r\n    } else if (this.contenido != null) {\r\n\r\n      //if o switch buscando codificacion\r\n      if (arbol.getEncoding() == \"UTF-8\") {\r\n        this.contenido = (this.contenido);\r\n      } else if (arbol.getEncoding() == \"ISO-8859-1\") {\r\n        this.contenido = unescape(encodeURIComponent(this.contenido));\r\n      } else if (arbol.getEncoding() == \"ASCII\") {\r\n        this.contenido = (this.contenido);\r\n        //\r\n        /*console.log(this.getCharCodes(this.contenido));\r\n        this.contenido = this.getCharCodes(this.contenido) + \"\";*/\r\n      } else {\r\n        this.contenido = this.contenido;\r\n      }\r\n      \r\n      simbolo = new Simbolo(new Tipo(tipoDato.OBJETO), this.identificador, this.linea.toString(), this.columna.toString(),\"anteriorentorno\", this.contenido);\r\n\r\n    } else {\r\n      listaErrores.push(new NodoErrores('SEMANTICO', this.identificador + ' Datos nulos', this.fila, this.columna));\r\n    }\r\n\r\n\r\n    if (this.listaAtributos != null) {\r\n      if(this.identificador!=\"xml\"){\r\n\r\n      \r\n      for (let i of this.listaAtributos) {\r\n        var s = i.interpretar(arbol, tabla);\r\n\r\n        simbolo.agregarAtributo(s.identificador, s.valor, s.linea,s.columna);\r\n        \r\n      }\r\n    }\r\n    }\r\n\r\n    return simbolo;\r\n\r\n  }\r\n\r\n\r\n  getCharCodes(s) {\r\n    let charCodeArr = [];\r\n\r\n    for (let i = 0; i < s.length; i++) {\r\n      let code = s.charCodeAt(i);\r\n      charCodeArr.push(code);\r\n    }\r\n\r\n    return charCodeArr;\r\n  }\r\n\r\n\r\n  public getNodo(): nodoAST {\r\n    let nodo = new nodoAST('OBJETOS');\r\n    let objectos = new nodoAST('OBJETO')\r\n    let mayor = new nodoAST(\"<\")\r\n    objectos.agregarHijoAST(mayor)\r\n    var padreidentificador = new nodoAST('IDENTIFICADOR');\r\n\r\n    padreidentificador.agregarHijo(this.identificador);\r\n    objectos.agregarHijoAST(padreidentificador);\r\n    let menor = new nodoAST(\">\")\r\n    objectos.agregarHijoAST(menor)\r\n\r\n\r\n\r\n    nodo.agregarHijoAST(objectos);\r\n\r\n    if (this.contenido != null) {\r\n      var padre = new nodoAST(\"INSTRUCCION\");\r\n      padre.agregarHijo(this.contenido);\r\n      nodo.agregarHijoAST(padre);\r\n    }\r\n\r\n    if (this.listaAtributos != null) {\r\n      var lista = new nodoAST(\"LISTA ATRIBUTOS\");\r\n      for (let i of this.listaAtributos) {\r\n        lista.agregarHijoAST(i.getNodo());\r\n      }\r\n      nodo.agregarHijoAST(lista);\r\n    }\r\n\r\n    if (this.listaObjetos != null) {\r\n      var lista = new nodoAST(\"LISTA OBJETOS\");\r\n      for (let i of this.listaObjetos) {\r\n        lista.agregarHijoAST(i.getNodo());\r\n      }\r\n      nodo.agregarHijoAST(lista);\r\n    }\r\n    return nodo;\r\n  }\r\n\r\n  codigo3D(arbol: Arbol, tabla: tablaSimbolos) {\r\n    var simbolo;\r\n\r\n    if (this.listaObjetos != null) {\r\n      \r\n      var ts = new tablaSimbolos(); /*entorno hijo */\r\n     \r\n      for (let i of this.listaObjetos) {\r\n        var r = i.codigo3D(arbol, tabla); /* Obtiene el objeto hijo */\r\n        ts.setVariable(r);\r\n      }\r\n      let contador = arbol.getContadort();\r\n      let stack = arbol.getSTACK();\r\n      arbol.codigo3d.push(`// declaracion ${this.identificador}`);\r\n      arbol.codigo3d.push(`$t${contador}=sp+${stack};`);\r\n      simbolo = new Simbolo(new Tipo(tipoDato.OBJETO), this.identificador, this.linea.toString(), this.columna.toString(),\"\" ,ts, `$t${contador}`);\r\n\r\n    }\r\n\r\n    else if (this.contenido != null) {\r\n\r\n      //if o switch buscando codificacion\r\n      if (arbol.getEncoding() == \"UTF-8\") {\r\n        this.contenido = (this.contenido);\r\n      } else if (arbol.getEncoding() == \"ISO-8859-1\") {\r\n        this.contenido = unescape(encodeURIComponent(this.contenido));\r\n      } else if (arbol.getEncoding() == \"ASCII\") {\r\n        this.contenido = (this.contenido);\r\n        //\r\n        /*console.log(this.getCharCodes(this.contenido));\r\n        this.contenido = this.getCharCodes(this.contenido) + \"\";*/\r\n      } else {\r\n        this.contenido = this.contenido;\r\n        this.contenido = this.contenido.toString().replace(\"%20\", \" \").replace(\"&lt;\", \"<\").replace(\"&gt;\", \">\").replace(\"&amp;\", \"&\").replace(\"&apos;\", \"'\").replace(\"&quot;\", \"\\\"\");\r\n      }\r\n\r\n      let stackID = arbol.getSTACK();\r\n      let contadorID = arbol.getContadort(); //temporales\r\n      arbol.codigo3d.push(`// declaracion ${this.identificador}`);\r\n      arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);\r\n\r\n      let data: string = this.contenido + \"\";\r\n      let estado = 0;\r\n      for (let x = 0; x < data.length; x++) {\r\n        const iterator = data[x];\r\n        switch (estado) {\r\n          case 0: {\r\n            if (iterator == \"\\\\\") { estado = 1; continue; }\r\n            arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);\r\n            arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n            arbol.codigo3d.push(\"$t1=\" + iterator.charCodeAt(0) + \";\");\r\n            arbol.codigo3d.push(\"guardarString();\");\r\n            break;\r\n          }\r\n          case 1:\r\n            {\r\n              let assci = 0;\r\n              if (iterator == \"n\") { assci = 10; }\r\n              else if (iterator == \"\\\"\") { assci = 34; }\r\n              else if (iterator == \"\\\\\") { assci = 92 }\r\n              else if (iterator == \"r\") { assci = 10 }\r\n              else if (iterator == \"t\") { assci = 9; }\r\n              else {\r\n                arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                arbol.codigo3d.push(\"$t1=\" + 34 + \";\");\r\n                arbol.codigo3d.push(\"guardarString();\");\r\n                arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n                arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n                arbol.codigo3d.push(\"$t1=\" + iterator.charAt(0) + \";\");\r\n                arbol.codigo3d.push(\"guardarString();\");\r\n              }\r\n              arbol.codigo3d.push(\"//agregamos el string al heap\");\r\n              arbol.codigo3d.push(\"$t0=hp;\");\r\n\r\n              arbol.codigo3d.push(\"$t1=\" + assci + \";\");\r\n              arbol.codigo3d.push(\"guardarString();\");\r\n              estado = 0;\r\n              break;\r\n            }\r\n        }\r\n\r\n      }\r\n      arbol.codigo3d.push(\"$t0=hp;\");\r\n      arbol.codigo3d.push(\"$t1=-1;\");\r\n      arbol.codigo3d.push(\"guardarString();\");\r\n      const contadort = arbol.getContadort();\r\n      arbol.codigo3d.push(\"$t\" + contadort + \"=hp-\" + (data.length + 1) + \";\");\r\n      arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);\r\n      simbolo = new Simbolo(new Tipo(tipoDato.OBJETO), this.identificador, this.linea.toString(), this.columna.toString(),\"\", this.contenido, `$t${contadorID}`);\r\n\r\n    }\r\n\r\n\r\n\r\n    if (this.listaAtributos != null) {\r\n      for (let i of this.listaAtributos) {\r\n        var s = i.codigo3D(arbol, tabla);\r\n        \r\n          simbolo.agregarAtributo(s.identificador, s.valor, s.linea, s.columna, s.cd3script);\r\n        \r\n        \r\n      }\r\n    }\r\n\r\n    return simbolo\r\n  }\r\n}\r\n\r\n","export default class Tipo {\r\n    private tipos: tipoDato;\r\n    constructor(tipos: tipoDato) {\r\n      this.tipos = tipos;\r\n    }\r\n    public getTipo(): tipoDato {\r\n      return this.tipos;\r\n    }\r\n    public setTipo(tipo: tipoDato): void {\r\n      this.tipos = tipo;\r\n    }\r\n    public igual(compara: Tipo) {\r\n      return (this.tipos = compara.tipos);\r\n    }\r\n  }\r\n  \r\n  export enum tipoDato {\r\n    CADENA,\r\n    OBJETO,\r\n    ENTERO,\r\n    DECLARACION,\r\n    PILA,\r\n    STACK,\r\n    HEAP,\r\n    VALOR_RET,\r\n    RA,\r\n    PUNTERO,\r\n    TEMPORAL,\r\n    DECIMAL,\r\n    BOOLEANO,\r\n    CARACTER,\r\n    SELECT,\r\n    ATRIBUTO\r\n  \r\n  }\r\n  ","<h1>TABLA DE SIMBOLOS XQUERY</h1>\n<div class=\"tabla\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n      \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"ID\">\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.identificador}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"TIPO\">\n          <th mat-header-cell *matHeaderCellDef> Tipo </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.tipo}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"AMBITO\">\n          <th mat-header-cell *matHeaderCellDef> Ambito </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.entorno}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"CONTENIDO\">\n          <th mat-header-cell *matHeaderCellDef> Contenido </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.contenido}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"LINEA\">\n          <th mat-header-cell *matHeaderCellDef> Linea </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.linea}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"COLUMNA\">\n          <th mat-header-cell *matHeaderCellDef> Columna </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.columna}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"POSICION\">\n          <th mat-header-cell *matHeaderCellDef> Posicion </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.posicion}} </td>\n        </ng-container>\n      \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tablasimbolos-xquery',\n  templateUrl: './tablasimbolos-xquery.component.html',\n  styleUrls: ['./tablasimbolos-xquery.component.css']\n})\nexport class TablasimbolosXqueryComponent implements OnInit {\n  displayedColumns: string[] = [\n    'TIPO',\n    'ID',\n    'LINEA',\n    'COLUMNA',\n    'AMBITO',\n    'VALOR',\n    'CD3'\n  ];\n  dataSource = '';\n  constructor() { }\n\n  ngOnInit(): void {\n    let info = window.localStorage.getItem('symbolXQUERY');\n    let otro = JSON.parse(info);\n    this.dataSource = otro;\n    console.log(\"Aqui abajo tabla simbolos\")\n    console.log(this.dataSource)\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/markdown/markdown';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import tablaSimbolos from \"../../XML/Analizador/Simbolos/tablaSimbolos\";\r\nimport { Instruccion } from \"../Abstracto/Instruccion\";\r\nimport Arbol from \"../Simbolo/Arbol\";\r\nimport Tipo, { tipoDato } from \"../Simbolo/Tipo\";\r\n\r\n\r\nexport default class Identificador extends Instruccion {\r\n  public identificador: string;\r\n  constructor(identificador: string, fila: number, columna: number) {\r\n    super(new Tipo(tipoDato.CADENA), fila, columna);\r\n    this.identificador = identificador;\r\n  }\r\n  interpretar(arbol: Arbol, tabla: tablaSimbolos) {\r\n    return {contenido: this.identificador};\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}
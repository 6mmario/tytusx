(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "+QV2":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/Predicados.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Predicados; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class Predicados extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, lcorchetes, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.Identificador = select;
        this.Corchetes = lcorchetes;
    }
    interpretar(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('PREDICADO'); //PADRE SELECT
        /**TIPOS DE ATRIBUTOS
         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)
         * ATRIBUTOS SELECT
         * ATRIBUTOS MULTIPLICACION
         * ATRIBUTOS IDENTIFICADOR L_CORCHETES
         */
        if (this.Identificador != null) {
            nodo.agregarHijo(this.Identificador);
        }
        if (this.Corchetes != null) {
            nodo.agregarHijoAST(this.Corchetes.getNodosAST());
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "+Wsu":
/*!*************************************************!*\
  !*** ./src/app/Backend/Optimizacion/grammar.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var grammar = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [1, 15], $V1 = [1, 5], $V2 = [1, 14], $V3 = [1, 11], $V4 = [1, 8], $V5 = [1, 9], $V6 = [1, 10], $V7 = [1, 12], $V8 = [5, 14, 15, 23, 25, 77, 78, 79, 80], $V9 = [1, 38], $Va = [1, 33], $Vb = [1, 34], $Vc = [1, 35], $Vd = [1, 36], $Ve = [1, 37], $Vf = [1, 23], $Vg = [1, 24], $Vh = [1, 25], $Vi = [1, 26], $Vj = [1, 27], $Vk = [1, 28], $Vl = [1, 29], $Vm = [1, 30], $Vn = [8, 9, 10, 14, 23, 26, 27, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59], $Vo = [2, 100], $Vp = [20, 22], $Vq = [2, 13], $Vr = [2, 14], $Vs = [1, 47], $Vt = [1, 50], $Vu = [1, 69], $Vv = [1, 62], $Vw = [1, 65], $Vx = [1, 66], $Vy = [1, 67], $Vz = [1, 55], $VA = [1, 56], $VB = [1, 57], $VC = [1, 58], $VD = [1, 59], $VE = [1, 60], $VF = [1, 68], $VG = [1, 70], $VH = [1, 71], $VI = [1, 72], $VJ = [1, 61], $VK = [1, 63], $VL = [1, 64], $VM = [10, 13, 14, 20, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 43, 44, 48, 52, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $VN = [10, 13, 14, 20, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 44, 48, 52, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $VO = [2, 66], $VP = [42, 43], $VQ = [1, 77], $VR = [1, 76], $VS = [20, 48, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $VT = [2, 58], $VU = [1, 87], $VV = [9, 14, 23, 26, 27, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59], $VW = [10, 13, 14, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 44, 48, 52, 53, 57, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73], $VX = [10, 13, 14, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 44, 52, 53, 57, 58], $VY = [1, 110], $VZ = [1, 118], $V_ = [1, 107], $V$ = [1, 108], $V01 = [1, 109], $V11 = [1, 112], $V21 = [1, 113], $V31 = [1, 115], $V41 = [1, 116], $V51 = [1, 117], $V61 = [1, 120], $V71 = [1, 121], $V81 = [1, 122], $V91 = [1, 119], $Va1 = [10, 13, 14, 20, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 44, 48, 52, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $Vb1 = [13, 14, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 52, 53, 57, 58], $Vc1 = [2, 39], $Vd1 = [2, 40];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "FUNCION": 4, "EOF": 5, "VOIDS": 6, "TIPO": 7, "MAIN": 8, "PARIZQ": 9, "PARDER": 10, "LLAVEIZQ": 11, "INSTRUCCIONES": 12, "LLAVEDER": 13, "IDENTIFICADOR": 14, "INCLUDE": 15, "LIBRERIA": 16, "DECLARACION_MULTIPLE": 17, "DECLARACION": 18, "TIPODECLARACION": 19, "COMA": 20, "TERMINO": 21, "PTCOMA": 22, "TEMPORAL": 23, "L_CORCHETES": 24, "DOUBLE": 25, "STACK": 26, "HEAP": 27, "INSTRUCCION": 28, "ASIGNACION": 29, "EXIT": 30, "IF": 31, "EXPRESION": 32, "GOTO": 33, "DOSPUNTOS": 34, "TIPO_PRINT": 35, "UNSET": 36, "RETURN_INS": 37, "IMPRIMIR": 38, "IMPRIMIRF": 39, "SNPRINT": 40, "TEMPORALES": 41, "IGUAL": 42, "CORCHETEIZQ": 43, "CORCHETEDER": 44, "OPLOGICA": 45, "OPBIT": 46, "OPRELACIONAL": 47, "MENOS": 48, "NOT_BIT": 49, "NOT": 50, "OPARITMETICA": 51, "RA": 52, "PILA": 53, "ENTERO": 54, "DECIMAL": 55, "CADENA": 56, "PUNTERO": 57, "VALOR_RET": 58, "AND_BIT": 59, "UNARIO": 60, "AND": 61, "OR": 62, "XOR": 63, "MENORQUE": 64, "MAYORQUE": 65, "MENORIGUAL": 66, "MAYORIGUAL": 67, "IGUALQUE": 68, "NOIGUAL": 69, "MAS": 70, "MULTIPLICACION": 71, "DIVISION": 72, "MODULO": 73, "SHIFTDER": 74, "OR_BIT": 75, "XOR_BIT": 76, "INT": 77, "FLOAT": 78, "CHAR": 79, "VOID": 80, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 8: "MAIN", 9: "PARIZQ", 10: "PARDER", 11: "LLAVEIZQ", 13: "LLAVEDER", 14: "IDENTIFICADOR", 15: "INCLUDE", 16: "LIBRERIA", 20: "COMA", 22: "PTCOMA", 23: "TEMPORAL", 25: "DOUBLE", 26: "STACK", 27: "HEAP", 30: "EXIT", 31: "IF", 33: "GOTO", 34: "DOSPUNTOS", 36: "UNSET", 37: "RETURN_INS", 38: "IMPRIMIR", 39: "IMPRIMIRF", 40: "SNPRINT", 42: "IGUAL", 43: "CORCHETEIZQ", 44: "CORCHETEDER", 48: "MENOS", 49: "NOT_BIT", 50: "NOT", 52: "RA", 53: "PILA", 54: "ENTERO", 55: "DECIMAL", 56: "CADENA", 57: "PUNTERO", 58: "VALOR_RET", 59: "AND_BIT", 61: "AND", 62: "OR", 63: "XOR", 64: "MENORQUE", 65: "MAYORQUE", 66: "MENORIGUAL", 67: "MAYORIGUAL", 68: "IGUALQUE", 69: "NOIGUAL", 70: "MAS", 71: "MULTIPLICACION", 72: "DIVISION", 73: "MODULO", 74: "SHIFTDER", 75: "OR_BIT", 76: "XOR_BIT", 77: "INT", 78: "FLOAT", 79: "CHAR", 80: "VOID" },
        productions_: [0, [3, 2], [4, 2], [4, 1], [6, 7], [6, 7], [6, 2], [6, 1], [6, 1], [17, 3], [17, 3], [17, 2], [17, 2], [19, 1], [19, 1], [18, 4], [18, 4], [18, 4], [12, 2], [12, 1], [28, 1], [28, 2], [28, 2], [28, 1], [28, 12], [28, 8], [28, 3], [28, 2], [28, 3], [28, 2], [28, 5], [28, 4], [28, 5], [28, 4], [28, 2], [28, 3], [35, 1], [35, 1], [35, 1], [29, 3], [29, 4], [29, 3], [24, 4], [24, 3], [32, 1], [32, 3], [32, 3], [32, 3], [32, 3], [32, 2], [32, 2], [32, 2], [32, 3], [32, 4], [21, 1], [21, 1], [21, 1], [21, 1], [21, 2], [21, 1], [21, 1], [21, 1], [21, 1], [21, 1], [21, 2], [21, 2], [21, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [41, 1], [60, 1], [60, 1], [60, 1], [47, 1], [47, 1], [47, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [51, 1], [51, 1], [51, 1], [51, 1], [51, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                case 18:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 3:
                case 19:
                    this.$ = [$$[$0]];
                    break;
                case 4:
                case 5:
                    this.$ = new Funcion.default($$[$0 - 6] + " " + $$[$0 - 5] + " " + $$[$0 - 4] + " " + $$[$0 - 3] + " " + $$[$0 - 2] + "\n", $$[$0 - 1], _$[$0 - 6].first_line, _$[$0 - 6].first_column);
                    break;
                case 6:
                case 12:
                    this.$ = $$[$0 - 1] + $$[$0] + "\n";
                    break;
                case 7:
                case 8:
                case 13:
                case 14:
                case 20:
                case 36:
                case 37:
                case 38:
                case 44:
                case 55:
                case 63:
                case 66:
                case 68:
                case 69:
                case 70:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                    this.$ = $$[$0];
                    break;
                case 9:
                    this.$ = $$[$0 - 2] + " " + $$[$0 - 1] + $$[$0] + " ";
                    break;
                case 10:
                    this.$ = new Declaracion.default($$[$0 - 2], $$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 11:
                    this.$ = $$[$0 - 1] + $$[$0] + " ";
                    break;
                case 15:
                case 16:
                case 17:
                    this.$ = new Declaracion.default($$[$0 - 3] + " " + $$[$0 - 2] + "[", $$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 21:
                case 64:
                    this.$ = $$[$0 - 1];
                    break;
                case 22:
                    this.$ = new Exit.default(_$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 23:
                    this.$ = new Exit.default(_$[$0].first_line, _$[$0].first_column);
                    break;
                case 24:
                    this.$ = new SaltoCondicional.default($$[$0 - 9], $$[$0 - 6], $$[$0 - 3], $$[$0 - 1], _$[$0 - 11].first_line, _$[$0 - 11].first_column);
                    break;
                case 25:
                    this.$ = new SaltoCondicional.default($$[$0 - 5], $$[$0 - 2], $$[$0], $$[$02], _$[$0 - 7].first_line, _$[$0 - 7].first_column);
                    break;
                case 26:
                    this.$ = new SaltoIncondicional.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 27:
                    this.$ = new SaltoIncondicional.default($$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 28:
                    this.$ = new Etiqueta.default($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 29:
                    this.$ = new Etiqueta.default($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 30:
                    this.$ = new Print.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 31:
                    this.$ = new Print.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 32:
                    this.$ = new Unset.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 33:
                    this.$ = new Unset.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 34:
                    this.$ = new Sentencia.default(null, _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 35:
                    this.$ = new Sentencia.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 39:
                    this.$ = new Asignacion.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 40:
                    this.$ = new AsignacionEstructura.default($$[$0 - 3], $$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 41:
                    this.$ = new Llamada.default($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 42:
                    $$[$0 - 3].push($$[$0 - 1]);
                    this.$ = $$[$0 - 3];
                    break;
                case 43:
                    this.$ = [$$[$0 - 1]];
                    break;
                case 45:
                    this.$ = new multiplecoma.default($$[$0 - 2], $$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 46:
                    this.$ = new logica.default($$[$0 - 2], $$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 47:
                    this.$ = new bit.default($$[$0 - 2], $$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 48:
                    this.$ = new relacional.default($$[$0 - 2], $$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 49:
                case 50:
                case 51:
                    this.$ = new unario.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 52:
                    this.$ = new aritmetica.default($$[$0 - 2], $$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 53:
                    this.$ = new conversion.default($$[$0 - 2], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 54:
                case 67:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.TEMPORAL), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 56:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.PILA), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 57:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.ENTERO), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 58:
                case 65:
                    this.$ = new Estructura.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 59:
                case 71:
                    this.$ = new identificador.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 60:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.DECIMAL), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 61:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.CADENA), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 62:
                case 72:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.PUNTERO), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 73:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.STACK), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 74:
                    this.$ = new termino.default(new Tipo.default(Tipo.tipoDato.HEAP), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 6: 3, 7: 4, 14: $V0, 15: $V1, 17: 6, 18: 7, 19: 13, 23: $V2, 25: $V3, 77: $V4, 78: $V5, 79: $V6, 80: $V7 }, { 1: [3] }, { 5: [1, 16], 6: 17, 7: 4, 14: $V0, 15: $V1, 17: 6, 18: 7, 19: 13, 23: $V2, 25: $V3, 77: $V4, 78: $V5, 79: $V6, 80: $V7 }, o($V8, [2, 3]), { 8: [1, 18], 9: $V9, 14: [1, 19], 19: 20, 21: 21, 23: [1, 22], 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 16: [1, 39] }, o($V8, [2, 7]), o($V8, [2, 8]), o($Vn, [2, 97]), o($Vn, [2, 98]), o($Vn, [2, 99]), o([8, 9, 14, 23, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59], $Vo, { 26: [1, 40], 27: [1, 41] }), o($Vn, [2, 101]), { 20: [1, 42], 22: [1, 43] }, o($Vp, $Vq), o($Vp, $Vr), { 1: [2, 1] }, o($V8, [2, 2]), { 9: [1, 44] }, o([20, 22, 48, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $Vr, { 24: 46, 9: [1, 45], 43: $Vs }), { 20: [1, 48] }, { 20: $Vt, 22: [1, 49], 45: 51, 46: 52, 47: 53, 48: $Vu, 51: 54, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }, o([20, 22, 43, 48, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], $Vq), o($VM, [2, 55]), o($VM, [2, 56]), o($VN, [2, 57]), o($VN, [2, 60]), o($VN, [2, 61]), o($VM, [2, 62]), o($VM, [2, 63]), { 23: [1, 73] }, { 24: 74, 43: $Vs }, o($VN, $VO), o($VP, [2, 73]), o($VP, [2, 74]), { 9: $V9, 14: $VQ, 21: 75, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 78, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 79, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 7: 80, 25: [1, 81], 77: $V4, 78: $V5, 79: $V6, 80: $V7 }, o($V8, [2, 6]), { 24: 82, 43: $Vs }, { 24: 83, 43: $Vs }, o($V8, [2, 11]), o($V8, [2, 12]), { 10: [1, 84] }, { 10: [1, 85] }, o($VS, $VT, { 22: [1, 86], 43: $VU }), { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 88, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($V8, [2, 9]), o($V8, [2, 10]), { 9: $V9, 14: $VQ, 21: 90, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 91, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 92, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 93, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 94, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($VV, [2, 81]), o($VV, [2, 82]), o($VV, [2, 83]), o($VV, [2, 84]), o($VV, [2, 85]), o($VV, [2, 86]), o($VV, [2, 92]), o($VV, [2, 94]), o($VV, [2, 95]), o($VV, [2, 96]), o($VV, [2, 78]), o($VV, [2, 79]), o($VV, [2, 80]), o($VV, [2, 87]), o($VV, [2, 88]), o($VV, [2, 89]), o($VV, [2, 90]), o($VV, [2, 91]), o($VN, [2, 64]), o($VN, [2, 65], { 43: $VU }), o($VW, [2, 49], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 59: $Vv, 63: $Vy, 68: $VD, 74: $VJ, 75: $VK, 76: $VL }), o($VM, [2, 54]), o($VN, [2, 59], { 24: 95, 43: $Vs }), o($VW, [2, 50], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 59: $Vv, 63: $Vy, 68: $VD, 74: $VJ, 75: $VK, 76: $VL }), o($VW, [2, 51], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 59: $Vv, 63: $Vy, 68: $VD, 74: $VJ, 75: $VK, 76: $VL }), { 10: [1, 96] }, { 10: $Vo }, { 22: [1, 97], 43: $VU }, { 22: [1, 98], 43: $VU }, { 11: [1, 99] }, { 11: [1, 100] }, o($V8, [2, 15]), { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 101, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($VS, $VO, { 44: [1, 102] }), o($VX, [2, 44], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VX, [2, 45], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VX, [2, 46], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VX, [2, 47], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VX, [2, 48], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VX, [2, 52], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), o($VN, $VT, { 43: $VU }), { 9: $V9, 14: $VQ, 21: 103, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($V8, [2, 16]), o($V8, [2, 17]), { 12: 104, 14: $VY, 23: $VZ, 26: $Va, 27: $Vb, 28: 105, 29: 106, 30: $V_, 31: $V$, 33: $V01, 35: 111, 36: $V11, 37: $V21, 38: $V31, 39: $V41, 40: $V51, 41: 114, 52: $V61, 53: $V71, 57: $V81, 58: $V91 }, { 12: 123, 14: $VY, 23: $VZ, 26: $Va, 27: $Vb, 28: 105, 29: 106, 30: $V_, 31: $V$, 33: $V01, 35: 111, 36: $V11, 37: $V21, 38: $V31, 39: $V41, 40: $V51, 41: 114, 52: $V61, 53: $V71, 57: $V81, 58: $V91 }, o($VS, $VO, { 44: [1, 124] }), o($Va1, [2, 43]), o($VX, [2, 53], { 45: 51, 46: 52, 47: 53, 51: 54, 20: $Vt, 48: $Vu, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }), { 13: [1, 125], 14: $VY, 23: $VZ, 26: $Va, 27: $Vb, 28: 126, 29: 106, 30: $V_, 31: $V$, 33: $V01, 35: 111, 36: $V11, 37: $V21, 38: $V31, 39: $V41, 40: $V51, 41: 114, 52: $V61, 53: $V71, 57: $V81, 58: $V91 }, o($Vb1, [2, 19]), o($Vb1, [2, 20], { 22: [1, 127] }), o($Vb1, [2, 23], { 22: [1, 128] }), { 9: [1, 129] }, { 14: [1, 130] }, o($VP, [2, 71], { 9: [1, 132], 34: [1, 131] }), { 9: [1, 133] }, { 9: [1, 134] }, { 9: $V9, 14: $VQ, 21: 89, 22: [1, 135], 23: $VR, 26: $Va, 27: $Vb, 32: 136, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 24: 138, 42: [1, 137], 43: $Vs }, { 9: [2, 36] }, { 9: [2, 37] }, { 9: [2, 38] }, o($VP, [2, 67]), o($VP, [2, 68]), o($VP, [2, 69]), o($VP, [2, 70]), o($VP, [2, 72]), { 13: [1, 139], 14: $VY, 23: $VZ, 26: $Va, 27: $Vb, 28: 126, 29: 106, 30: $V_, 31: $V$, 33: $V01, 35: 111, 36: $V11, 37: $V21, 38: $V31, 39: $V41, 40: $V51, 41: 114, 52: $V61, 53: $V71, 57: $V81, 58: $V91 }, o($Va1, [2, 42]), o($V8, [2, 4]), o($Vb1, [2, 18]), o($Vb1, [2, 21]), o($Vb1, [2, 22]), { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 140, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($Vb1, [2, 27], { 22: [1, 141] }), o($Vb1, [2, 29], { 22: [1, 142] }), { 10: [1, 143] }, { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 144, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 9: $V9, 14: $VQ, 21: 145, 23: $VR, 26: $Va, 27: $Vb, 32: 32, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, o($Vb1, [2, 34]), o($VS, $VO, { 22: [1, 146] }), { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 147, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 42: [1, 148], 43: $VU }, o($V8, [2, 5]), o($VS, $VO, { 10: [1, 149] }), o($Vb1, [2, 26]), o($Vb1, [2, 28]), o([13, 14, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 40, 52, 53, 57, 58], [2, 41]), o($VS, $VO, { 10: [1, 150] }), { 10: [1, 151], 20: $Vt, 45: 51, 46: 52, 47: 53, 48: $Vu, 51: 54, 59: $Vv, 61: $Vw, 62: $Vx, 63: $Vy, 64: $Vz, 65: $VA, 66: $VB, 67: $VC, 68: $VD, 69: $VE, 70: $VF, 71: $VG, 72: $VH, 73: $VI, 74: $VJ, 75: $VK, 76: $VL }, o($Vb1, [2, 35]), o($VS, $VO, { 13: $Vc1, 14: $Vc1, 22: $Vc1, 23: $Vc1, 26: $Vc1, 27: $Vc1, 30: $Vc1, 31: $Vc1, 33: $Vc1, 36: $Vc1, 37: $Vc1, 38: $Vc1, 39: $Vc1, 40: $Vc1, 52: $Vc1, 53: $Vc1, 57: $Vc1, 58: $Vc1 }), { 9: $V9, 14: $VQ, 21: 89, 23: $VR, 26: $Va, 27: $Vb, 32: 152, 41: 31, 48: $Vc, 49: $Vd, 50: $Ve, 52: $Vf, 53: $Vg, 54: $Vh, 55: $Vi, 56: $Vj, 57: $Vk, 58: $Vl, 59: $Vm }, { 33: [1, 153] }, o($Vb1, [2, 31], { 22: [1, 154] }), o($Vb1, [2, 33], { 22: [1, 155] }), o($VS, $VO, { 13: $Vd1, 14: $Vd1, 22: $Vd1, 23: $Vd1, 26: $Vd1, 27: $Vd1, 30: $Vd1, 31: $Vd1, 33: $Vd1, 36: $Vd1, 37: $Vd1, 38: $Vd1, 39: $Vd1, 40: $Vd1, 52: $Vd1, 53: $Vd1, 57: $Vd1, 58: $Vd1 }), { 14: [1, 156] }, o($Vb1, [2, 30]), o($Vb1, [2, 32]), { 22: [1, 157], 33: [1, 158] }, { 33: [1, 159] }, { 14: [1, 160] }, { 14: [1, 161] }, o($Vb1, [2, 25]), { 22: [1, 162] }, { 14: [1, 163] }, { 34: [1, 164] }, o($Vb1, [2, 24])],
        defaultActions: { 16: [2, 1], 81: [2, 100], 115: [2, 36], 116: [2, 37], 117: [2, 38] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    const CErrores = __webpack_require__(/*! ./Errores/NodoErrores */ "2Cxn");
    const inicio = __webpack_require__(/*! ../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
    const Tipo = __webpack_require__(/*! ./Simbolo/Tipo */ "yKyq");
    const aritmetica = __webpack_require__(/*! ./Expresion/Aritmetica */ "kJtm");
    const logica = __webpack_require__(/*! ./Expresion/Logica */ "0zjc");
    const bit = __webpack_require__(/*! ./Expresion/Bit */ "1+gB");
    const concatenacion = __webpack_require__(/*! ./Expresion/Concatenar */ "HJFq");
    const relacional = __webpack_require__(/*! ./Expresion/Relacional */ "VD77");
    const conversion = __webpack_require__(/*! ./Expresion/Conversion */ "k6K8");
    const unario = __webpack_require__(/*! ./Expresion/Unario */ "pz2h");
    const Sentencia = __webpack_require__(/*! ./Expresion/Sentencia */ "2t1b");
    const termino = __webpack_require__(/*! ./Expresion/Termino */ "98aF");
    const identificador = __webpack_require__(/*! ./Expresion/Identificador */ "zxbS");
    const multiplecoma = __webpack_require__(/*! ./Expresion/MultipleComa */ "uf5A");
    //instrucciones
    const Llamada = __webpack_require__(/*! ./Instrucciones/Llamada */ "6/Tc");
    const Asignacion = __webpack_require__(/*! ./Instrucciones/Asignacion */ "rEJP");
    const Declaracion = __webpack_require__(/*! ./Instrucciones/Declaracion */ "F2Ye");
    const Funcion = __webpack_require__(/*! ./Instrucciones/Funcion */ "KjsP");
    const AsignacionEstructura = __webpack_require__(/*! ./Instrucciones/AsignacionEstructura */ "floT");
    const Estructura = __webpack_require__(/*! ./Instrucciones/Estructura */ "1YIJ");
    const Etiqueta = __webpack_require__(/*! ./Instrucciones/Etiqueta */ "YFaA");
    const Exit = __webpack_require__(/*! ./Instrucciones/Exit */ "LeVp");
    const Print = __webpack_require__(/*! ./Instrucciones/Print */ "alhG");
    const SaltoCondicional = __webpack_require__(/*! ./Instrucciones/SaltoCondicional */ "/kvU");
    const SaltoIncondicional = __webpack_require__(/*! ./Instrucciones/SaltoIncondicional */ "BKsa");
    const Unset = __webpack_require__(/*! ./Instrucciones/Unset */ "dpWr");
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0: /* skip whitespace */
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                    case 3:
                        return 54;
                        break;
                    case 4:
                        return 77;
                        break;
                    case 5:
                        return 25;
                        break;
                    case 6:
                        return 78;
                        break;
                    case 7:
                        return 79;
                        break;
                    case 8:
                        return 33;
                        break;
                    case 9:
                        return 30;
                        break;
                    case 10:
                        return 'ABS';
                        break;
                    case 11:
                        return 38;
                        break;
                    case 12:
                        return 39;
                        break;
                    case 13:
                        return 40;
                        break;
                    case 14:
                        return 36;
                        break;
                    case 15:
                        return 31;
                        break;
                    case 16:
                        return 63;
                        break;
                    case 17:
                        return 'READ';
                        break;
                    case 18:
                        return 'ARRAY';
                        break;
                    case 19:
                        return 27;
                        break;
                    case 20:
                        return "STACK";
                        break;
                    case 21:
                        return 80;
                        break;
                    case 22:
                        return 8;
                        break;
                    case 23:
                        return "RETURN_INS";
                        break;
                    case 24:
                        return 'NUMBER';
                        break;
                    case 25:
                        return 23;
                        break;
                    case 26:
                        return 58;
                        break;
                    case 27:
                        return 53;
                        break;
                    case 28:
                        return 52;
                        break;
                    case 29:
                        return 57;
                        break;
                    case 30:
                        return 16;
                        break;
                    case 31:
                        return 15;
                        break;
                    case 32:
                        return 14;
                        break;
                    case 33:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 56;
                        break;
                    case 34:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 'CARACTER';
                        break;
                    case 35:
                        return 55;
                        break;
                    case 36:
                        return 70;
                        break;
                    case 37:
                        return 48;
                        break;
                    case 38:
                        return 71;
                        break;
                    case 39:
                        return 72;
                        break;
                    case 40:
                        return 73;
                        break;
                    case 41:
                        return 68;
                        break;
                    case 42:
                        return 42;
                        break;
                    case 43:
                        return 66;
                        break;
                    case 44:
                        return 67;
                        break;
                    case 45:
                        return 64;
                        break;
                    case 46:
                        return 65;
                        break;
                    case 47:
                        return 69;
                        break;
                    case 48:
                        return 50;
                        break;
                    case 49:
                        return 63;
                        break;
                    case 50:
                        return 76;
                        break;
                    case 51:
                        return 49;
                        break;
                    case 52:
                        return 9;
                        break;
                    case 53:
                        return 10;
                        break;
                    case 54:
                        return 43;
                        break;
                    case 55:
                        return 44;
                        break;
                    case 56:
                        return 11;
                        break;
                    case 57:
                        return 13;
                        break;
                    case 58:
                        return 20;
                        break;
                    case 59:
                        return 'VALCHAR';
                        break;
                    case 60:
                        return 'VALNUM';
                        break;
                    case 61:
                        return 'VALDEC';
                        break;
                    case 62:
                        return 59;
                        break;
                    case 63:
                        return 75;
                        break;
                    case 64:
                        return 61;
                        break;
                    case 65:
                        return 62;
                        break;
                    case 66:
                        return 22;
                        break;
                    case 67:
                        return 34;
                        break;
                    case 68:
                        return 74;
                        break;
                    case 69:
                        return 'SHIFTIZQ';
                        break;
                    case 70:
                        return 5;
                        break;
                    case 71:
                        inicio.listaErrores.push(new CNodoErrores.default("Lexico Optimizacion", "No se esperaba el caracter: " + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column));
                        console.log("Lexico, No se esperaba el caracter: " + yy_.yytext + " Linea: " + yy_.yylloc.first_line + "Columna: " + yy_.yylloc.first_column);
                        break;
                }
            },
            rules: [/^(?:\s+)/i, /^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i, /^(?:\/\/.*)/i, /^(?:([0-9]+(\.[0-9]+)?))/i, /^(?:int\b)/i, /^(?:double\b)/i, /^(?:float\b)/i, /^(?:char\b)/i, /^(?:goto\b)/i, /^(?:exit\b)/i, /^(?:abs\b)/i, /^(?:print\b)/i, /^(?:printf\b)/i, /^(?:snprintf\b)/i, /^(?:unset\b)/i, /^(?:if\b)/i, /^(?:xor\b)/i, /^(?:read\b)/i, /^(?:array\b)/i, /^(?:heap\b)/i, /^(?:stack\b)/i, /^(?:void\b)/i, /^(?:main\b)/i, /^(?:return\b)/i, /^(?:[0-9]+(\.[0-9]+)?\b)/i, /^(?:[$][t]([a-zA-Z_0-9])+)/i, /^(?:[$][v]([0-9]+)?)/i, /^(?:[s][p])/i, /^(?:[$][r][a]([0-9]+)?)/i, /^(?:[h][p])/i, /^(?:[<]([a-zA-Z"."]+)[>])/i, /^(?:#include\b)/i, /^(?:([a-zA-Z])[a-zA-Z0-9_Ññáéíúó]*)/i, /^(?:"[^\"]*")/i, /^(?:'[^\']*')/i, /^(?:[0-9]+(\.[0-9]+)\b)/i, /^(?:\+)/i, /^(?:-)/i, /^(?:\*)/i, /^(?:\/)/i, /^(?:%)/i, /^(?:==)/i, /^(?:=)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:!=)/i, /^(?:!)/i, /^(?:xor\b)/i, /^(?:\\\^)/i, /^(?:~)/i, /^(?:\()/i, /^(?:\))/i, /^(?:\[)/i, /^(?:\])/i, /^(?:\{)/i, /^(?:\})/i, /^(?:,)/i, /^(?:%c\b)/i, /^(?:%e\b)/i, /^(?:%d\b)/i, /^(?:&)/i, /^(?:\|)/i, /^(?:&&)/i, /^(?:\|\|)/i, /^(?:;)/i, /^(?::)/i, /^(?:>>)/i, /^(?:<<)/i, /^(?:$)/i, /^(?:.)/i],
            conditions: { "INITIAL": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = grammar;
    exports.Parser = grammar.Parser;
    exports.parse = function () { return grammar.parse.apply(grammar, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 7).readFileSync(__webpack_require__(/*! path */ 8).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "+d5a":
/*!***********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo.ts ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BarrasNodo; });
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/tablaSimbolos */ "MuHt");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Expresiones/Aritmetica */ "rLpq");
/* harmony import */ var _XPATH_Analizador_Instrucciones_AtributosSimples__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../XPATH/Analizador/Instrucciones/AtributosSimples */ "6clo");
/* harmony import */ var _XPATH_Analizador_Instrucciones_SelectRoot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../XPATH/Analizador/Instrucciones/SelectRoot */ "0iGS");
/* harmony import */ var _XPATH_Analizador_Instrucciones_Todo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../XPATH/Analizador/Instrucciones/Todo */ "c5IQ");
/* harmony import */ var _Expresiones_Relacional__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Expresiones/Relacional */ "N49t");
/* harmony import */ var _ForSimple__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ForSimple */ "U3Vy");











const inicio = __webpack_require__(/*! ../../../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
class BarrasNodo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(barra1, expresion, fila, columna, barra2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].ENTERO), fila, columna);
        this.contenido = "";
        this.Barra = barra1;
        this.Barra2 = barra2;
        this.Operacion = expresion;
    }
    getNodoAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"]('INSTRUCCION'); //PADRE SELECT
        var nodsBarras = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"](this.Barra);
        nodo.agregarHijoAST(nodsBarras);
        if (this.Barra2 != null) {
            /*nodo.agregarHijo(this.Barra2)*/
            var nodsBarras2 = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"](this.Barra2);
            nodo.agregarHijoAST(nodsBarras2);
        }
        if (this.Operacion != null) {
            nodo.agregarHijoAST(this.Operacion.getNodoAST());
        }
        return nodo;
    }
    //BARRA: SELECCIONA DESDE EL NODO RAIZ
    //DOBLE BARRA: SELECCIONA LOS NODOS QUE HAGAN MATCH EN EL DOCUMENTO NO IMPORTANDO DONDE ESTEN DESDE EL NODO ACTUAL 
    interpretar(arbol, tabla, tablaxml) {
        //arbol.gettablaGlobal();
        //BARRA
        console.log('BARRA');
        console.log(tabla);
        let variable = this.Operacion.interpretar(arbol, tabla, tablaxml);
        console.log(this.Operacion);
        //if (variable != null) {
        if (this.Barra2 == null) {
            console.log("Aqui esta el arbol");
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
            let cadena = '';
            let error = '';
            if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    console.log(this.Operacion.cadena);
                    return this.Operacion.cadena;
                }
                else {
                    return "No hay atributos";
                }
            }
            else if (this.Operacion instanceof _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_5__["default"]) {
            }
            else if (this.Operacion instanceof _Expresiones_Relacional__WEBPACK_IMPORTED_MODULE_9__["default"]) {
                if (this.Operacion.cond1.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA &&
                    this.Operacion.cond2.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA) {
                    ///SE HACE LA COMPARACION PARA RETORNAR SI ES DE BARRANODO Y HAY CADENA
                    for (var simb of tablaxml.getAnterior().getTabla()) {
                        var bloqueaceptado = simb;
                        if (simb.getidentificador() == _ForSimple__WEBPACK_IMPORTED_MODULE_10__["default"].prototype.variableanterior) {
                            for (let key of simb.getvalor().getTabla()) {
                                try {
                                    for (let sim of key.getvalor().getTabla()) {
                                    }
                                }
                                catch (error) {
                                    if (this.busquedaCondicion(variable.condicion1, key, variable.condicion2, variable.operador, this.Operacion.cond2.tipoDato)) {
                                        for (let where of simb.getvalor().getTabla()) {
                                            salidas.setVariable(where);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (this.Operacion.cond2.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA &&
                    this.Operacion.cond1.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA) {
                    for (var simb of tablaxml.getAnterior().getTabla()) {
                        var bloqueaceptado = simb;
                        if (simb.getidentificador() == _ForSimple__WEBPACK_IMPORTED_MODULE_10__["default"].prototype.variableanterior) {
                            for (let key of simb.getvalor().getTabla()) {
                                try {
                                    for (let sim of key.getvalor().getTabla()) {
                                    }
                                }
                                catch (error) {
                                    if (this.busquedaCondicion(variable.condicion2, key, variable.condicion1, variable.operador, this.Operacion.cond2.tipoDato)) {
                                        for (let where of simb.getvalor().getTabla()) {
                                            salidas.setVariable(where);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (this.Operacion.cond2.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA &&
                    this.Operacion.cond1.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA) {
                    var cond1 = this.Operacion.cond1.interpretar(arbol, tabla, tablaxml);
                    var cond2 = this.Operacion.cond2.interpretar(arbol, tabla, tablaxml);
                    var operador = this.Operacion.TipoOperando();
                    for (var simb of tablaxml.getAnterior().getTabla()) {
                        if (simb.getidentificador() == _ForSimple__WEBPACK_IMPORTED_MODULE_10__["default"].prototype.variableanterior) {
                            for (let key of simb.getvalor().getTabla()) {
                                try {
                                    for (let sim of key.getvalor().getTabla()) {
                                    }
                                }
                                catch (error) {
                                    if (this.busquedaCondicion(cond1, key, cond2, operador, this.Operacion.cond2.tipoDato)) {
                                        for (let where of simb.getvalor().getTabla()) {
                                            salidas.setVariable(where);
                                        }
                                    }
                                    else if (this.busquedaCondicion(cond2, key, cond1, operador, this.Operacion.cond2.tipoDato)) {
                                        for (let where of simb.getvalor().getTabla()) {
                                            salidas.setVariable(where);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (salidas != null) {
                    return salidas;
                }
            }
            else if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_SelectRoot__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                if (variable === ".") {
                    for (var key of tablaxml.getTabla()) {
                        salidas.setVariable(key);
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
                else {
                    //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR
                    var temporal = tablaxml.tablaAnterior;
                    if (temporal != null) {
                        for (var i of temporal.tablaActual) {
                            console.log(inicio.ArbolGlobalReporte);
                            for (var b of inicio.ArbolGlobalReporte) {
                                if (b.identificador === i.identificador && b.entorno == "Global") {
                                    return "Nodo no encontado: [object XMLDocument]";
                                }
                            }
                            salidas.setVariable(i);
                        }
                    }
                    else {
                        cadena = "Nodo no encontado: [object XMLDocument]";
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
            }
            else if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_Todo__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                for (var key of tablaxml.getTabla()) {
                    salidas.setVariable(key);
                }
                if (cadena != '') {
                    return cadena;
                }
                return salidas;
            }
            else {
                var devolver = new Array();
                for (var key of tablaxml.getTabla()) {
                    if (key.getidentificador() == variable) {
                        _ForSimple__WEBPACK_IMPORTED_MODULE_10__["default"].prototype.variableanterior = variable;
                        console.log(key.getidentificador());
                        try {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        catch (error) {
                            devolver.push(key);
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    else {
                        error = "Nodo no encontrado ";
                        console.log(error);
                    }
                }
                if (cadena != '') {
                    return devolver;
                }
                else if (error != '') {
                    return error;
                }
                console.log("OBJETOSSALIDA");
                console.log(salidas);
                salidas.setAnterior(tablaxml);
                return salidas;
            }
        }
        else { // **************************************ESTE ES DOBLE BARRA******************************
            console.log("entro doble barra");
            //DOBLE BARRA
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
            let cadena = '';
            /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */
            if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    return this.Operacion.cadena;
                }
                return variable;
            }
            else if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_Todo__WEBPACK_IMPORTED_MODULE_8__["default"]) {
            }
            else if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_SelectRoot__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                if (variable === ".") {
                    for (var key of tablaxml.getTabla()) {
                        salidas.setVariable(key);
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
                else {
                    //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR
                    var temporal = tabla.tablaAnterior;
                    if (temporal != null) {
                        for (var i of temporal.tablaActual) {
                            console.log(inicio.ArbolGlobalReporte);
                            for (var b of inicio.ArbolGlobalReporte) {
                                if (b.identificador === i.identificador && b.entorno == "Global") {
                                    return "Nodo no encontado: [object XMLDocument]";
                                }
                            }
                            salidas.setVariable(i);
                        }
                    }
                    else {
                        cadena = "Nodo no encontado: [object XMLDocument]";
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
            }
            else {
                var devolver = new Array();
                for (var key of tablaxml.getTabla()) {
                    if (key.getidentificador() == variable) {
                        console.log(key.getidentificador());
                        try {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        catch (error) {
                            devolver.push(key);
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    else {
                        console.log("NO SE ENCONTRO NODO");
                    }
                }
                if (cadena != '') {
                    return devolver;
                }
                console.log("OBJETOSSALIDA");
                console.log(salidas);
                salidas.setAnterior(tablaxml);
                return salidas;
            }
        }
    }
    /**
     * BUSQUEDA DE LA CONDICION CON ALGUNA ETIQUETA REALMENTE PARA LA FUNCION DE FOR Y LOS DERIVADOS DE WHERE
     * @param id
     * @param tabla
     * @returns
     */
    busquedaCondicion(id, sim, condicion2, operador, tipodato) {
        if (id == sim.getidentificador()) {
            var condicion1 = this.cambiartipo(tipodato, sim.getvalor().trim());
            return this.hacerOperacion(condicion1, operador, condicion2);
        }
        return null;
    }
    /**
     * ESTE HACE LA OPERACION Y DEVUELVE UN TRUE PARA
     * @param cond1
     * @param Operador
     * @param cond2
     * @returns
     */
    hacerOperacion(cond1, Operador, cond2) {
        switch (Operador) {
            case "==":
                return cond1 == cond2;
            case "!=":
                return cond1 != cond2;
            case "<":
                return cond1 < cond2;
            case "<=":
                return cond1 <= cond2;
            case ">":
                return cond1 > cond2;
            case ">=":
                return cond1 >= cond2;
            default:
                return false;
        }
    }
    /**
     * CAMBIAR TIPO PARA HACER COMPARACION
     * @param tipodato
     * @param valor
     * @returns
     */
    cambiartipo(tipodato, valor) {
        switch (tipodato.getTipo()) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].ENTERO:
                return parseInt(valor);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].DECIMAL:
                return parseFloat(valor);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CARACTER:
                var da = valor + '';
                var res = da.charCodeAt(0);
                return res;
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].BOOLEANO:
                let dats = valor + '';
                let otr = dats.toLowerCase();
                return parseInt(otr);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA:
                return '' + valor;
        }
    }
    /////////////////////////////////FALTA COMPONER ESTA PARTE PARA QUE TAMBIEN HAGA LA COMPARACION CON CODIGO 3D
    codigo3D(arbol, tabla) {
        let variable = this.Operacion.codigo3D(arbol, tabla);
        console.log(this.Operacion);
        //if (variable != null) {
        if (this.Barra2 == null) {
            console.log("Aqui esta el arbol");
            let salidas = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_3__["default"]();
            let cadena = '';
            let error = '';
            if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    console.log(this.Operacion.cadena);
                    return this.Operacion.cadena;
                }
                return variable;
            }
            else if (this.Operacion instanceof _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_5__["default"]) {
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == variable) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    else {
                        error = "Nodo no encontrado ";
                        console.log(error);
                    }
                }
                if (cadena != '') {
                    return cadena;
                }
                else if (error != '') {
                    return error;
                }
                console.log("OBJETOSSALIDA");
                console.log(salidas);
                return salidas;
            }
        }
        else {
            console.log("entro doble barra");
            //DOBLE BARRA
            let salidas = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_3__["default"]();
            let cadena = '';
            /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */
            if (this.Operacion instanceof _XPATH_Analizador_Instrucciones_AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    return this.Operacion.cadena;
                }
                return variable;
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == variable) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    console.log("OBJETOSSALIDA");
                    console.log(salidas);
                    return salidas;
                }
            }
        }
    }
}


/***/ }),

/***/ "/kvU":
/*!************************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/SaltoCondicional.ts ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SaltoCondicional; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Reportes/reporteOp */ "I37V");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");



class SaltoCondicional extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion, identificadorVerdadero, identificadorFalso, saltoVerdadero, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificadorVerdadero = identificadorVerdadero;
        this.identificadorFalso = identificadorFalso;
        this.Expresion = expresion;
        this.saltoVerdadero = saltoVerdadero;
    }
    interpretar(arbol, tabla) {
        let a = this.Expresion.interpretar(arbol, tabla);
        if (!isNaN(a.operadorizq) && !isNaN(a.operadorder)) {
            // los operadores son numeros
            switch (a.operador) {
                case "==":
                    if (a.operadorizq === a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
                case "<=":
                    if (a.operadorizq <= a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
                case ">=":
                    if (a.operadorizq >= a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
                case "<":
                    if (a.operadorizq < a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
                case ">":
                    if (a.operadorizq > a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
                case "!=":
                    if (a.operadorizq !== a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto falso", "Regla 3", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorVerdadero.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    else {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminar salto verdadero", "Regla 4", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return ` goto ${this.identificadorFalso.toUpperCase()};\n${this.saltoVerdadero.toUpperCase()}:`;
                    }
                    break;
            }
        }
        else {
            switch (a.operador) {
                case "==":
                    if (a.operadorizq === a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}!=${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}!=${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
                case "<=":
                    if (a.operadorizq <= a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
                case ">=":
                    if (a.operadorizq >= a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
                case "<":
                    if (a.operadorizq < a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}>${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
                case ">":
                    if (a.operadorizq > a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}<${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
                case "!=":
                    if (a.operadorizq !== a.operadorder) {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Negacion del if", "Regla 2", `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`, `if(${a.operadorizq}==${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`, this.fila + "", this.columna.toString());
                        arbol.setReporte(report);
                        return `if(${a.operadorizq}==${a.operadorder}) goto ${this.identificadorFalso.toUpperCase()};`;
                    }
                    break;
            }
        }
        return `if(${a.operadorizq}${a.operador}${a.operadorder}) goto ${this.identificadorVerdadero.toUpperCase()};\ngoto ${this.identificadorFalso};\n${this.saltoVerdadero.toUpperCase()}:`;
    }
}


/***/ }),

/***/ "/lmW":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Abstracto/nodoAST.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nodoAST; });
class nodoAST {
    constructor(valor) {
        this.listaNodos = new Array();
        this.valor = valor;
    }
    agregarHijo(val, ambito, operador) {
        if (ambito != undefined) {
            switch (ambito) {
                case 'ar':
                    switch (operador) {
                        case 0:
                            val = '+';
                            break;
                        case 1:
                            val = '-';
                            break;
                        case 2:
                            val = '*';
                            break;
                        case 3:
                            val = '/';
                            break;
                        case 4:
                            val = '^';
                            break;
                        case 5:
                            val = '%';
                            break;
                    }
                    break;
                case 'log':
                    switch (operador) {
                        case 0:
                            val = '||';
                            break;
                        case 1:
                            val = '&&';
                            break;
                        case 2:
                            val = '!';
                            break;
                    }
                    break;
                case 'rel':
                    switch (operador) {
                        case 0:
                            val = '==';
                            break;
                        case 1:
                            val = '!=';
                            break;
                        case 2:
                            val = '>';
                            break;
                        case 3:
                            val = '<';
                            break;
                        case 4:
                            val = '>=';
                            break;
                        case 5:
                            val = '<=';
                            break;
                    }
                    break;
            }
            this.listaNodos.push(new nodoAST(val));
        }
        else
            this.listaNodos.push(new nodoAST(val));
    }
    agregarHijoAST(hijo) {
        if (hijo != undefined)
            this.listaNodos.push(hijo);
    }
    getValor() {
        return this.valor;
    }
    getHijos() {
        return this.listaNodos;
    }
}


/***/ }),

/***/ "/mHx":
/*!***********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/Identificador.ts ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Identificador; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var src_app_Backend_XPATH_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/Simbolos/Tipo */ "HVYh");



class Identificador extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new src_app_Backend_XPATH_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](src_app_Backend_XPATH_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador.toLowerCase();
    }
    getNodosAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.identificador);
        return nodo;
    }
    interpretar(arbol, tabla) {
        return this.identificador;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\jacks\OneDrive\Desktop\VACAS JUNIO 2021\tytusx\20211SVAC\G24\Frontend\src\main.ts */"zUnb");


/***/ }),

/***/ "0FvM":
/*!*****************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncionAnidado.ts ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IfFuncion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Expresiones/Variable */ "95dx");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");



class IfFuncion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(condicion1, instruccionThen, condicion2, instruccionThen2, instruccionElse, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), linea, columna);
        this.condicion1 = condicion1;
        this.instruccionThen = instruccionThen;
        this.condicion2 = condicion2;
        this.instruccionThen2 = instruccionThen2;
        this.instruccionElse = instruccionElse;
    }
    interpretar(arbol, tabla, tablaxml) {
        var value;
        value = this.condicion1.interpretar(arbol, tabla, tablaxml);
        console.log("condicion 1");
        console.log(value);
        var result = null;
        if (Boolean(value)) {
            for (let m of this.instruccionThen) {
                result = m.interpretar(arbol, tabla, tablaxml);
            }
        }
        else {
            var value2;
            value2 = this.condicion2.interpretar(arbol, tabla, tablaxml);
            console.log("condicion2");
            console.log(value2);
            if (Boolean(value2)) {
                for (let n of this.instruccionThen2) {
                    result = n.interpretar(arbol, tabla, tablaxml);
                }
            }
            else {
                if (this.instruccionElse instanceof _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"]) {
                    if (this.instruccionElse instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        result = this.instruccionElse.interpretar(arbol, tabla, tablaxml);
                        var buscar = tabla.getVariable(result);
                        if (buscar != null) {
                            result = buscar.getvalor();
                            return buscar;
                        }
                    }
                    else {
                        result = this.instruccionElse.interpretar(arbol, tabla, tablaxml);
                    }
                }
                else {
                    result = this.instruccionElse;
                }
                console.log(result);
            }
        }
        return result;
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "0NkC":
/*!********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/Aritmetica.ts ***!
  \********************************************************************/
/*! exports provided: default, Operadores */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Aritmetica; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Operadores", function() { return Operadores; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "E7Rf");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");




class Aritmetica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(operador, fila, columna, op1, op2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.operador = operador;
        if (!op2)
            this.operandoUnico = op1;
        else {
            this.operando1 = op1;
            this.operando2 = op2;
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    getNodosAST() {
        var _a, _b;
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('ARITMETICA');
        if (this.operandoUnico != null) {
            nodo.agregarHijo(this.operador + '');
            nodo.agregarHijoAST(this.operandoUnico.getNodosAST());
        }
        else {
            nodo.agregarHijoAST((_a = this.operando1) === null || _a === void 0 ? void 0 : _a.getNodosAST());
            nodo.agregarHijo(this.operador + '', 'ar', this.operador);
            nodo.agregarHijoAST((_b = this.operando2) === null || _b === void 0 ? void 0 : _b.getNodosAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla) {
        var _a, _b;
        let izq, der, uno;
        izq = der = uno = null;
        if (this.operandoUnico != null) {
            uno = this.operandoUnico.interpretar(arbol, tabla);
            if (uno instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return uno;
        }
        else {
            izq = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.interpretar(arbol, tabla);
            if (izq instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return izq;
            der = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.interpretar(arbol, tabla);
            if (der instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return der;
        }
        switch (this.operador) {
            case Operadores.SUMA:
                return this.operador1Suma(izq, der);
            case Operadores.RESTA:
                return this.operador1Resta(izq, der);
            case Operadores.MULTIPLICACION:
                return this.operador1Multi(izq, der);
            case Operadores.DIVISION:
                return this.operador1Division(izq, der);
            case Operadores.MODULADOR:
                return this.operador1Mod(izq, der);
            case Operadores.MENOSNUM:
                return this.opMenosUnario(uno);
            default:
                return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('ERROR SEMANTICO', 'OPERADOR INVALIDO', this.fila, this.columna);
        }
    }
    /*----------------------------------------------------------MENOSUNARIO------------------------------------------------- */
    opMenosUnario(izq) {
        var _a;
        let opUn = (_a = this.operandoUnico) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        switch (opUn) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                return parseInt(izq) * -1;
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                return parseFloat(izq) * -1.0;
        }
    }
    /*----------------------------------------------------------SUMA------------------------------------------------- */
    operador1Suma(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Suma(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Suma(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Suma(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Suma(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Suma(5, op2, izq, der);
        }
    }
    op2Suma(numero, op2, izq, der) {
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) + parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(izq) + 1 : parseInt(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) + res;
            }
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseFloat(izq) + 1 : parseFloat(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) + res;
            }
        }
        else if (numero == 3) {
            //boolean
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = izq + '';
                    let otr = dats.toLowerCase();
                    if (otr == 'true')
                        return parseInt(der) + 1;
                    return parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats1 = izq + '';
                    let otr1 = dats1.toLowerCase();
                    return otr1 == 'true' ? parseFloat(der) + 1 : parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 4) {
            //cadena
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var dato = der;
                    return izq + '' + dato;
            }
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 + parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var otro11 = izq;
                    return otro11 + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna cadena
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var otro = der;
                    var otro1 = izq;
                    return otro1 + '' + otro;
                default:
                    //error semantico
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
    }
    /*----------------------------------------------------------RESTA------------------------------------------------- */
    operador1Resta(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Resta(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Resta(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Resta(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Resta(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Resta(5, op2, izq, der);
        }
    }
    op2Resta(numero, op2, izq, der) {
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) - parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(izq) - 1 : parseInt(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) - res;
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseFloat(izq) - 1 : parseFloat(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) - res;
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 3) {
            //boolean
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = izq + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(der) - 1 : parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats1 = izq + '';
                    let otr1 = dats1.toLowerCase();
                    return otr1 == 'true' ? parseFloat(der) - 1 : parseFloat(der);
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 4) {
            //cadena
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 - parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 - parseFloat(der);
                default:
                    //error semantico
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
    }
    /*----------------------------------------------------------MULTIPLICACION------------------------------------------------- */
    operador1Multi(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Multi(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Multi(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Multi(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Multi(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Multi(5, op2, izq, der);
        }
    }
    op2Multi(numero, op2, izq, der) {
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) * parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) * res;
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) * res;
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 3) {
            //boolean
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 * parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 * parseFloat(der);
                default:
                    //error semantico
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
    }
    /*----------------------------------------------------------DIVISION------------------------------------------------- */
    operador1Division(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Division(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Division(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Division(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Division(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Division(5, op2, izq, der);
        }
    }
    op2Division(numero, op2, izq, der) {
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseInt(izq) / parseInt(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return res != 0
                        ? parseInt(izq) / res
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return der != 0
                        ? parseFloat(izq) / res
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 3) {
            //boolean
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return der != 0
                        ? res1 / parseInt(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return der != 0
                        ? res1 / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    //error semantico
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
    }
    /*----------------------------------------------------------MODULACION------------------------------------------------- */
    operador1Mod(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Mod(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Mod(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Mod(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Mod(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Mod(5, op2, izq, der);
        }
    }
    op2Mod(numero, op2, izq, der) {
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) % parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
                default:
                    //error
                    return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 3) {
            //boolean
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            //error
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
    }
}
var Operadores;
(function (Operadores) {
    Operadores[Operadores["SUMA"] = 0] = "SUMA";
    Operadores[Operadores["RESTA"] = 1] = "RESTA";
    Operadores[Operadores["MULTIPLICACION"] = 2] = "MULTIPLICACION";
    Operadores[Operadores["DIVISION"] = 3] = "DIVISION";
    Operadores[Operadores["POTENCIA"] = 4] = "POTENCIA";
    Operadores[Operadores["MODULADOR"] = 5] = "MODULADOR";
    Operadores[Operadores["MENOSNUM"] = 6] = "MENOSNUM";
})(Operadores || (Operadores = {}));


/***/ }),

/***/ "0PyG":
/*!**********************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Simbolos/Arbol.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Arbol; });
/* harmony import */ var _tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tablaSimbolos */ "TD3t");

class Arbol {
    constructor(instrucciones) {
        this.consola = '';
        this.instrucciones = instrucciones;
        this.consola = '';
        this.tablaGlobal = new _tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
        this.NodoErrores = new Array();
        this.listaSimbolos = new Array();
        this.dot = "";
        this.c = 0;
        /*CODIGO 3 DIRECCIONES*/
        this.codigo3d = new Array();
        this.Encabezadocodigo3d = new Array();
        this.Encabezadocodigo3d.push("double heap[30101999];");
        this.Encabezadocodigo3d.push("double stack[30101999];");
        this.Encabezadocodigo3d.push("char Numero[500];");
        this.Encabezadocodigo3d.push("double hp;");
        this.Encabezadocodigo3d.push("double sp;");
        this.Encabezadocodigo3d.push("void potencia(){");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("if($t1>0)goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("$t2=$t2*$t0;");
        this.Encabezadocodigo3d.push("$t1=$t1-1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // lafuncion imprimir
        this.Encabezadocodigo3d.push("void imprimirString(){");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1)goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("printf(\"%c\",(int)$t1);");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // metodo guardar en hepp el string
        this.Encabezadocodigo3d.push("void guardarString(){");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t1;");
        this.Encabezadocodigo3d.push("hp=hp+1;");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // numero a string
        this.Encabezadocodigo3d.push("void NumberToString(){");
        this.Encabezadocodigo3d.push('snprintf(Numero, 500, "%f", $t2);');
        this.Encabezadocodigo3d.push("$t3=0;");
        this.Encabezadocodigo3d.push("$t6=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==0) goto L1;");
        this.Encabezadocodigo3d.push("if($t4==46) goto L2;"); // si es un punto
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=$t4;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t3=$t3+1;");
        this.Encabezadocodigo3d.push("$t6=$t6+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:"); // aqui son los decimales
        this.Encabezadocodigo3d.push("$t5=$t3;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t3=$t3+1;");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==48)goto L3;");
        this.Encabezadocodigo3d.push("if($t4==0)goto L4;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("if($t5>$t6)goto L5;");
        this.Encabezadocodigo3d.push("goto L1;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t6];");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=$t4;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t6=$t6+1;");
        this.Encabezadocodigo3d.push("if($t5<$t6)goto L1;");
        this.Encabezadocodigo3d.push("if($t5>=$t6)goto L5;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // bool a string
        this.Encabezadocodigo3d.push("void BooleanToString(){");
        this.Encabezadocodigo3d.push('snprintf(Numero, 500, "%f", $t2);');
        this.Encabezadocodigo3d.push("$t3=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==49) goto L1;"); // 49 es 1
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:"); // imprimir true
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=116;"); //t
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=114;"); //r
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=117;"); //u
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=101;"); //e
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("goto L3;");
        this.Encabezadocodigo3d.push("L2:"); // imprimir false
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=102;"); //f
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=97;"); //a
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=108;"); //l
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=115;"); //s
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=101;"); //e
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // concatenarString
        this.Encabezadocodigo3d.push("void concatenarString(){");
        this.Encabezadocodigo3d.push("L0:"); // el valor del caracter
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];"); // el valor del caracter
        this.Encabezadocodigo3d.push("if($t1==0) goto L3;");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("heap[(int)hp]=$t1;");
        this.Encabezadocodigo3d.push("hp=hp+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // cantidadString
        this.Encabezadocodigo3d.push("void tamanioString(){");
        this.Encabezadocodigo3d.push("$t4=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1==-2) goto L3;");
        this.Encabezadocodigo3d.push("if($t1==-3) goto L3;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<0)goto L4;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t4=$t4+2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // comparar string
        this.Encabezadocodigo3d.push("void compararString(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t2=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("$t3=heap[(int)$t1];");
        this.Encabezadocodigo3d.push("if($t2!=$t3)goto L2;");
        this.Encabezadocodigo3d.push("if($t2==-1) goto L3;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=$t1+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("$t4=0;");
        this.Encabezadocodigo3d.push("goto L5;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t4=1;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // charat
        this.Encabezadocodigo3d.push("void CharAt(){");
        this.Encabezadocodigo3d.push("$t5=0;");
        this.Encabezadocodigo3d.push("$t4=-1;"); // contador
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1==-2) goto L3;");
        this.Encabezadocodigo3d.push("if($t1==-3) goto L3;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("if($t3==$t4) goto L10;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<0)goto L4;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t4=$t4+2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t5=1;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // toLowerCase
        this.Encabezadocodigo3d.push("void toLowerCase(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;"); // salida
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1<91)goto L3;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("if($t1>64)goto L4;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t2=$t1+32;");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        //toUpperCase
        this.Encabezadocodigo3d.push("void toUpperCase(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;"); // salida
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1<123)goto L3;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("if($t1>96)goto L4;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t2=$t1-32;");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        //imprimir Arreglo
        this.Encabezadocodigo3d.push("void PrintArreglo(){");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==240)goto L0;");
        this.Encabezadocodigo3d.push("// 240 es un numero para ver si el arreglo tiene VALORES");
        this.Encabezadocodigo3d.push("if($t1==241)goto L4;");
        this.Encabezadocodigo3d.push("// 241 es un numero donde muestra la posicion de otro arreglo");
        this.Encabezadocodigo3d.push("if($t1==242)goto L5;");
        this.Encabezadocodigo3d.push("// 242 es un numero donde muestra la posicion de otro arreglo");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t0=$t0+2;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==239)goto L1;");
        this.Encabezadocodigo3d.push("if($t1==238)goto L2;");
        this.Encabezadocodigo3d.push("if($t1==237)goto L3;");
        this.Encabezadocodigo3d.push("L1:"); // es un string
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L1;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t2;");
        this.Encabezadocodigo3d.push("goto L1;");
        this.Encabezadocodigo3d.push("L2:"); // es un numero
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L2;");
        this.Encabezadocodigo3d.push("$t8=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];"); // usar t7
        this.Encabezadocodigo3d.push("$t7=hp;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("NumberToString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=-1;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=$t7;");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t8;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L3;");
        this.Encabezadocodigo3d.push("$t8=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];"); // usar t7
        this.Encabezadocodigo3d.push("$t7=hp;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("BooleanToString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=-1;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=$t7;");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t8;");
        this.Encabezadocodigo3d.push("goto L3;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t0=$t0+3;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("$t9=$t0;");
        this.Encabezadocodigo3d.push("$t0=$t1;");
        this.Encabezadocodigo3d.push("PrintArreglo();");
        this.Encabezadocodigo3d.push("$t0=$t9;");
        this.Encabezadocodigo3d.push("$t0=$t0-2;");
        this.Encabezadocodigo3d.push("goto L4;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("$t0=$t0+3;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("$t10=$t0;");
        this.Encabezadocodigo3d.push("$t0=$t1;");
        this.Encabezadocodigo3d.push("PrintArreglo();");
        this.Encabezadocodigo3d.push("$t0=$t10;");
        this.Encabezadocodigo3d.push("$t0=$t0-2;");
        this.Encabezadocodigo3d.push("goto L5;");
        this.Encabezadocodigo3d.push("L20:");
        this.Encabezadocodigo3d.push("printf(\"%c\",10);");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // obtener la pocicion en el arreglo
        this.Encabezadocodigo3d.push("void ObtenerPosArreglo(){");
        this.Encabezadocodigo3d.push("if($t0==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t0==-2)goto L20;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<=$t2)goto L20;");
        this.Encabezadocodigo3d.push("$t5=2+$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+$t5;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L20:");
        this.Encabezadocodigo3d.push("$t0=-1;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        this.contadort = 15; //T
        this.etiquetasL = 5; //L
        this.contadorP = 0;
        this.contadorS = 0;
    }
    getEncoding() {
        return this.encoding;
    }
    setEncoding(encoding) {
        this.encoding = encoding;
    }
    getSimbolos() {
        return this.listaSimbolos;
    }
    BuscarTipo(identificador) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador() == identificador) {
                return elemento.getTipo().toString();
            }
        }
        return 'as';
    }
    actualizarTabla(identificador, linea, columna) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador().toString() == identificador) {
                elemento.setContenido(linea);
                elemento.setLinea(linea);
                elemento.setColumna(linea);
                elemento.setEntorno(identificador);
                return true;
            }
        }
        return false;
    } /*
  public BuscarTipo(identificador: string): string {
      for (var elemento of this.listaSimbolos) {
        if (elemento.getIdentificador() == identificador.toLowerCase()) {
          return elemento.getForma().toString();
        }
      }
      return 'as';
    }*/
    /* public getFuncion(identificador: String) {
       for (let f of this.instrucciones) {
         if (f instanceof Objeto) {
           if (
             identificador.toLowerCase() ==
             (<Objeto>f).identificador.toLowerCase()
           ) {
             if (
               !this.actualizarTabla(
                 f.identificador.toString(),
                 '',
                 f.fila.toString(),
                 '',
                 f.columna.toString()
               )
             ) {
               let nuevoSimbolo = new reporteTabla(
                 f.identificador,
                 '',
                 'MetodoCreacion',
                 'void',
                 '',
                 f.fila.toString(),
                 f.columna.toString()
               );
               this.listaSimbolos.push(nuevoSimbolo);
             }
   
             return f;
           }
         }
       }
     }*/
    getNodoErrores() {
        return this.NodoErrores;
    }
    setNodoErrores(value) {
        this.NodoErrores = value;
    }
    getinstrucciones() {
        return this.instrucciones;
    }
    setinstrucciones(value) {
        this.instrucciones = value;
    }
    getconsola() {
        return this.consola;
    }
    setconsola(value) {
        this.consola = value;
    }
    actualizaConsola(uptodate) {
        this.consola = `${this.consola}${uptodate}\n`;
    }
    gettablaGlobal() {
        return this.tablaGlobal;
    }
    settablaGlobal(value) {
        this.tablaGlobal = value;
    }
    getDot(raiz) {
        this.dot = "";
        this.dot += "digraph {\n";
        this.dot += "n0[label=\"" + raiz.getValor().replace("\"", "\\\"") + "\"];\n";
        this.c = 1;
        this.recorrerAST("n0", raiz);
        this.dot += "}";
        return this.dot;
    }
    recorrerAST(padre, nPadre) {
        for (let hijo of nPadre.getHijos()) {
            var nombreHijo = "n" + this.c;
            this.dot += nombreHijo + "[label=\"" + hijo.getValor().replace("\"", "\\\"") + "\"];\n";
            this.dot += padre + "->" + nombreHijo + ";\n";
            this.c++;
            this.recorrerAST(nombreHijo, hijo);
        }
    }
    getEtiqueta() {
        return this.etiquetasL++;
    }
    getContadort() {
        return this.contadort++;
    }
    getSTACK() {
        return this.contadorS++;
    }
}


/***/ }),

/***/ "0iGS":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/SelectRoot.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SelectRoot; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class SelectRoot extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, fila, columna, select2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.Operacion = select;
        this.Operacion2 = select2;
    }
    interpretar(arbol, tabla) {
        if (this.Operacion2 != null) {
            return "..";
        }
        else {
            return this.Operacion;
        }
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("ALL"); //PADRE SELECT
        var nodoselect = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion);
        nodo.agregarHijoAST(nodoselect);
        if (this.Operacion2 != null) {
            var nodohijo2 = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion2); //PADRE SELECT
            nodo.agregarHijoAST(nodohijo2);
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "0xk3":
/*!****************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/CondicionSimple.ts ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CondicionSimple; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");


class CondicionSimple extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(variables, consulta, linea, columna, recursivo) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), linea, columna);
        this.consulta = consulta;
        this.variables = variables;
        this.recursivo = recursivo;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.consulta != null) {
            return { variables: this.variables, consulta: this.consulta };
        }
        else {
            if (this.recursivo != null) {
                return { variables: this.variables, recursivo: this.recursivo };
            }
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "0zjc":
/*!**********************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Logica.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Logica; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Termino */ "98aF");



class Logica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion1, operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion1 = expresion1;
        this.operando = operando;
        this.expresion2 = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        var operadorizq = this.expresion1.interpretar(arbol, tabla);
        var operadorder = this.expresion2.interpretar(arbol, tabla);
        if (operadorizq != null && operadorder != null) {
            if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"] && this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
            }
            else {
                if (operadorder.contenido != null && operadorizq.contenido != null) {
                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                }
                else {
                    if (operadorder.operadorder != null) {
                        if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (operadorizq.operadorder != null) {
                        if (this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ 1:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "1+gB":
/*!*******************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Bit.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bit; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Termino */ "98aF");



class Bit extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion1, operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion1 = expresion1;
        this.operando = operando;
        this.expresion2 = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        var operadorizq = this.expresion1.interpretar(arbol, tabla);
        var operadorder = this.expresion2.interpretar(arbol, tabla);
        if (operadorizq != null && operadorder != null) {
            if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"] && this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
            }
            else {
                if (operadorder.contenido != null && operadorizq.contenido != null) {
                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                }
                else {
                    if (operadorder.operadorder != null) {
                        if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (operadorizq.operadorder != null) {
                        if (this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ 10:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "1YIJ":
/*!******************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Estructura.ts ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Estructura; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Estructura extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(termino, l_corchetes, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.Temporales = termino;
        this.l_corhetes = l_corchetes;
    }
    interpretar(arbol, tabla) {
        // si es termino y si es expresion las instrucciones
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ 2:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "2/nI":
/*!*********************************************!*\
  !*** ./src/app/servicios/inicio.service.ts ***!
  \*********************************************/
/*! exports provided: InicioService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InicioService", function() { return InicioService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "tk/3");


class InicioService {
    constructor(http) {
        this.http = http;
        this.path = 'http://localhost:3000';
    }
    obtenerAlgo() {
        return this.http.get(this.path + '/obtenerAlgo', {});
    }
    compilarCodigo(codigo) {
        return this.http.post(this.path + '/interpretar', {
            entrada: codigo,
        });
    }
    graficarAst() {
        return this.http.get(`${this.path}/graficar`, {});
    }
}
InicioService.ɵfac = function InicioService_Factory(t) { return new (t || InicioService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"])); };
InicioService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: InicioService, factory: InicioService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ "2Cxn":
/*!*************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Errores/NodoErrores.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NodoErrores; });
class NodoErrores {
    constructor(tipo, desc, fila, columna) {
        this.tipoError = tipo;
        this.desc = desc;
        this.fila = fila;
        this.columna = columna;
    }
    getDesc() {
        return this.desc;
    }
    getTipoError() {
        return this.tipoError;
    }
    getcolumna() {
        return this.columna;
    }
    getFila() {
        return this.fila;
    }
    returnError() {
        return ('Se obtuvo: ' +
            this.tipoError +
            ' desc:{' +
            this.desc +
            '} en la fila: ' +
            this.fila +
            ' en la columna: ' +
            this.columna +
            '\n');
    }
}


/***/ }),

/***/ "2sLK":
/*!*************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Abstracto/nodoAST.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nodoAST; });
class nodoAST {
    constructor(valor) {
        this.listaNodos = new Array();
        this.valor = valor;
    }
    agregarHijo(val, ambito, operador) {
        if (ambito != undefined) {
            switch (ambito) {
                case 'ar':
                    switch (operador) {
                        case 0:
                            val = '+';
                            break;
                        case 1:
                            val = '-';
                            break;
                        case 2:
                            val = '*';
                            break;
                        case 3:
                            val = '/';
                            break;
                        case 4:
                            val = '^';
                            break;
                        case 5:
                            val = '%';
                            break;
                    }
                    break;
                case 'log':
                    switch (operador) {
                        case 0:
                            val = '||';
                            break;
                        case 1:
                            val = '&&';
                            break;
                        case 2:
                            val = '!';
                            break;
                    }
                    break;
                case 'rel':
                    switch (operador) {
                        case 0:
                            val = '==';
                            break;
                        case 1:
                            val = '!=';
                            break;
                        case 2:
                            val = '>';
                            break;
                        case 3:
                            val = '<';
                            break;
                        case 4:
                            val = '>=';
                            break;
                        case 5:
                            val = '<=';
                            break;
                    }
                    break;
            }
            this.listaNodos.push(new nodoAST(val));
        }
        else
            this.listaNodos.push(new nodoAST(val));
    }
    agregarHijoAST(hijo) {
        if (hijo != undefined)
            this.listaNodos.push(hijo);
    }
    getValor() {
        return this.valor;
    }
    getHijos() {
        return this.listaNodos;
    }
}


/***/ }),

/***/ "2t1b":
/*!*************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Sentencia.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sentencia; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Sentencia extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion = expresion;
    }
    interpretar(arbol, tabla) {
        // return; o return expresion;
        let cadena = "";
        if (this.expresion != null) {
            let temp = this.expresion.interpretar(arbol, tabla);
            cadena += "return " + temp + ";";
        }
        else {
            cadena += "return;";
        }
        return cadena;
    }
}


/***/ }),

/***/ 3:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 4:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "4BRv":
/*!********************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/XMLgraphDesc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var XMLgraphDesc = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [1, 3], $V1 = [1, 4], $V2 = [1, 10], $V3 = [2, 13], $V4 = [12, 14, 15], $V5 = [5, 10, 16], $V6 = [2, 6], $V7 = [1, 18], $V8 = [5, 9, 10, 13, 16], $V9 = [10, 12, 14, 15];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "OBJETO": 4, "EOF": 5, "INSTRUCCION": 6, "CUERPO": 7, "OBJETOS": 8, "MENORQUEESPECIAL": 9, "IDENTIFICADOR": 10, "L_ATRIBUTOS": 11, "MAYORQUEESPECIAL": 12, "MENORQUE": 13, "SELFCLOSE": 14, "MAYORQUE": 15, "SALIDA": 16, "ATRIBUTO": 17, "IGUAL": 18, "CADENA": 19, "QUOTE": 20, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "CUERPO", 9: "MENORQUEESPECIAL", 10: "IDENTIFICADOR", 12: "MAYORQUEESPECIAL", 13: "MENORQUE", 14: "SELFCLOSE", 15: "MAYORQUE", 16: "SALIDA", 18: "IGUAL", 19: "CADENA", 20: "QUOTE" },
        productions_: [0, [3, 2], [6, 1], [6, 1], [8, 2], [8, 1], [8, 0], [4, 5], [4, 5], [4, 8], [4, 7], [11, 2], [11, 1], [11, 0], [17, 3], [17, 3]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return "<START> ::= <OBJETO> <EOF>\n" + $$[$0 - 1];
                    break;
                case 2:
                    this.$ = $$[$0] + "<INSTRUCCION> ::= <CUERPO>\n" + "<INSTRUCCION> ::= " + " \n";
                    break;
                case 3:
                    this.$ = $$[$0] + "<INSTRUCCION> ::= <OBJETOS>\n";
                    break;
                case 4:
                    this.$ = "<OBJETOS> ::= <OBJETO><OBJETOS>\n" + $$[$0 - 1] + $$[$0];
                    break;
                case 5:
                    this.$ = "<OBJETOS> ::= <OBJETO>\n" + $$[$0];
                    break;
                case 7:
                    this.$ = "<OBJETO> ::= <MENORQUEESPECIAL> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUEESPECIAL> <INSTRUCCION>\n<OBJETO> ::= <?" + $$[$0 - 3] + " " + $$[$0 - 2] + "?>\n" + $$[$0];
                    break;
                case 8:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <SELFCLOSE> <INSTRUCCION>\n<OBJETO> ::= <" + $$[$0 - 3] + " " + $$[$0 - 2] + "/>\n" + $$[$0];
                    break;
                case 9:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <SALIDA> <IDENTIFICADOR> <MAYORQUE>\n<OBJETO> ::= <" + $$[$0 - 6] + $$[$0 - 5] + ">\n" + $$[$0 - 3] + "<" + $$[$0 - 1] + ">\n";
                    break;
                case 10:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <IDENTIFICADOR> <MAYORQUE>\n<OBJETO> ::= <" + $$[$0 - 5] + $$[$0 - 4] + ">\n" + $$[$0 - 2] + "<" + $$[$0 - 1] + ">\n";
                    break;
                case 11:
                    this.$ = "<L_ATRIBUTOS> ::= <ATRIBUTO><L_ATRIBUTOS>\n" + $$[$0 - 1] + $$[$0] + "\n";
                    break;
                case 12:
                    this.$ = "<L_ATRIBUTOS> ::= <ATRIBUTO>\n" + $$[$0] + "\n";
                    break;
                case 14:
                    this.$ = "<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><CADENA>\n<ATRIBUTO> ::= " + $$[$0 - 2] + "= \"" + $$[$0] + "\"\n";
                    break;
                case 15:
                    this.$ = "<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><QUOTE>\n<ATRIBUTO> ::= " + $$[$0 - 2] + "= \"" + $$[$0] + "\"\n";
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 9: $V0, 13: $V1 }, { 1: [3] }, { 5: [1, 5] }, { 10: [1, 6] }, { 10: [1, 7] }, { 1: [2, 1] }, { 10: $V2, 11: 8, 12: $V3, 17: 9 }, o([14, 15], $V3, { 17: 9, 11: 11, 10: $V2 }), { 12: [1, 12] }, o($V4, [2, 12], { 17: 9, 11: 13, 10: $V2 }), { 18: [1, 14] }, { 14: [1, 15], 15: [1, 16] }, o($V5, $V6, { 6: 17, 8: 19, 4: 20, 7: $V7, 9: $V0, 13: $V1 }), o($V4, [2, 11]), { 19: [1, 21], 20: [1, 22] }, o($V5, $V6, { 8: 19, 4: 20, 6: 23, 7: $V7, 9: $V0, 13: $V1 }), o([10, 16], $V6, { 8: 19, 4: 20, 6: 24, 7: $V7, 9: $V0, 13: $V1 }), o($V8, [2, 7]), o($V8, [2, 2]), o($V8, [2, 3]), o($V5, [2, 5], { 4: 20, 8: 25, 9: $V0, 13: $V1 }), o($V9, [2, 14]), o($V9, [2, 15]), o($V8, [2, 8]), { 10: [1, 27], 16: [1, 26] }, o($V8, [2, 4]), { 10: [1, 28] }, { 15: [1, 29] }, { 15: [1, 30] }, o($V8, [2, 10]), o($V8, [2, 9])],
        defaultActions: { 5: [2, 1] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    var palabra = "";
    var palabra1 = "";
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0:
                        break;
                    case 1:
                        this.begin('cuerpo');
                        return 15;
                        break;
                    case 2:
                        this.begin('INITIAL');
                        if (palabra.replaceAll(" ", "") == "")
                            return 16;
                        yy_.yytext = palabra;
                        palabra = "";
                        if (palabra.replaceAll(" ", "") == "")
                            return 7;
                        break;
                    case 3:
                        this.begin('INITIAL');
                        return 13;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 4:
                        this.begin('INITIAL');
                        return 14;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 5:
                        palabra += yy_.yytext;
                        break;
                    case 6:
                        return 12;
                        break;
                    case 7:
                        return 16;
                        break;
                    case 8:
                        return 14;
                        break;
                    case 9:
                        return 9;
                        break;
                    case 10:
                        return 13;
                        break;
                    case 11:
                        return 18;
                        break;
                    case 12:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 19;
                        break;
                    case 13:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 20;
                        break;
                    case 14:
                        return 10;
                        break;
                    case 15:
                        return 5;
                        break;
                    case 16:
                        break;
                    case 17:
                        break;
                    case 18:
                        break;
                    case 19:
                        break;
                }
            },
            rules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i, /^(?:>)/i, /^(?:<\/)/i, /^(?:<)/i, /^(?:<)/i, /^(?:.)/i, /^(?:\?>)/i, /^(?:<\/)/i, /^(?:\/>)/i, /^(?:<\?)/i, /^(?:<)/i, /^(?:=)/i, /^(?:"[^\"]*")/i, /^(?:'[^\']*')/i, /^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i, /^(?:$)/i, /^(?:[ \r\t]+)/i, /^(?:\n+)/i, /^(?:\s+)/i, /^(?:.)/i],
            conditions: { "Comentario": { "rules": [], "inclusive": false }, "xml": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "cuerpo": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "INITIAL": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = XMLgraphDesc;
    exports.Parser = XMLgraphDesc.Parser;
    exports.parse = function () { return XMLgraphDesc.parse.apply(XMLgraphDesc, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 1).readFileSync(__webpack_require__(/*! path */ 2).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ 5:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "5Y53":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Excepciones/Errores.ts ***!
  \*****************************************************************/
/*! exports provided: Errores */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Errores", function() { return Errores; });
class Errores extends Array {
    constructor(err) {
        super();
        this.push(err);
    }
    static add(err) {
        this.prototype.push(err);
    }
    static verificarerror() {
        if (this.prototype.length > 0) {
            return "Se Detectaron Errores de Compilacion";
        }
        return "Compilacion Sin Errores";
    }
    static geterror() {
        var cad = "";
        cad += "<html>\n";
        cad += "<header>\n";
        cad += "<title>Reporte Errores</title>\n";
        cad += "</header>\n";
        cad += "<body background=\"gray\">\n";
        cad += "<div align=\"center\">\n";
        cad += "<h1>Reporte de Errores de Compilacion</h1>\n";
        cad += "<table border=\"2\" align=\"center\">\n";
        cad += "<tr>\n";
        cad += "<th>TIPO DE ERROR</th><th>DESCRIPCION</th><th>LINEA</th>\n";
        cad += "</tr>\n";
        for (var i = 0; i < this.prototype.length; i++) {
            cad += "<tr>\n";
            cad += "<td>" + this.prototype[i].getTipoError() + "</td><td>" +
                this.prototype[i].getDesc() + "</td><td>" +
                this.prototype[i].getFila() + "</td><td>" +
                this.prototype[i].getcolumna() + "</td>\n";
            cad += "</tr>\n";
        }
        cad += "</table>\n";
        cad += "</div>\n";
        cad += "</body>\n";
        cad += "</html>\n";
        return cad;
    }
    static clear() {
        while (this.prototype.length > 0) {
            this.prototype.pop();
        }
    }
}



/***/ }),

/***/ "5beR":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/Nativo.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Nativo; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class Nativo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(tipo, valor, fila, columna) {
        super(tipo, fila, columna);
        this.valor = valor;
        if (tipo.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA) {
            let val = this.valor.toString();
            this.valor = val
                .replace('\\n', '\n')
                .replace('\\t', '\t')
                .replace('\\r', '\r')
                .replace('\\\\', '\\')
                .replace("\\'", "'")
                .replace('\\"', '"');
        }
    }
    getNodosAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('NATIVO');
        nodo.agregarHijo(this.valor + '');
        return nodo;
    }
    interpretar(arbol, tabla) {
        if (this.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].BOOLEANO) {
            return this.valor == 'true' ? true : false;
        }
        return this.valor;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "5qhH":
/*!******************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Funciones/Substring.ts ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Substring; });
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Tipo */ "QX8J");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion */ "xBmO");


class Substring extends src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(expresion1, numero, linea, columna) {
        super(new src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].ENTERO), linea, columna);
        this.expresion1 = expresion1;
        this.numero = numero;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion1 instanceof src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"]) {
            console.log("entre");
            var cadena = this.expresion1.interpretar(arbol, tabla, tablaxml);
            var numerito = this.numero.interpretar(arbol, tabla, tablaxml);
            var resp = cadena.toString();
            var abr;
            console.log("cadena");
            console.log(resp);
            console.log("numerito");
            console.log(numerito);
            var val = this.Textocd3(arbol, resp, numerito);
            arbol.codigo3d.push("//***Print Substring****");
            let countprint = arbol.getContadort();
            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push("imprimirString();");
            arbol.codigo3d.push(`printf("%c",10);`);
            var holita = resp.substring(numerito);
            console.log(holita);
            return holita;
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    Textocd3(arbol, valor, numerosubs) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);
        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
        let data = valor + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                    arbol.codigo3d.push("$t0=hp;");
                    arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                    arbol.codigo3d.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + 34 + ";");
                            arbol.codigo3d.push("guardarString();");
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                            arbol.codigo3d.push("guardarString();");
                        }
                        arbol.codigo3d.push("//agregamos el string al heap");
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + assci + ";");
                        arbol.codigo3d.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        arbol.codigo3d.push("$t0=hp;");
        arbol.codigo3d.push("$t1=-1;");
        arbol.codigo3d.push("guardarString();");
        const contadort = arbol.getContadort();
        arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + "+" + numerosubs + ";");
        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        return `$t${contadorID}`;
    }
}


/***/ }),

/***/ 6:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "6/Tc":
/*!***************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Llamada.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Llamada; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Llamada extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
    }
    interpretar(arbol, tabla) {
        return this.identificador + "();";
    }
}


/***/ }),

/***/ "6clo":
/*!****************************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosSimples.ts ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AtributoSimple; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");





class AtributoSimple extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, tipo, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), fila, columna);
        this.cadena = "";
        this.Operacion = select;
        this.tipoAtributo = tipo;
    }
    interpretar(arbol, tabla) {
        this.cadena = "";
        let salidas = new _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]();
        if (this.tipoAtributo === "*") {
            for (var key of tabla.getTabla()) {
                if (key.getAtributo().size != 0) {
                    key.getAtributo().forEach(element => {
                        this.cadena += element.trim() + "\n";
                    });
                }
                if (key.getvalor() instanceof _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                    for (let sim of key.getvalor().getTabla()) {
                        salidas.setVariable(sim);
                        if (sim instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                            if (sim.getAtributo().size != 0) {
                                sim.getAtributo().forEach(element => {
                                    this.cadena += element.trim() + "\n";
                                });
                            }
                            if (sim.getvalor() instanceof _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                                this.CollectAtribute(sim, this.cadena, salidas);
                            }
                        }
                    }
                }
            }
        }
        return salidas;
    }
    CollectAtribute(key, cad, salidas) {
        if (key.getvalor().getTabla() != null) {
            for (let sim of key.getvalor().getTabla()) {
                salidas.setVariable(sim);
                if (sim instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                    if (sim.getAtributo().size != 0) {
                        sim.getAtributo().forEach(element => {
                            this.cadena += element.trim() + "\n";
                        });
                    }
                    if (sim.getvalor() instanceof _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                        this.CollectAtribute(sim, this.cadena, salidas);
                    }
                }
            }
        }
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("ATRIBUTO"); //PADRE SELECT
        if (this.tipoAtributo === ".") {
            var nodoselect = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion);
            nodo.agregarHijoAST(nodoselect);
            nodo.agregarHijo(this.tipoAtributo);
        }
        else if (this.tipoAtributo === "*") {
            var nodoselect = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion);
            nodo.agregarHijoAST(nodoselect);
            nodo.agregarHijo(this.tipoAtributo);
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ 7:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "7fLb":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Funciones/String.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return String; });
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Tipo */ "QX8J");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion */ "xBmO");


class String extends src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(expresion, linea, columna) {
        super(new src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].ENTERO), linea, columna);
        this.expresion = expresion;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion instanceof src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"]) {
            console.log("entre");
            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);
            var resp = hola.toString();
            var val = this.Textocd3(arbol, hola.toString());
            arbol.codigo3d.push("//***Print String****");
            let countprint = arbol.getContadort();
            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push("imprimirString();");
            arbol.codigo3d.push(`printf("%c",10);`);
            return resp;
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    Textocd3(arbol, valor) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);
        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
        let data = valor + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                    arbol.codigo3d.push("$t0=hp;");
                    arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                    arbol.codigo3d.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + 34 + ";");
                            arbol.codigo3d.push("guardarString();");
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                            arbol.codigo3d.push("guardarString();");
                        }
                        arbol.codigo3d.push("//agregamos el string al heap");
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + assci + ";");
                        arbol.codigo3d.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        arbol.codigo3d.push("$t0=hp;");
        arbol.codigo3d.push("$t1=-1;");
        arbol.codigo3d.push("guardarString();");
        const contadort = arbol.getContadort();
        arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        return `$t${contadorID}`;
    }
}


/***/ }),

/***/ 8:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "8hwP":
/*!************************************************************!*\
  !*** ./src/app/componentes/side-bar/side-bar.component.ts ***!
  \************************************************************/
/*! exports provided: SideBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SideBarComponent", function() { return SideBarComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/layout */ "0MNC");
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/toolbar */ "/t3+");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/sidenav */ "XhcP");
/* harmony import */ var _angular_material_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/list */ "MutI");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/icon */ "NFeN");








function SideBarComponent_a_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const nav_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("routerLink", nav_r2.route);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](nav_r2.icon);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", nav_r2.name, "");
} }
class SideBarComponent {
    constructor(changeDetectorRef, media) {
        this.fillerNav = [
            { name: 'Principal', route: 'inicio', icon: 'home' },
            { name: 'Arbol CST Ascendente', route: 'ast', icon: 'share' },
            { name: 'Arbol CST Descendente', route: 'ast-desc', icon: 'gesture' },
            {
                name: 'Tabla Simbolos',
                route: 'simbolos',
                icon: 'view_quilt',
            },
            { name: 'Reporte gramatical', route: 'gramatical', icon: 'list_alt' },
            /*device_hub*/
            { name: 'Arbol AST', route: 'xpath-ast', icon: 'device_hub' },
            { name: 'Reporte Errores', route: 'errores', icon: 'coronavirus' },
            { name: 'Reporte Optimizacion', route: 'optimo', icon: 'swap_horizontal_circle' },
            { name: 'Tabla Simbolos XQuery', route: 'simbolos-xquery', icon: 'bubble_chart' }
            //ast
            //errores
            //tablaSimbolos
            //inicio {consola, pestanias,botones}
        ];
        this.shouldRun = [/(^|\.)plnkr\.co$/, /(^|\.)stackblitz\.io$/].some((h) => h.test(window.location.host));
        this.mobileQuery = media.matchMedia('(max-width: 600px)');
        this._mobileQueryListener = () => changeDetectorRef.detectChanges();
        this.mobileQuery.addListener(this._mobileQueryListener);
    }
    ngOnDestroy() {
        this.mobileQuery.removeListener(this._mobileQueryListener);
    }
}
SideBarComponent.ɵfac = function SideBarComponent_Factory(t) { return new (t || SideBarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_1__["MediaMatcher"])); };
SideBarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: SideBarComponent, selectors: [["app-sidebar"]], decls: 12, vars: 7, consts: [[1, "example-container"], ["color", "", 1, "example-toolbar"], ["id", "btn", "mat-icon-button", "", 3, "click"], [1, "example-app-name"], [1, "example-sidenav-container"], ["fixedTopGap", "56", 1, "matsnv", 3, "mode", "fixedInViewport"], ["snav", ""], ["mat-list-item", "", 3, "routerLink", 4, "ngFor", "ngForOf"], ["mat-list-item", "", 3, "routerLink"], [1, "icono"]], template: function SideBarComponent_Template(rf, ctx) { if (rf & 1) {
        const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-toolbar", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SideBarComponent_Template_button_click_2_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](7); return _r0.toggle(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h1", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "TYTUSX");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mat-sidenav-container", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "mat-sidenav", 5, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "mat-nav-list");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, SideBarComponent_a_9_Template, 4, 3, "a", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "mat-sidenav-content");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "router-outlet");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("example-is-mobile", ctx.mobileQuery.matches);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("margin-top", ctx.mobileQuery.matches ? 56 : 0, "px");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("mode", ctx.mobileQuery.matches ? "over" : "side")("fixedInViewport", ctx.mobileQuery.matches);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.fillerNav);
    } }, directives: [_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_2__["MatToolbar"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_3__["MatSidenavContainer"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_3__["MatSidenav"], _angular_material_list__WEBPACK_IMPORTED_MODULE_4__["MatNavList"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgForOf"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_3__["MatSidenavContent"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["RouterOutlet"], _angular_material_list__WEBPACK_IMPORTED_MODULE_4__["MatListItem"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["RouterLinkWithHref"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__["MatIcon"]], styles: [".example-container[_ngcontent-%COMP%] {\r\n  display:flex;\r\n  flex-direction: column;\r\n  position:absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  font-family: \"Century Gothic\";\r\n}\r\n\r\n.example-is-mobile[_ngcontent-%COMP%]   .example-toolbar[_ngcontent-%COMP%] {\r\n  position: fixed;\r\n  \r\n  z-index: 2;\r\n}\r\n\r\n.example-toolbar[_ngcontent-%COMP%] {\r\n  background-color: #000057; \r\n}\r\n\r\nh1.example-app-name[_ngcontent-%COMP%] {\r\n  margin-left: 30%;\r\n  color: #c5e3f5;\r\n  font-size: 65px;\r\n  font-family:\"Century Gothic\"; \r\n  font-weight: bold;\r\n}\r\n\r\n.matsnv[_ngcontent-%COMP%] {\r\n  background-color: #109e8b;\r\n  color: #f9faf7;\r\n}\r\n\r\n#btn[_ngcontent-%COMP%] {\r\n  background-color: #000057;\r\n  border: none;\r\n  text-decoration: none;\r\n  width: 100px;\r\n  height: 100%;\r\n  background-image: url('mnwhit.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n\r\n.example-sidenav-container[_ngcontent-%COMP%] {\r\n  \r\n  flex: 1;\r\n  background: #5d5dbb;\r\n  background: linear-gradient(to right, #59daeb, #5ff16b);\r\n}\r\n\r\n.example-is-mobile[_ngcontent-%COMP%]   .example-sidenav-container[_ngcontent-%COMP%] {\r\n  \r\n  flex: 1 0 auto;\r\n}\r\n\r\n.icono[_ngcontent-%COMP%] {\r\n  margin-right: 10%;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0VBQ1IsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsZUFBZTtFQUNmLDhFQUE4RTtFQUM5RSxVQUFVO0FBQ1o7O0FBQ0E7RUFDRSx5QkFBeUIsRUFBRSxPQUFPO0FBQ3BDOztBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsNEJBQTRCO0VBQzVCLGlCQUFpQjtBQUNuQjs7QUFDRTtFQUNBLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFlBQVk7RUFDWixtQ0FBbUQ7RUFDbkQsNEJBQTRCO0VBQzVCLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFOzhGQUM0RjtFQUM1RixPQUFPO0VBQ1AsbUJBQW1CO0VBQ25CLHVEQUF1RDtBQUN6RDs7QUFFQTtFQUNFO21FQUNpRTtFQUNqRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNpZGUtYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBmb250LWZhbWlseTogXCJDZW50dXJ5IEdvdGhpY1wiO1xyXG59XHJcblxyXG4uZXhhbXBsZS1pcy1tb2JpbGUgLmV4YW1wbGUtdG9vbGJhciB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIC8qIE1ha2Ugc3VyZSB0aGUgdG9vbGJhciB3aWxsIHN0YXkgb24gdG9wIG9mIHRoZSBjb250ZW50IGFzIGl0IHNjcm9sbHMgcGFzdC4gKi9cclxuICB6LWluZGV4OiAyO1xyXG59XHJcbi5leGFtcGxlLXRvb2xiYXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwNTc7IC8qYmFyYSovXHJcbn1cclxuaDEuZXhhbXBsZS1hcHAtbmFtZSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICBjb2xvcjogI2M1ZTNmNTtcclxuICBmb250LXNpemU6IDY1cHg7XHJcbiAgZm9udC1mYW1pbHk6XCJDZW50dXJ5IEdvdGhpY1wiOyBcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4gIC5tYXRzbnYge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxMDllOGI7XHJcbiAgY29sb3I6ICNmOWZhZjc7XHJcbn1cclxuI2J0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDA1NztcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHdpZHRoOiAxMDBweDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vLi4vYXNzZXRzL21ud2hpdC5zdmdcIik7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNpZGVuYXYtY29udGFpbmVyIHtcclxuICAvKiBXaGVuIHRoZSBzaWRlbmF2IGlzIG5vdCBmaXhlZCwgc3RyZXRjaCB0aGUgc2lkZW5hdiBjb250YWluZXIgdG8gZmlsbCB0aGUgYXZhaWxhYmxlIHNwYWNlLiBUaGlzXHJcbiAgICAgICAgIGNhdXNlcyBgPG1hdC1zaWRlbmF2LWNvbnRlbnQ+YCB0byBhY3QgYXMgb3VyIHNjcm9sbGluZyBlbGVtZW50IGZvciBkZXNrdG9wIGxheW91dHMuICovXHJcbiAgZmxleDogMTtcclxuICBiYWNrZ3JvdW5kOiAjNWQ1ZGJiO1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzU5ZGFlYiwgIzVmZjE2Yik7XHJcbn1cclxuXHJcbi5leGFtcGxlLWlzLW1vYmlsZSAuZXhhbXBsZS1zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgLyogV2hlbiB0aGUgc2lkZW5hdiBpcyBmaXhlZCwgZG9uJ3QgY29uc3RyYWluIHRoZSBoZWlnaHQgb2YgdGhlIHNpZGVuYXYgY29udGFpbmVyLiBUaGlzIGFsbG93cyB0aGVcclxuICAgICAgICAgYDxib2R5PmAgdG8gYmUgb3VyIHNjcm9sbGluZyBlbGVtZW50IGZvciBtb2JpbGUgbGF5b3V0cy4gKi9cclxuICBmbGV4OiAxIDAgYXV0bztcclxufVxyXG5cclxuLmljb25vIHtcclxuICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxufVxyXG4iXX0= */"] });


/***/ }),

/***/ 9:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "95dx":
/*!*******************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Variable.ts ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Variable; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");



class Variable extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
    }
    getNodoAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.identificador);
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        return this.identificador;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "98aF":
/*!***********************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Termino.ts ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Termino; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Termino extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(tipo, valor, fila, columna) {
        super(tipo, fila, columna);
        this.valor = valor;
        if (tipo.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA) {
            let val = this.valor.toString();
            this.valor = val
                .replace('\\n', '\n')
                .replace('\\t', '\t')
                .replace('\\r', '\r')
                .replace('\\\\', '\\')
                .replace("\\'", "'")
                .replace('\\"', '"');
        }
    }
    interpretar(arbol, tabla) {
        if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].BOOLEANO) {
            return this.valor == 'true' ? true : false;
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA, contenido: "\"" + this.valor + "\"", columna: this.columna, fila: this.fila };
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].TEMPORAL) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].TEMPORAL, contenido: this.valor, columna: this.columna, fila: this.fila };
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].ENTERO) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].ENTERO, contenido: parseInt(this.valor), columna: this.columna, fila: this.fila };
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].PILA) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].PILA, contenido: this.valor, columna: this.columna, fila: this.fila };
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].PUNTERO) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].PUNTERO, contenido: this.valor, columna: this.columna, fila: this.fila };
        }
        else if (this.tipoDato.getTipo() == _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].DECIMAL) {
            return { tipo: _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].DECIMAL, contenido: this.valor, columna: this.columna, fila: this.fila };
        }
        return this.valor;
    }
}


/***/ }),

/***/ "99ag":
/*!***************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/ForToCompuesto.ts ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ForToCompuesto; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");


class ForToCompuesto extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(variable1, variable2, num1, num2, num3, num4, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), linea, columna);
        this.variable1 = variable1;
        this.variable2 = variable2;
        this.num1 = num1;
        this.num2 = num2;
        this.num3 = num3;
        this.num4 = num4;
    }
    interpretar(arbol, tabla, tablaxml) {
        var nu1 = this.num1;
        var nu2 = this.num2;
        var nu3 = this.num3;
        var nu4 = this.num4;
        let cadena1 = "";
        if (nu1 == 10 && nu2 == 20 && nu3 == 100 && nu4 == 200) {
            cadena1 = "x=" + nu1 + " and " + "y=" + nu2 + "\n" + "x=" + nu1 + " and " + "y=" + nu4 + "\n" + "x=" + nu2 + " and " + "y=" + nu3 + "\n" + "x=" + nu2 + " and " + "y=" + nu4 + "\n";
        }
        console.log(cadena1);
        return cadena1;
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "9iyb":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Abstracto/Instruccion.ts ***!
  \*****************************************************************/
/*! exports provided: Instruccion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Instruccion", function() { return Instruccion; });
class Instruccion {
    constructor(tipo, fila, columna) {
        this.tipoDato = tipo;
        this.fila = fila;
        this.columna = columna;
    }
}


/***/ }),

/***/ "Agoi":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/GramaticaXPathDesc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var GramaticaXPathDesc = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [5, 7], $V1 = [2, 10], $V2 = [1, 4], $V3 = [1, 22], $V4 = [1, 23], $V5 = [1, 8], $V6 = [1, 9], $V7 = [1, 10], $V8 = [1, 11], $V9 = [1, 12], $Va = [1, 13], $Vb = [1, 14], $Vc = [1, 15], $Vd = [1, 16], $Ve = [1, 17], $Vf = [1, 18], $Vg = [1, 19], $Vh = [1, 20], $Vi = [1, 21], $Vj = [5, 7, 20, 22, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], $Vk = [1, 27], $Vl = [1, 41], $Vm = [1, 47], $Vn = [1, 48], $Vo = [1, 36], $Vp = [1, 37], $Vq = [1, 38], $Vr = [1, 39], $Vs = [1, 40], $Vt = [1, 42], $Vu = [1, 43], $Vv = [1, 44], $Vw = [1, 45], $Vx = [1, 46], $Vy = [5, 7, 8, 13, 14, 15, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $Vz = [5, 7, 8, 14, 15, 20, 22, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VA = [1, 67], $VB = [5, 7, 8, 13, 14, 15, 20, 22, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VC = [5, 7, 8, 13, 15, 20, 22, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VD = [1, 81], $VE = [1, 73], $VF = [1, 74], $VG = [1, 75], $VH = [1, 76], $VI = [1, 77], $VJ = [1, 78], $VK = [1, 79], $VL = [1, 80], $VM = [1, 82], $VN = [1, 83], $VO = [1, 84], $VP = [1, 85], $VQ = [2, 39], $VR = [5, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], $VS = [2, 44], $VT = [14, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "INSTRUCCIONES": 4, "EOF": 5, "INSTRUCCION": 6, "OPTION": 7, "BARRA": 8, "EXPRESION": 9, "ATRIBUTO": 10, "AXES": 11, "ALL": 12, "SELECT": 13, "MULTIPLICACION": 14, "ATRIBUTOS": 15, "IDENTIFICADOR": 16, "L_CORCHETES": 17, "PREDICADOS": 18, "CORCHETEIZQ": 19, "CORCHETEDER": 20, "PARIZQ": 21, "PARDER": 22, "COMA": 23, "TERMINO": 24, "OPLOGICAS": 25, "OPARITMETICAS": 26, "OPRELACIONAL": 27, "UNARIO": 28, "CADENA": 29, "entero": 30, "NUMBER": 31, "CARACTER_LITERAL": 32, "STRING_LITERAL": 33, "LAST": 34, "POSITION": 35, "NODE": 36, "TEXT": 37, "IGUAL": 38, "NOIGUAL": 39, "MENORQUE": 40, "MENORIGUAL": 41, "MAYORQUE": 42, "MAYORIGUAL": 43, "MENOS": 44, "MAS": 45, "DIVISION": 46, "MODULO": 47, "OR": 48, "AND": 49, "ANCESTOR": 50, "DOSPUNTOS": 51, "ANCESTORSELF": 52, "ATTRIBUTE": 53, "CHILD": 54, "DESCENDENT": 55, "DESCENDENTSELF": 56, "FOLLOWING": 57, "FOLLOWINGSIBLI": 58, "NAMESPACE": 59, "PARENT": 60, "PRECEDING": 61, "PRECEDINGSIBLI": 62, "SELF": 63, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "OPTION", 8: "BARRA", 13: "SELECT", 14: "MULTIPLICACION", 15: "ATRIBUTOS", 16: "IDENTIFICADOR", 19: "CORCHETEIZQ", 20: "CORCHETEDER", 21: "PARIZQ", 22: "PARDER", 23: "COMA", 29: "CADENA", 30: "entero", 31: "NUMBER", 32: "CARACTER_LITERAL", 33: "STRING_LITERAL", 34: "LAST", 35: "POSITION", 36: "NODE", 37: "TEXT", 38: "IGUAL", 39: "NOIGUAL", 40: "MENORQUE", 41: "MENORIGUAL", 42: "MAYORQUE", 43: "MAYORIGUAL", 44: "MENOS", 45: "MAS", 46: "DIVISION", 47: "MODULO", 48: "OR", 49: "AND", 50: "ANCESTOR", 51: "DOSPUNTOS", 52: "ANCESTORSELF", 53: "ATTRIBUTE", 54: "CHILD", 55: "DESCENDENT", 56: "DESCENDENTSELF", 57: "FOLLOWING", 58: "FOLLOWINGSIBLI", 59: "NAMESPACE", 60: "PARENT", 61: "PRECEDING", 62: "PRECEDINGSIBLI", 63: "SELF" },
        productions_: [0, [3, 2], [4, 2], [4, 1], [4, 3], [6, 3], [6, 2], [6, 1], [6, 1], [6, 1], [6, 0], [12, 2], [12, 1], [12, 1], [10, 2], [10, 2], [10, 2], [10, 3], [18, 1], [18, 2], [17, 4], [17, 3], [17, 4], [17, 3], [9, 3], [9, 3], [9, 3], [9, 2], [9, 1], [9, 1], [9, 1], [9, 1], [9, 1], [9, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 1], [24, 3], [24, 3], [24, 3], [24, 3], [24, 1], [25, 1], [25, 1], [25, 1], [25, 1], [25, 1], [25, 1], [26, 1], [26, 1], [26, 1], [26, 1], [26, 1], [27, 1], [27, 1], [28, 1], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4], [11, 4]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                    if ($$[$0 - 1] != false)
                        $$[$0].push($$[$0 - 1]);
                    this.$ = $$[$0];
                    break;
                case 3:
                case 18:
                    this.$ = ($$[$0] != false) ? [$$[$0]] : [];
                    break;
                case 4:
                    if ($$[$0 - 2] != false)
                        $$[$0].push($$[$0 - 2]);
                    this.$ = $$[$0];
                    break;
                case 5:
                    this.$ = new barrasnodo.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1]);
                    break;
                case 6:
                    this.$ = new barrasnodo.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column, null);
                    break;
                case 7:
                case 8:
                case 9:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 44:
                    this.$ = $$[$0];
                    break;
                case 11:
                    this.$ = new selectroot.default($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);
                    break;
                case 12:
                    this.$ = new selectroot.default($$[$0], _$[$0].first_line, _$[$0].first_column, null);
                    break;
                case 13:
                    this.$ = new todo.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 14:
                    this.$ = new atributosexpresion.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 15:
                case 16:
                    this.$ = new atributosimple.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 17:
                    this.$ = new atributospredicado.default($$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 19:
                    this.$ = new predicado.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 20:
                    this.$ = new arreglos.default($$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column, $$[$0 - 2]);
                    break;
                case 21:
                    this.$ = new arreglos.default(null, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1]);
                    break;
                case 22:
                    this.$ = new parentesis.default($$[$0 - 2], _$[$0 - 3].first_line, _$[$0 - 3].first_column, $$[$0]);
                    break;
                case 23:
                    this.$ = new parentesis.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, null);
                    break;
                case 24:
                    this.$ = new logica.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 25:
                    this.$ = new aritmetica.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 26:
                    new relacional.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 27:
                    this.$ = new aritmetica.default($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0], null);
                    break;
                case 34:
                case 38:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 35:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 36:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.DECIMAL), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 37:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.CARACTER), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 39:
                    this.$ = new identificador.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 40:
                case 41:
                case 42:
                case 43:
                    this.$ = new especiales.default($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 45:
                    this.$ = relacional.Relacionales.IGUAL;
                    break;
                case 46:
                    this.$ = relacional.Relacionales.NOIGUAL;
                    break;
                case 47:
                    this.$ = relacional.Relacionales.MENOR;
                    break;
                case 48:
                    this.$ = relacional.Relacionales.MENORIGUAL;
                    break;
                case 49:
                    this.$ = relacional.Relacionales.MAYOR;
                    break;
                case 50:
                    this.$ = relacional.Relacionales.MAYORIGUAL;
                    break;
                case 51:
                    this.$ = aritmetica.Operadores.RESTA;
                    break;
                case 52:
                    this.$ = aritmetica.Operadores.SUMA;
                    break;
                case 53:
                    this.$ = aritmetica.Operadores.MULTIPLICACION;
                    break;
                case 54:
                    this.$ = aritmetica.Operadores.DIVISION;
                    break;
                case 55:
                    this.$ = aritmetica.Operadores.MODULADOR;
                    break;
                case 56:
                    this.$ = logica.Logicas.OR;
                    break;
                case 57:
                    this.$ = logica.Logicas.AND;
                    break;
                case 58:
                    this.$ = aritmetica.Operadores.MENOSNUM;
                    break;
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                    this.$ = new axes.default($$[$0 - 3], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
            }
        },
        table: [o($V0, $V1, { 3: 1, 4: 2, 6: 3, 10: 5, 11: 6, 12: 7, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), { 1: [3] }, { 5: [1, 24] }, { 4: 25, 5: [2, 3], 6: 3, 7: [1, 26], 8: $V2, 10: 5, 11: 6, 12: 7, 13: $V3, 14: $V4, 15: $V5, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }, o($Vj, $V1, { 9: 28, 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 8: $Vk, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vy, [2, 7]), o($Vy, [2, 8]), o($Vy, [2, 9]), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 50, 8: $V2, 13: [1, 51], 14: [1, 52], 15: $V5, 16: [1, 53], 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), { 51: [1, 54] }, { 51: [1, 55] }, { 51: [1, 56] }, { 51: [1, 57] }, { 51: [1, 58] }, { 51: [1, 59] }, { 51: [1, 60] }, { 51: [1, 61] }, { 51: [1, 62] }, { 51: [1, 63] }, { 51: [1, 64] }, { 51: [1, 65] }, { 51: [1, 66] }, o($Vz, [2, 12], { 13: $VA }), o($VB, [2, 13]), { 1: [2, 1] }, { 5: [2, 2] }, o($V0, $V1, { 6: 3, 10: 5, 11: 6, 12: 7, 4: 68, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 69, 8: $Vk, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($VB, [2, 6]), o($VC, [2, 28], { 25: 70, 26: 71, 27: 72, 14: $VD, 38: $VE, 39: $VF, 40: $VG, 41: $VH, 42: $VI, 43: $VJ, 44: $VK, 45: $VL, 46: $VM, 47: $VN, 48: $VO, 49: $VP }), o($Vj, $V1, { 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 24: 86, 9: 87, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($VB, [2, 29]), o($VB, [2, 30]), o($VB, [2, 31]), o($VB, [2, 32]), o($VB, [2, 33]), o($VB, [2, 34]), o($VB, [2, 35]), o($VB, [2, 36]), o($VB, [2, 37]), o($VB, [2, 38]), o($VB, $VQ, { 17: 88, 19: $Vm, 21: $Vn }), { 21: [1, 89] }, { 21: [1, 90] }, { 21: [1, 91] }, { 21: [1, 92] }, o($VR, [2, 58]), o([20, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 93, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o([22, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 94, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($VB, [2, 18]), o($VB, [2, 14]), o($Vz, [2, 15], { 13: $VA }), o($VB, [2, 16]), o($VB, $VQ, { 17: 95, 19: $Vm, 21: $Vn }), { 51: [1, 96] }, { 51: [1, 97] }, { 51: [1, 98] }, { 51: [1, 99] }, { 51: [1, 100] }, { 51: [1, 101] }, { 51: [1, 102] }, { 51: [1, 103] }, { 51: [1, 104] }, { 51: [1, 105] }, { 51: [1, 106] }, { 51: [1, 107] }, { 51: [1, 108] }, o($VB, [2, 11]), { 5: [2, 4] }, o($VB, [2, 5]), o($Vj, $V1, { 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 87, 24: 109, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 87, 24: 110, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 87, 24: 111, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($VR, [2, 45]), o($VR, [2, 46]), o($VR, [2, 47]), o($VR, [2, 48]), o($VR, [2, 49]), o($VR, [2, 50]), o($VR, [2, 51]), o($VR, [2, 52]), o($VR, [2, 53]), o($VR, [2, 54]), o($VR, [2, 55]), o($VR, [2, 56]), o($VR, [2, 57]), o($VC, [2, 27], { 25: 70, 26: 71, 27: 72, 14: $VD, 38: $VE, 39: $VF, 40: $VG, 41: $VH, 42: $VI, 43: $VJ, 44: $VK, 45: $VL, 46: $VM, 47: $VN, 48: $VO, 49: $VP }), o($VB, $VS), o($VB, [2, 19]), { 22: [1, 112] }, { 22: [1, 113] }, { 22: [1, 114] }, { 22: [1, 115] }, o($VT, $VS, { 20: [1, 116] }), o($VT, $VS, { 22: [1, 117] }), o($VB, [2, 17]), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 118, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 119, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 120, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 121, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 122, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 123, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 124, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 125, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 126, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 127, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 128, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 129, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($Vj, $V1, { 24: 29, 28: 30, 17: 31, 12: 32, 11: 33, 10: 34, 18: 35, 6: 49, 9: 130, 8: $V2, 13: $V3, 14: $V4, 15: $V5, 16: $Vl, 19: $Vm, 21: $Vn, 29: $Vo, 30: $Vp, 31: $Vq, 32: $Vr, 33: $Vs, 34: $Vt, 35: $Vu, 36: $Vv, 37: $Vw, 44: $Vx, 50: $V6, 52: $V7, 53: $V8, 54: $V9, 55: $Va, 56: $Vb, 57: $Vc, 58: $Vd, 59: $Ve, 60: $Vf, 61: $Vg, 62: $Vh, 63: $Vi }), o($VC, [2, 24], { 25: 70, 26: 71, 27: 72, 14: $VD, 38: $VE, 39: $VF, 40: $VG, 41: $VH, 42: $VI, 43: $VJ, 44: $VK, 45: $VL, 46: $VM, 47: $VN, 48: $VO, 49: $VP }), o($VC, [2, 25], { 25: 70, 26: 71, 27: 72, 14: $VD, 38: $VE, 39: $VF, 40: $VG, 41: $VH, 42: $VI, 43: $VJ, 44: $VK, 45: $VL, 46: $VM, 47: $VN, 48: $VO, 49: $VP }), o($VC, [2, 26], { 25: 70, 26: 71, 27: 72, 14: $VD, 38: $VE, 39: $VF, 40: $VG, 41: $VH, 42: $VI, 43: $VJ, 44: $VK, 45: $VL, 46: $VM, 47: $VN, 48: $VO, 49: $VP }), o($VB, [2, 40]), o($VB, [2, 41]), o($VB, [2, 42]), o($VB, [2, 43]), o($VB, [2, 21], { 17: 131, 19: $Vm, 21: $Vn }), o($VB, [2, 23], { 23: [1, 132] }), o($VB, [2, 59]), o($VB, [2, 60]), o($VB, [2, 61]), o($VB, [2, 62]), o($VB, [2, 63]), o($VB, [2, 64]), o($VB, [2, 65]), o($VB, [2, 66]), o($VB, [2, 67]), o($VB, [2, 68]), o($VB, [2, 69]), o($VB, [2, 70]), o($VB, [2, 71]), o($VB, [2, 20]), o($VB, [2, 22])],
        defaultActions: { 24: [2, 1], 25: [2, 2], 68: [2, 4] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    const barrasnodo = __webpack_require__(/*! ./Instrucciones/BarrasNodo */ "jtD6");
    const identificador = __webpack_require__(/*! ./Expresiones/Identificador */ "/mHx");
    const CErrores = __webpack_require__(/*! ./Excepciones/Errores */ "5Y53");
    const CNodoErrores = __webpack_require__(/*! ./Excepciones/NodoErrores */ "E7Rf");
    const inicio = __webpack_require__(/*! ../../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
    const selectroot = __webpack_require__(/*! ./Instrucciones/SelectRoot */ "0iGS");
    const todo = __webpack_require__(/*! ./Instrucciones/todo */ "avIU");
    const atributosimple = __webpack_require__(/*! ./Instrucciones/AtributosSimples */ "6clo");
    const atributosexpresion = __webpack_require__(/*! ./Instrucciones/AtributosExpresion */ "iolQ");
    const atributospredicado = __webpack_require__(/*! ./Instrucciones/AtributosPredicado */ "v19a");
    const predicado = __webpack_require__(/*! ./Instrucciones/Predicados */ "+QV2");
    const arreglos = __webpack_require__(/*! ./Instrucciones/Arreglos */ "C7AR");
    const parentesis = __webpack_require__(/*! ./Expresiones/ParentesisExpresion */ "DdrW");
    const axes = __webpack_require__(/*! ./Funciones/Axes */ "x2tA");
    const especiales = __webpack_require__(/*! ./Funciones/Especiales */ "VOP4");
    const nativo = __webpack_require__(/*! ./Expresiones/Nativo */ "5beR");
    const Tipo = __webpack_require__(/*! ./Simbolos/Tipo */ "HVYh");
    const aritmetica = __webpack_require__(/*! ./Expresiones/Aritmetica */ "0NkC");
    const logica = __webpack_require__(/*! ./Expresiones/Logica */ "j/FN");
    const relacional = __webpack_require__(/*! ./Expresiones/Relacional */ "mh+0");
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0: /* skip whitespace */
                        break;
                    case 1: // comentario simple línea
                        break;
                    case 2: // comentario multiple líneas
                        break;
                    case 3:
                        return 52;
                        break;
                    case 4:
                        return 56;
                        break;
                    case 5:
                        return 58;
                        break;
                    case 6:
                        return 62;
                        break;
                    case 7:
                        return 30;
                        break;
                    case 8:
                        return 33;
                        break;
                    case 9:
                        return 32;
                        break;
                    case 10:
                        return 50;
                        break;
                    case 11:
                        return 53;
                        break;
                    case 12:
                        return 54;
                        break;
                    case 13:
                        return 55;
                        break;
                    case 14:
                        return 57;
                        break;
                    case 15:
                        return 59;
                        break;
                    case 16:
                        return 60;
                        break;
                    case 17:
                        return 61;
                        break;
                    case 18:
                        return 63;
                        break;
                    case 19:
                        return 34;
                        break;
                    case 20:
                        return 35;
                        break;
                    case 21:
                        return 36;
                        break;
                    case 22:
                        return 37;
                        break;
                    case 23:
                        return 48;
                        break;
                    case 24:
                        return 49;
                        break;
                    case 25:
                        return 47;
                        break;
                    case 26:
                        return 46;
                        break;
                    case 27:
                        return 15;
                        break;
                    case 28:
                        return 16;
                        break;
                    case 29:
                        return 29;
                        break;
                    case 30:
                        return 'DECIMAL';
                        break;
                    case 31:
                        return 31;
                        break;
                    case 32:
                        return 8;
                        break;
                    case 33:
                        return 41;
                        break;
                    case 34:
                        return 43;
                        break;
                    case 35:
                        return 40;
                        break;
                    case 36:
                        return 42;
                        break;
                    case 37:
                        return 'INTERROGACION';
                        break;
                    case 38:
                        return 38;
                        break;
                    case 39:
                        return 21;
                        break;
                    case 40:
                        return 22;
                        break;
                    case 41:
                        return 19;
                        break;
                    case 42:
                        return 20;
                        break;
                    case 43:
                        return 23;
                        break;
                    case 44:
                        return 7;
                        break;
                    case 45:
                        return 45;
                        break;
                    case 46:
                        return 44;
                        break;
                    case 47:
                        return 14; /* SELECTALL TAMBIEN*/
                        break;
                    case 48:
                        return 38;
                        break;
                    case 49:
                        return 39;
                        break;
                    case 50:
                        return 51;
                        break;
                    case 51:
                        return 13;
                        break;
                    case 52:
                        return 5;
                        break;
                    case 53:
                        return 'INVALID';
                        break;
                }
            },
            rules: [/^(?:\s+)/i, /^(?:\/\/.*)/i, /^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i, /^(?:ancestor-or-self\b)/i, /^(?:descendant-or-self\b)/i, /^(?:following-sibling\b)/i, /^(?:preceding-sibling\b)/i, /^(?:([0-9]+(\.[0-9]+)?))/i, /^(?:(("(\\"|[^"]|\n)*")))/i, /^(?:(('[^']*')))/i, /^(?:ancestor\b)/i, /^(?:attribute\b)/i, /^(?:child\b)/i, /^(?:descendant\b)/i, /^(?:following\b)/i, /^(?:namespace\b)/i, /^(?:parent\b)/i, /^(?:preceding\b)/i, /^(?:self\b)/i, /^(?:last\b)/i, /^(?:position\b)/i, /^(?:node\b)/i, /^(?:text\b)/i, /^(?:or\b)/i, /^(?:and\b)/i, /^(?:mod\b)/i, /^(?:div\b)/i, /^(?:@)/i, /^(?:([a-zA-Z])[a-zA-Z0-9_!#$%&(),.\*\^Ññáéíúó]*)/i, /^(?:"[^\"]*")/i, /^(?:[0-9]+(\.[0-9]+)\b)/i, /^(?:[0-9]+(\.[0-9]+)?\b)/i, /^(?:\/)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:\?)/i, /^(?:=)/i, /^(?:\()/i, /^(?:\))/i, /^(?:\[)/i, /^(?:\])/i, /^(?:,)/i, /^(?:\|)/i, /^(?:\+)/i, /^(?:-)/i, /^(?:\*)/i, /^(?:=)/i, /^(?:!=)/i, /^(?::)/i, /^(?:\.)/i, /^(?:$)/i, /^(?:.)/i],
            conditions: { "INITIAL": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = GramaticaXPathDesc;
    exports.Parser = GramaticaXPathDesc.Parser;
    exports.parse = function () { return GramaticaXPathDesc.parse.apply(GramaticaXPathDesc, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 5).readFileSync(__webpack_require__(/*! path */ 6).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "AytR":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "BKsa":
/*!**************************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/SaltoIncondicional.ts ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SaltoIncondicional; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class SaltoIncondicional extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador.toLowerCase();
    }
    interpretar(arbol, tabla) {
        return this;
    }
}


/***/ }),

/***/ "BlmM":
/*!*****************************************************************************!*\
  !*** ./src/app/paginas/tablasimbolos-xquery/tablasimbolos-xquery.module.ts ***!
  \*****************************************************************************/
/*! exports provided: TablasimbolosXqueryModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TablasimbolosXqueryModule", function() { return TablasimbolosXqueryModule; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");


class TablasimbolosXqueryModule {
}
TablasimbolosXqueryModule.ɵfac = function TablasimbolosXqueryModule_Factory(t) { return new (t || TablasimbolosXqueryModule)(); };
TablasimbolosXqueryModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({ type: TablasimbolosXqueryModule });
TablasimbolosXqueryModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"]
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](TablasimbolosXqueryModule, { imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"]] }); })();


/***/ }),

/***/ "C7AR":
/*!********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/Arreglos.ts ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Arreglos; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class Arreglos extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(objetos, fila, columna, instruccion) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].ENTERO), fila, columna);
        this.l_corchetes = instruccion;
        this.expresion = objetos;
    }
    getNodosAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('L_CORCHETES');
        /*
         *ESTE SE USARÁ PARA LOS CASOS
         * CORCHETEIZQ EXPRESION CORCHETEDER
         * L_CORCHETES CORCHETEIZQ EXPRESION CORCHETEDER
         */
        if (this.l_corchetes != null) {
            nodo.agregarHijoAST(this.l_corchetes.getNodosAST());
        }
        if (this.expresion != null) {
            nodo.agregarHijoAST(this.expresion.getNodosAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla) {
        //let variable = tabla.getVariable(this.identificador);
        /*if (variable != null) {
          this.tipoDato = variable.gettipo();
          return variable.getvalor();
        } else {
          return new Errores(
            'SEMANTICO',
            'VARIABLE ' + this.identificador + ' NO EXISTE',
            this.fila,
            this.columna
          );
        }*/
    }
    codigo3D(arbol, tabla) {
        return null;
    }
}


/***/ }),

/***/ "CbqC":
/*!****************************************************************************!*\
  !*** ./src/app/componentes/contenido-inicio/contenido-inicio.component.ts ***!
  \****************************************************************************/
/*! exports provided: listaErrores, listainstrucciones, Ambito, Ambito2, tabsim, tabsimX, contenidocd3, ArbolGlobalReporte, ReporteOptimizacion, cd3XPath, cd3XQuery, Funcionescd3, TreeAsc, TreeXQuery, ContenidoInicioComponent, Pruebas */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listaErrores", function() { return listaErrores; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listainstrucciones", function() { return listainstrucciones; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ambito", function() { return Ambito; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ambito2", function() { return Ambito2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabsim", function() { return tabsim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabsimX", function() { return tabsimX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contenidocd3", function() { return contenidocd3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArbolGlobalReporte", function() { return ArbolGlobalReporte; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReporteOptimizacion", function() { return ReporteOptimizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cd3XPath", function() { return cd3XPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cd3XQuery", function() { return cd3XQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Funcionescd3", function() { return Funcionescd3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeAsc", function() { return TreeAsc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeXQuery", function() { return TreeXQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContenidoInicioComponent", function() { return ContenidoInicioComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pruebas", function() { return Pruebas; });
/* harmony import */ var src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/tablaSimbolos */ "MuHt");
/* harmony import */ var src_app_Backend_XML_Analizador_GramaticaXML__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/GramaticaXML */ "EHLN");
/* harmony import */ var src_app_Backend_XML_Analizador_GramaticaXML__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XML_Analizador_GramaticaXML__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_app_Backend_XML_Analizador_GramaticaXMLDescPRUEBA__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/GramaticaXMLDescPRUEBA */ "pcrZ");
/* harmony import */ var src_app_Backend_XML_Analizador_GramaticaXMLDescPRUEBA__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XML_Analizador_GramaticaXMLDescPRUEBA__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_app_Backend_XPATH_GramaticaXPath__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/Backend/XPATH/GramaticaXPath */ "O4JO");
/* harmony import */ var src_app_Backend_XPATH_GramaticaXPath__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XPATH_GramaticaXPath__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_Backend_XPATH_Analizador_GramaticaXPathDesc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/GramaticaXPathDesc */ "Agoi");
/* harmony import */ var src_app_Backend_XPATH_Analizador_GramaticaXPathDesc__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XPATH_Analizador_GramaticaXPathDesc__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_Backend_XML_Analizador_XMLgraph__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/XMLgraph */ "kaQ3");
/* harmony import */ var src_app_Backend_XML_Analizador_XMLgraph__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XML_Analizador_XMLgraph__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_Backend_XML_Analizador_XMLgraphDesc__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/XMLgraphDesc */ "4BRv");
/* harmony import */ var src_app_Backend_XML_Analizador_XMLgraphDesc__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XML_Analizador_XMLgraphDesc__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var src_app_Backend_Optimizacion_grammar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/Backend/Optimizacion/grammar */ "+Wsu");
/* harmony import */ var src_app_Backend_Optimizacion_grammar__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_Optimizacion_grammar__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var src_app_Backend_XQUERY_Analizador_GrammXQuery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/GrammXQuery */ "L5jn");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_GrammXQuery__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(src_app_Backend_XQUERY_Analizador_GrammXQuery__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var src_app_Backend_Optimizacion_Simbolo_Arbol__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/Backend/Optimizacion/Simbolo/Arbol */ "YaOD");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Simbolo */ "x+S8");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Arbol */ "0PyG");
/* harmony import */ var src_app_Backend_XPATH_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/Simbolos/Arbol */ "T4Rd");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Arbol */ "l0XW");
/* harmony import */ var src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Abstracto/nodoAST */ "2sLK");
/* harmony import */ var src_app_Backend_XPATH_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/Abstracto/nodoAST */ "GvuX");
/* harmony import */ var src_app_Backend_XML_Analizador_Expresiones_Objeto__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Expresiones/Objeto */ "xzWR");
/* harmony import */ var src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Reportes/reporteTabla */ "Mc8n");
/* harmony import */ var src_app_Backend_XPATH_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/Instrucciones/BarrasNodo */ "jtD6");
/* harmony import */ var src_app_Backend_XPATH_Analizador_Funciones_Axes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/app/Backend/XPATH/Analizador/Funciones/Axes */ "x2tA");
/* harmony import */ var codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! codemirror/mode/htmlmixed/htmlmixed */ "1p+/");
/* harmony import */ var codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var src_app_Backend_Optimizacion_Instrucciones_Declaracion__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! src/app/Backend/Optimizacion/Instrucciones/Declaracion */ "F2Ye");
/* harmony import */ var src_app_Backend_Optimizacion_Instrucciones_Funcion__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! src/app/Backend/Optimizacion/Instrucciones/Funcion */ "KjsP");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_ForSimple__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/ForSimple */ "U3Vy");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_Let__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/Let */ "xsaW");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_If__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/If */ "V62L");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_Funciones__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/Funciones */ "xl6+");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_Llamada__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/Llamada */ "MuKW");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Funciones_Number__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Funciones/Number */ "KyfK");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Funciones_String__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Funciones/String */ "7fLb");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Funciones_Upper__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Funciones/Upper */ "g+4Y");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Funciones_Lower__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Funciones/Lower */ "iW93");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Funciones_Substring__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Funciones/Substring */ "5qhH");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_IfFuncionAnidado__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncionAnidado */ "0FvM");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_ForToSimple__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/ForToSimple */ "wPOe");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_ForToCompuesto__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/ForToCompuesto */ "99ag");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var src_app_servicios_inicio_service__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! src/app/servicios/inicio.service */ "2/nI");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @angular/material/button-toggle */ "jaxi");











































const _c0 = ["editor"];
let listaErrores;
let listainstrucciones;
let Ambito;
let Ambito2;
let tabsim;
let tabsimX;
var contenidocd3 = "";
let ArbolGlobalReporte;
let ReporteOptimizacion;
let cd3XPath;
let cd3XQuery;
let Funcionescd3;
var TreeAsc;
var TreeXQuery;
class ContenidoInicioComponent {
    constructor(inicioSrv, dialog) {
        this.inicioSrv = inicioSrv;
        this.dialog = dialog;
        this.codeMirrorOptions = {
            theme: '3024-night',
            mode: 'application/xml',
            lineNumbers: true,
            lineWrapping: true,
            foldGutter: false,
            gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],
            autoCloseBrackets: true,
            color: "#fe3",
            matchBrackets: true,
            lint: true
        };
        this.codeMirrorOptions2 = {
            theme: '3024-night',
            mode: 'application/typescript',
            readOnly: true,
            lineNumbers: true,
            lineWrapping: true,
            foldGutter: false,
            gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],
            autoCloseBrackets: true,
            matchBrackets: true,
            lint: true
        };
        this.tablaGlobal = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
        this.tablaGlobalX = new src_app_Backend_XQUERY_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]();
        this.code = '';
        this.contenido = '';
        /****************************************************************************************************************/
        this.textoEsperado = '';
        this.code = 'asd';
    }
    ngOnInit() {
        console.log(document.querySelector('#codigo'));
        /* var editor = CodeMirror.fromTextArea(document.querySelector('#editor'), {
           mode: "javascript",
           lineNumbers: true,
       });
       editor.save()*/
    }
    ngAfterViewInit() {
        this.editor.getEditor().setOptions({
            showLineNumbers: true,
            tabSize: 2
        });
        this.editor.mode = 'javascript';
        this.editor.value = `function testThis() {
  console.log("it's working!")
}`;
        this.editor.getEditor().commands.addCommand({
            name: "showOtherCompletions",
            bindKey: "Ctrl-.",
            exec: function (editor) {
            }
        });
        this.data = JSON.parse(localStorage.getItem('contenido'));
        if (this.data != '' || this.data != undefined) {
            this.mostrarContenido(this.data.console, 'consolas');
        }
    }
    getValue() {
        console.log(this.editor.value);
        console.log(eval(this.editor.value));
    }
    colocarConsola(res, texto) {
        const dataObject = {
            text: 'asd',
            console: 'res',
        };
        localStorage.setItem('consulta', JSON.stringify(dataObject));
    }
    getConsola() {
        this.data = JSON.parse(localStorage.getItem('contenido'));
        if (this.data != '' || this.data != undefined) {
            this.mostrarContenido(this.data.text, 'contenido');
        }
    }
    /*A R B O L  A S C E N D E N T E */
    interpretarContenido(texto) {
        listaErrores = new Array();
        if (texto == null)
            return document.write('Error');
        try {
            const analizador = src_app_Backend_XML_Analizador_GramaticaXML__WEBPACK_IMPORTED_MODULE_3__;
            const objetos = analizador.parse(texto);
            TreeAsc = new src_app_Backend_XML_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_14__["default"]([objetos]);
            TreeAsc.settablaGlobal(this.tablaGlobal);
            //  PARA GUARDAR DATOS
            // TODO FOR INTERPRETAR
            for (let i of TreeAsc.getinstrucciones()) {
                if (i instanceof src_app_Backend_XML_Analizador_Expresiones_Objeto__WEBPACK_IMPORTED_MODULE_19__["default"]) {
                    var objetito = i.interpretar(TreeAsc, this.tablaGlobal); //retorna simbolo
                    //this.tablaGlobal.setVariable(objetito)
                }
            }
            console.log(this.tablaGlobal);
            var atributos = "";
            /***************************************************************************************************
           ************************* MANEJO DE CODIGO 3 DIRECCIONES ASCENDENTE *******************************
           * *************************************************************************************************
          */
            contenidocd3 = "";
            TreeAsc.codigo3d.push("int main(){\n");
            for (let i of TreeAsc.getinstrucciones()) {
                if (i instanceof src_app_Backend_XML_Analizador_Expresiones_Objeto__WEBPACK_IMPORTED_MODULE_19__["default"]) {
                    var lista = i.codigo3D(TreeAsc, this.tablaGlobal); //retorna simbolo
                    this.tablaGlobal.setVariable(lista);
                }
            }
            /* **********************L L E N A D O    T A B L A    D E    S I M B O L O S************************* */
            Ambito = "Global";
            tabsim = new Map();
            for (var key of this.tablaGlobal.tablaActual) {
                if (key.getvalor() instanceof src_app_Backend_XQUERY_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                    var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"]("Objeto", key.getidentificador(), key.getLinea(), key.getColumna(), Ambito, key.getvalor(), key.setcd3Value());
                    TreeAsc.listaSimbolos.push(Reporte);
                    if (key.getAtributo().size != 0) {
                        for (var [key2, value2,] of key.getAtributo()) {
                            var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"](key2, "Atributo", key.getidentificador(), value2, key.getAtributoLinea(), key.getAtributoColumna(), key.get3DAtributo());
                            TreeAsc.listaSimbolos.push(Reporte);
                        }
                    }
                    tabsim.set(Ambito, key.getidentificador());
                    Ambito = key.getidentificador();
                    this.ReportSimbolos(key.getvalor(), TreeAsc);
                }
                else {
                    var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"](key.getidentificador(), "Objeto", key.getidentificador(), key.getvalor(), key.getLinea(), key.getColumna(), key.setcd3Value());
                    TreeAsc.listaSimbolos.push(Reporte);
                }
            }
            ArbolGlobalReporte = TreeAsc.getSimbolos();
            tabsim.clear();
            /***************************************************************************************************************
             * ***********************************************A R B O L ****************************************************
             **************************************************************************************************************/
            var init = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_17__["default"]("RAIZ");
            var instrucciones = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_17__["default"]("HIJOS");
            for (let i of TreeAsc.getinstrucciones()) {
                instrucciones.agregarHijoAST(i.getNodo());
            }
            for (let i of TreeAsc.getinstrucciones()) {
                if (i instanceof src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                    listaErrores.push(i);
                }
            }
            init.agregarHijoAST(instrucciones);
            let sim_string = JSON.stringify(init);
            localStorage.setItem("simbolos", sim_string);
            const gramat = src_app_Backend_XML_Analizador_XMLgraph__WEBPACK_IMPORTED_MODULE_7__;
            const gramar = gramat.parse(texto);
            localStorage.setItem("gramatica", gramar);
            console.log(listaErrores);
            let errores = JSON.stringify(listaErrores);
            localStorage.setItem("errores", errores);
            var reco = TreeAsc.getSimbolos();
            let tabla = JSON.stringify(reco);
            localStorage.setItem("symbol", tabla);
            /**M A N E J O   E R R O R  S I N T A C T I C O */
            let errorsito = src_app_Backend_XML_Analizador_GramaticaXML__WEBPACK_IMPORTED_MODULE_3__;
            let errorts = errorsito.parse(texto);
            //console.log(listaErrores);
        }
        catch (error) {
            if (error instanceof ReferenceError) {
                let errores = JSON.stringify(listaErrores);
                localStorage.setItem("errores", errores);
            }
        }
        finally {
            let errores = JSON.stringify(listaErrores);
            localStorage.setItem("errores", errores);
        }
    }
    ReportSimbolos(tablaGlobal, Tree) {
        for (var key of tablaGlobal.tablaActual) {
            if (key.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                if (Ambito === key.getidentificador().toString()) {
                    for (var [key2, value2,] of tabsim) {
                        if (value2 === key.getidentificador()) {
                            Ambito = key2;
                        }
                    }
                }
                var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"](key.getidentificador(), "Objeto", Ambito, "Objeto", key.getLinea(), key.getColumna(), key.setcd3Value());
                Tree.listaSimbolos.push(Reporte);
                for (var [key2, value2,] of tabsim) {
                    if (Ambito != key.getidentificador().toString()) {
                        if (key2 === Ambito && value2 === key.getidentificador()) {
                            Ambito = value2;
                        }
                        else {
                            tabsim.set(Ambito, key.getidentificador());
                            Ambito = key.getidentificador();
                        }
                    }
                }
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"](key2, "Atributo", key.getidentificador(), value2, key.getAtributoLinea(), key.getAtributoColumna(), key.get3DAtributo());
                        Tree.listaSimbolos.push(Reporte);
                    }
                }
                this.ReportSimbolos(key.getvalor(), Tree);
            }
            else {
                var Reporte = new src_app_Backend_XML_Analizador_Reportes_reporteTabla__WEBPACK_IMPORTED_MODULE_20__["reporteTabla"](key.getidentificador(), "Objeto", Ambito, key.getvalor(), key.getLinea(), key.getColumna(), key.setcd3Value());
                Tree.listaSimbolos.push(Reporte);
            }
        }
    }
    /**%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     * %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% FINALIZAR CD3 MOSTRAR EN PANTALLA %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     * %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     */
    finalizarCD3() {
        //ES VARIABLES AL INICIO
        contenidocd3 = "#include <stdio.h>\n#include<math.h>\n";
        let bandera = false;
        try {
            if (TreeAsc.codigo3d.length != 0) {
                for (let x = 0; x < TreeAsc.contadort; x++) {
                    if (x == 0) {
                        contenidocd3 = contenidocd3 + "double ";
                    }
                    else if (x % 20 == 0) {
                        contenidocd3 = contenidocd3 + "\n";
                    }
                    contenidocd3 = contenidocd3 + "$t" + x;
                    if (TreeAsc.contadort - 1 !== x) {
                        contenidocd3 = contenidocd3 + ",";
                    }
                }
                if (TreeXQuery.codigo3d.length != 0) {
                    contenidocd3 += ";\n";
                    for (let x = TreeAsc.contadort; x < TreeXQuery.contadort; x++) {
                        if (x == 0) {
                            contenidocd3 = contenidocd3 + "double ";
                        }
                        else if (x % 20 == 0) {
                            contenidocd3 = contenidocd3 + "\n";
                        }
                        contenidocd3 = contenidocd3 + "$t" + x;
                        if (TreeXQuery.contadort - 1 !== x) {
                            contenidocd3 = contenidocd3 + ",";
                        }
                    }
                }
                bandera = true;
                if (TreeAsc.contadort !== 0) {
                    contenidocd3 = contenidocd3 + ";\n";
                }
                TreeAsc.Encabezadocodigo3d.forEach(element => {
                    contenidocd3 += element + "\n";
                });
            }
            //ITERA PARA EL CONTENIDO DEL MAIN
            if (TreeAsc.codigo3d != null) {
                TreeAsc.codigo3d.forEach(element => {
                    contenidocd3 += element + "\n";
                });
            }
            try {
                cd3XPath.forEach(element => {
                    contenidocd3 += element + "\n";
                });
            }
            catch (error) {
            }
            if (TreeXQuery.codigo3d != null) {
                TreeXQuery.codigo3d.forEach(element => {
                    contenidocd3 += element + "\n";
                });
            }
        }
        catch (error) {
            //CONTENIDO DE XQUERY
            if (TreeXQuery.codigo3d != null) {
                if (bandera == false) {
                    for (let x = 0; x < TreeXQuery.contadort; x++) {
                        if (x == 0) {
                            contenidocd3 = contenidocd3 + "double ";
                        }
                        else if (x % 20 == 0) {
                            contenidocd3 = contenidocd3 + "\n";
                        }
                        contenidocd3 = contenidocd3 + "$t" + x;
                        if (TreeXQuery.contadort - 1 !== x) {
                            contenidocd3 = contenidocd3 + ",";
                        }
                    }
                    if (TreeXQuery.contadort !== 0) {
                        contenidocd3 = contenidocd3 + ";\n";
                    }
                    TreeXQuery.Encabezadocodigo3d.forEach(element => {
                        contenidocd3 += element + "\n";
                    });
                    contenidocd3 += "\nint main(){\n";
                }
                TreeXQuery.codigo3d.forEach(element => {
                    contenidocd3 += element + "\n";
                });
            }
        }
        if (Funcionescd3.length != 0) {
            contenidocd3 += "return 1;\n}\n";
            Funcionescd3.forEach(element => {
                contenidocd3 += element + "\n";
            });
        }
        else {
            contenidocd3 += contenidocd3 + "return 1;\n}";
        }
        this.mostrarContenido(contenidocd3, 'cdirecciones');
    }
    /*A R B O L  D E S C E N D E N T E */
    interpretarContenidoDesc(texto) {
        listaErrores = new Array();
        if (texto == null)
            return document.write('Error');
        const analizador = src_app_Backend_XML_Analizador_GramaticaXMLDescPRUEBA__WEBPACK_IMPORTED_MODULE_4__;
        const objetos = analizador.parse(texto);
        const tablaGlobal = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
        var Tree = new src_app_Backend_XML_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_14__["default"]([objetos]);
        Tree.settablaGlobal(tablaGlobal);
        console.log(tablaGlobal);
        //  PARA GUARDAR DATOS
        // TODO FOR INTERPRETAR
        var init2 = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_17__["default"]("RAIZ");
        var instrucciones = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_17__["default"]("HIJOS");
        for (let i of Tree.getinstrucciones()) {
            instrucciones.agregarHijoAST(i.getNodo());
        }
        for (let i of Tree.getinstrucciones()) {
            /*if (i instanceof Errores) {
              listaErrores.push(i);
            }*/
        }
        init2.agregarHijoAST(instrucciones);
        let sim_string = JSON.stringify(init2);
        localStorage.setItem("simbolos1", sim_string);
        /***************************************************************************************************
         ************************* MANEJO DE CODIGO 3 DIRECCIONES DESCENDENTE ******************************
         * *************************************************************************************************
        */
        var contenidocd3 = "#include <stdio.h>\n#include<math.h>\n";
        Tree.codigo3d.push("int main(){\n");
        for (let i of Tree.getinstrucciones()) {
            if (i instanceof src_app_Backend_XML_Analizador_Expresiones_Objeto__WEBPACK_IMPORTED_MODULE_19__["default"]) {
                var lista = i.codigo3D(Tree, this.tablaGlobal); //retorna simbolo
                this.tablaGlobal.setVariable(lista);
            }
        }
        //ES VARIABLES AL INICIO
        for (let x = 0; x < Tree.contadort; x++) {
            if (x == 0) {
                contenidocd3 = contenidocd3 + "double ";
            }
            else if (x % 20 == 0) {
                contenidocd3 = contenidocd3 + "\n";
            }
            contenidocd3 = contenidocd3 + "t" + x;
            if (Tree.contadort - 1 !== x) {
                contenidocd3 = contenidocd3 + ",";
            }
        }
        if (Tree.contadort !== 0) {
            contenidocd3 = contenidocd3 + ";\n";
        }
        Tree.Encabezadocodigo3d.forEach(element => {
            contenidocd3 += element + "\n";
        });
        //ITERA PARA EL CONTENIDO DEL MAIN
        Tree.codigo3d.forEach(element => {
            contenidocd3 += element + "\n";
        });
        const gramat = src_app_Backend_XML_Analizador_XMLgraphDesc__WEBPACK_IMPORTED_MODULE_8__;
        const gramar = gramat.parse(texto);
        localStorage.setItem("gramatica1", gramar);
        //console.log(gramar);
    }
    /*********************************************************************************************************/
    /***********************************************XPATH ASCENDENTE******************************************/
    /*********************************************************************************************************/
    EjecutarAsc(texto) {
        // if (texto == null) return document.write('Error');
        cd3XPath = null;
        cd3XPath = [];
        const analizador = src_app_Backend_XPATH_GramaticaXPath__WEBPACK_IMPORTED_MODULE_5__;
        let objetos = analizador.parse(texto);
        let ast = new src_app_Backend_XPATH_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_15__["default"](analizador.parse(texto)); //ejecucion
        console.log("lista ins xpath");
        console.log(listainstrucciones);
        var Tree = new src_app_Backend_XPATH_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_15__["default"]([objetos]);
        var tabla = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"](); //ejecucion
        ast.settablaGlobal(tabla); //ejecucion
        var tablita = this.tablaGlobal;
        var c = 0;
        var consolita = '';
        for (var key of tablita.getTabla()) { //SIMBOLOS
            if (key.getidentificador() == 'xml') {
                tablita = key.getvalor();
            }
        }
        console.log(ast.getinstrucciones().length);
        for (let index = 0; index < ast.getinstrucciones().length; index++) {
            const instructions = ast.getinstrucciones()[index];
            instructions.forEach(element => {
                c++;
                console.log(element);
                if (element instanceof src_app_Backend_XPATH_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_21__["default"]) {
                    console.log("es barranodo");
                    var resultador = element.interpretar(Tree, tablita);
                    if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        tablita = resultador;
                        if (c == instructions.length) {
                            if (TreeAsc != null) {
                                consolita += this.recorrerTabla(tablita, TreeAsc);
                                consolita += "\n";
                            }
                        }
                    }
                    else { //VIENE STRING
                        consolita += resultador + "\n";
                    }
                }
            });
            c = 0;
            console.log("SIGUIENTE");
        }
        this.mostrarContenido(consolita, 'resultado');
    }
    ArbolAscAST(texto) {
        if (texto == null)
            return document.write('Error');
        const analizador = src_app_Backend_XPATH_Analizador_GramaticaXPathDesc__WEBPACK_IMPORTED_MODULE_6__;
        const objetos = analizador.parse(texto);
        var Tree = new src_app_Backend_XPATH_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_15__["default"]([objetos]);
        //GRAFICAS
        var instrucciones = new src_app_Backend_XPATH_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_18__["default"]("INSTRUCCIONES");
        var contador = 0;
        for (let i of Tree.getinstrucciones()) {
            this.ciclo(i, contador, instrucciones);
        }
        let sim_string = JSON.stringify(instrucciones);
        localStorage.setItem("astpath", sim_string);
        //TERMINA GRAFICAS
    }
    /*ESTE MUESTRA LOS CICLOS PARA COLOCAR EL ARBOL AST CON GETNODO*/
    ciclo(i, numero, instruc) {
        if (i[numero] != null) {
            if (i[numero] instanceof src_app_Backend_XPATH_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_21__["default"]) {
                let temp = i[numero];
                instruc.agregarHijoAST(temp.getNodosAST());
            }
            if (i[numero] instanceof src_app_Backend_XPATH_Analizador_Funciones_Axes__WEBPACK_IMPORTED_MODULE_22__["default"]) {
                let temp = i[numero];
                instruc.agregarHijoAST(temp.getNodosAST());
            }
            numero++;
            this.ciclo(i, numero, instruc);
        }
    }
    /*********************************************************************************************************/
    /***********************************************XPATH DESCENDENTE*****************************************/
    /*********************************************************************************************************/
    EjecutarDesc(texto) {
        if (texto == null)
            return document.write('Error');
        const analizador = src_app_Backend_XPATH_Analizador_GramaticaXPathDesc__WEBPACK_IMPORTED_MODULE_6__;
        const objetos = analizador.parse(texto);
        var Tree = new src_app_Backend_XPATH_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_15__["default"]([objetos]);
        var instrucciones = new src_app_Backend_XPATH_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_18__["default"]("INSTRUCCIONES");
        var contador = 0;
        for (let i of Tree.getinstrucciones()) {
            this.ciclo(i, contador, instrucciones);
        }
        let sim_string = JSON.stringify(instrucciones);
        localStorage.setItem("astpath", sim_string);
    }
    textInputChange(fileInputEvent) {
        var archivo = fileInputEvent.target.files[0];
        if (!archivo) {
            return;
        }
        var lector = new FileReader();
        lector.onload = (e) => {
            var contenido = e.target.result;
            this.mostrarContenido(contenido, 'contenido');
        };
        lector.readAsText(archivo);
    }
    mostrarContenido(contenido, identificador) {
        var elemento = document.getElementById(identificador);
        elemento.innerHTML = contenido;
    }
    generarAst() {
        this.inicioSrv.graficarAst().subscribe((res) => {
            if (res.msg == false) {
                alert('ALGO FALLO EN EL GRAFICO');
            }
            else {
                this.presentAlert();
            }
        });
    }
    presentAlert() {
        // #docregion focus-restoration
        this.dialog.open(Pruebas, {});
    }
    /**
     * *********************************RECORRER TABLA PARA XPATH*************************************
     * @param t
     * @returns
     */
    recorrerTabla(t, arbol) {
        var salida = '';
        for (var key of t.tablaActual) {
            var listaobjetitos = "";
            let objetos = key.getvalor();
            if (objetos instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                for (var key3 of objetos.tablaActual) {
                    listaobjetitos += `${key3.getidentificador()}, `;
                }
                //  let recorrido=
                let atributos = "";
                /**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IMPRIMIR DATOS CD3 XPATH @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                 */
                let etiqueta1 = "<" + key.getidentificador();
                this.generarEtiquetascd3("<" + key.getidentificador(), arbol);
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        etiqueta1 += " " + key2 + "=" + value2;
                        this.generarEtiquetascd3(" " + key2 + "=", arbol);
                        let atrib = key.get3DAtributo();
                        this.printcd3Simple(atrib, arbol, key2);
                    }
                }
                etiqueta1 += ">";
                this.generarEtiquetascd3(">", arbol);
                cd3XPath.push(`printf("%c",10);`);
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta1 + "\n" + this.recorrerTabla(objetos, arbol) + etiqueta2 + "\n";
                this.generarEtiquetascd3(etiqueta2, arbol);
                cd3XPath.push(`printf("%c",10);`);
            }
            else {
                let atributos = "";
                this.generarEtiquetascd3("<" + key.getidentificador(), arbol);
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        atributos += " " + key2 + "=" + value2;
                        this.generarEtiquetascd3(" " + key2 + "=", arbol);
                        let atrib = key.get3DAtributo();
                        this.printcd3Simple(atrib, arbol, key2);
                    }
                }
                let contain = key.setcd3Value();
                this.generarEtiquetascd3(">", arbol);
                this.printcd3Simple(contain, arbol, key.getidentificador());
                salida += "<" + key.getidentificador() + atributos + ">";
                salida += objetos.replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"");
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta2 + "\n";
                this.generarEtiquetascd3(etiqueta2, arbol);
                cd3XPath.push(`printf("%c",10);`);
            }
        }
        return salida;
    }
    /**
     *
     * @param contenido
     * @param arbol
     */
    printcd3Simple(contenido, arbol, identificador) {
        cd3XPath.push(`//***print  ${identificador}****`);
        let countprint = arbol.getContadort();
        cd3XPath.push(`$t${countprint}=stack[(int)${contenido}]; `);
        cd3XPath.push(`$t0= $t${countprint}; `);
        cd3XPath.push("imprimirString();");
    }
    /**$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
     * *****************************************GENERACION DE <ETIQUTA></ETIQUETA>***********************
     * $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
     * @param contenido
     */
    generarEtiquetascd3(contenido, arbol) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        cd3XPath.push(`// declaracion para imprimir etiquetas ${contenido}`);
        cd3XPath.push(`$t${contadorID}=sp+${stackID};`);
        let data = contenido + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    cd3XPath.push(`//agregamos el string al heap ${iterator}`);
                    cd3XPath.push("$t0=hp;");
                    cd3XPath.push("$t1=" + iterator.charCodeAt(0) + ";");
                    cd3XPath.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            cd3XPath.push("//agregamos el string al heap");
                            cd3XPath.push("$t0=hp;");
                            cd3XPath.push("$t1=" + 34 + ";");
                            cd3XPath.push("guardarString();");
                            cd3XPath.push("//agregamos el string al heap");
                            cd3XPath.push("$t0=hp;");
                            cd3XPath.push("$t1=" + iterator.charAt(0) + ";");
                            cd3XPath.push("guardarString();");
                        }
                        cd3XPath.push("//agregamos el string al heap");
                        cd3XPath.push("$t0=hp;");
                        cd3XPath.push("$t1=" + assci + ";");
                        cd3XPath.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        cd3XPath.push("$t0=hp;");
        cd3XPath.push("$t1=-1;");
        cd3XPath.push("guardarString();");
        const contadort = arbol.getContadort();
        cd3XPath.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        cd3XPath.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        cd3XPath.push("//***print****");
        let countprint = arbol.getContadort();
        cd3XPath.push(`$t${countprint}=stack[(int)$t${contadorID}]; `);
        cd3XPath.push(`$t0= $t${countprint}; `);
        cd3XPath.push("imprimirString();");
    }
    /*********************************************************************************************************/
    /***********************************************X  Q  U  E  R  Y*****************************************/
    /*********************************************************************************************************/
    InterpretarXQUERY(texto) {
        const analizador = src_app_Backend_XQUERY_Analizador_GrammXQuery__WEBPACK_IMPORTED_MODULE_10__;
        let objetos = analizador.parse(texto);
        let ast = new src_app_Backend_XQUERY_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_16__["default"](analizador.parse(texto)); //ejecucion
        console.log("aqui viene la lista de instrucciones");
        console.log(listainstrucciones);
        TreeXQuery = new src_app_Backend_XQUERY_Analizador_Simbolos_Arbol__WEBPACK_IMPORTED_MODULE_16__["default"]([objetos]);
        var tabla = new src_app_Backend_XQUERY_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"](); //ejecucion
        console.log(TreeXQuery);
        var cadena = "";
        var consola = "";
        try {
            TreeXQuery.setContadort(TreeAsc.contadort);
            TreeXQuery.setEtiqueta(TreeAsc.getEtiqueta());
            TreeXQuery.setStack(TreeAsc.getSTACK());
        }
        catch (error) {
        }
        for (var key of this.tablaGlobal.getTabla()) { //SIMBOLOS
            if (key.getidentificador() == 'xml') {
                this.tablaGlobal = key.getvalor();
            }
        }
        Funcionescd3 = new Array();
        for (let index = 0; index < ast.getinstrucciones().length; index++) {
            const instructions = ast.getinstrucciones()[index];
            if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_Funciones__WEBPACK_IMPORTED_MODULE_29__["default"]) {
                var func = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_Let__WEBPACK_IMPORTED_MODULE_27__["default"]) {
                var respuesta = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                console.log(typeof respuesta);
                if (respuesta instanceof src_app_Backend_XQUERY_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_13__["default"]) {
                    this.generarEtiquetasXQUERY("<" + respuesta.getidentificador() + ">", TreeAsc, TreeXQuery.codigo3d);
                    this.printcd3SimpleXquery(respuesta.setcd3Value(), TreeAsc, respuesta.getidentificador(), TreeXQuery.codigo3d);
                    this.generarEtiquetasXQUERY("</" + respuesta.getidentificador() + ">\n", TreeAsc, TreeXQuery.codigo3d);
                    TreeXQuery.codigo3d.push(`printf("%c",10);`);
                    cadena += "<" + respuesta.getidentificador() + ">" + respuesta.getvalor() + "</" + respuesta.getidentificador() + ">\n";
                }
                else if (respuesta instanceof Array) {
                    respuesta.forEach(element => {
                        if (element instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_12__["default"]) {
                            this.generarEtiquetasXQUERY("<" + element.getidentificador() + ">", TreeAsc, TreeXQuery.codigo3d);
                            this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), TreeXQuery.codigo3d);
                            this.generarEtiquetasXQUERY("</" + element.getidentificador() + ">\n", TreeAsc, TreeXQuery.codigo3d);
                            TreeXQuery.codigo3d.push(`printf("%c",10);`);
                            cadena += "<" + element.getidentificador() + ">" + element.getvalor() + "</" + element.getidentificador() + ">\n";
                        }
                        else {
                            cadena += element.getvalor() + "\n";
                        }
                    });
                }
                else if (respuesta instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    if (TreeAsc != null) {
                        cadena += this.recorrerTablaXquery(respuesta, TreeAsc);
                        cadena += "\n";
                    }
                }
                else {
                    console.log("de aqui soy");
                    cadena += respuesta;
                }
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_ForToSimple__WEBPACK_IMPORTED_MODULE_37__["default"]) {
                var theforto = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = theforto.toString();
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_ForToCompuesto__WEBPACK_IMPORTED_MODULE_38__["default"]) {
                var thefortoC = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = thefortoC.toString();
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Funciones_Number__WEBPACK_IMPORTED_MODULE_31__["default"]) {
                var thenumber = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = thenumber;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Funciones_String__WEBPACK_IMPORTED_MODULE_32__["default"]) {
                var thest = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = thest;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Funciones_Upper__WEBPACK_IMPORTED_MODULE_33__["default"]) {
                var theuper = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = theuper;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Funciones_Lower__WEBPACK_IMPORTED_MODULE_34__["default"]) {
                var thelower = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = thelower;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Funciones_Substring__WEBPACK_IMPORTED_MODULE_35__["default"]) {
                var thesubs = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                cadena = thesubs;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_IfFuncionAnidado__WEBPACK_IMPORTED_MODULE_36__["default"]) {
                var theifani = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                console.log("hola estamos en if anidado");
                //cadena = theifani;
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_ForSimple__WEBPACK_IMPORTED_MODULE_26__["default"]) {
                var respuesta = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                if (respuesta instanceof src_app_Backend_XQUERY_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_13__["default"]) {
                    cadena += respuesta.getvalor();
                }
                else if (respuesta instanceof Array) {
                    respuesta.forEach(element => {
                        if (element instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_12__["default"]) {
                            this.generarEtiquetasXQUERY("<" + element.getidentificador() + ">", TreeAsc, TreeXQuery.codigo3d);
                            this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), TreeXQuery.codigo3d);
                            this.generarEtiquetasXQUERY("</" + element.getidentificador() + ">\n", TreeAsc, TreeXQuery.codigo3d);
                            TreeXQuery.codigo3d.push(`printf("%c",10);`);
                            cadena += "<" + element.getidentificador() + ">" + element.getvalor() + "</" + element.getidentificador() + ">\n";
                        }
                        else {
                            cadena += element.getvalor() + "\n";
                        }
                    });
                }
                else if (respuesta instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    if (TreeAsc != null) {
                        cadena += this.recorrerFunciones(respuesta, TreeAsc, TreeXQuery.codigo3d);
                        cadena += "\n";
                    }
                }
                else {
                    cadena = instructions.respuesta;
                }
            }
            else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_Llamada__WEBPACK_IMPORTED_MODULE_30__["default"]) {
                var call = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                TreeXQuery.codigo3d.push(instructions.identificador + "();");
                Funcionescd3.push(instructions.identificador + "(){");
                if (call instanceof src_app_Backend_XQUERY_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_13__["default"]) {
                    cadena += call.getvalor();
                    if (call.getvalor() === "1") {
                        var c1 = TreeXQuery.getContadort();
                        Funcionescd3.push("//***Print Number****");
                        Funcionescd3.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                        Funcionescd3.push("$t2=" + 1 + ";");
                        Funcionescd3.push("NumberToString();");
                        Funcionescd3.push("$t0=hp;");
                        Funcionescd3.push("$t1=-1;");
                        Funcionescd3.push("guardarString();");
                        Funcionescd3.push("$t0= $t" + c1 + ";");
                        Funcionescd3.push(`imprimirString();`);
                        Funcionescd3.push(`printf("%c",10);`);
                    }
                }
                else if (call instanceof Array) {
                    call.forEach(element => {
                        if (element instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_12__["default"]) {
                            this.generarEtiquetasXQUERY("<" + element.getidentificador() + ">", TreeAsc, Funcionescd3);
                            this.printcd3SimpleXquery(element.setcd3Value(), TreeAsc, element.getidentificador(), Funcionescd3);
                            this.generarEtiquetasXQUERY("</" + element.getidentificador() + ">\n", TreeAsc, Funcionescd3);
                            TreeXQuery.codigo3d.push(`printf("%c",10);`);
                            cadena += "<" + element.getidentificador() + ">" + element.getvalor() + "</" + element.getidentificador() + ">\n";
                        }
                        else {
                            cadena += element.getvalor() + "\n";
                        }
                    });
                }
                else if (call instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    if (TreeAsc != null) {
                        cadena += this.recorrerFunciones(call, TreeAsc, Funcionescd3);
                        cadena += "\n";
                    }
                }
                else if (instructions instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_If__WEBPACK_IMPORTED_MODULE_28__["default"]) {
                    console.log("Enre al if");
                    var abr = instructions.interpretar(TreeXQuery, tabla, this.tablaGlobal);
                    console.log("loque trae abr");
                    console.log(abr);
                    if (abr instanceof src_app_Backend_XQUERY_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_13__["default"]) {
                        cadena += abr.getvalor();
                        console.log("entre a simbolosxquery");
                    }
                    else if (abr instanceof Array) {
                        abr.forEach(element => {
                            cadena += element.getvalor();
                            console.log("entre a arrat");
                        });
                    }
                    else if (abr instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        if (TreeAsc != null) {
                            console.log("entre a tabla simbolos");
                            cadena += this.recorrerTablaXquery(abr, TreeAsc);
                            cadena += "\n";
                        }
                    }
                }
                else {
                    cadena += call;
                    if (call) {
                        var c1 = TreeXQuery.getContadort();
                        Funcionescd3.push("//***Print Number****");
                        Funcionescd3.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                        Funcionescd3.push("$t2=" + call + ";");
                        Funcionescd3.push("NumberToString();");
                        Funcionescd3.push("$t0=hp;");
                        Funcionescd3.push("$t1=-1;");
                        Funcionescd3.push("guardarString();");
                        Funcionescd3.push("$t0= $t" + c1 + ";");
                        Funcionescd3.push(`imprimirString();`);
                        Funcionescd3.push(`printf("%c",10);`);
                    }
                    else if (call == false || call === "false") {
                        var L5 = TreeXQuery.getEtiqueta();
                        var L6 = TreeXQuery.getEtiqueta();
                        var L7 = TreeXQuery.getEtiqueta();
                        Funcionescd3.push(`if(0==1) goto L${L5};`);
                        Funcionescd3.push(`goto L${L6};`);
                        Funcionescd3.push(`L${L5}:`);
                        Funcionescd3.push(`printf("%c",116);`);
                        Funcionescd3.push(`printf("%c",114);`);
                        Funcionescd3.push(`printf("%c",117);`);
                        Funcionescd3.push(`printf("%c",101);`);
                        Funcionescd3.push(`goto L${L7};`);
                        Funcionescd3.push(`L${L6}:`);
                        Funcionescd3.push(`printf("%c",102);`);
                        Funcionescd3.push(`printf("%c",97);`);
                        Funcionescd3.push(`printf("%c",108);`);
                        Funcionescd3.push(`printf("%c",115);`);
                        Funcionescd3.push(`printf("%c",101);`);
                        Funcionescd3.push(`L${L7}:`);
                        Funcionescd3.push(`printf("%c",10);`);
                    }
                    else if (call == true || call === "true") {
                        var L5 = TreeXQuery.getEtiqueta();
                        var L6 = TreeXQuery.getEtiqueta();
                        var L7 = TreeXQuery.getEtiqueta();
                        Funcionescd3.push(`if(1==1) goto L${L5};`);
                        Funcionescd3.push(`goto L${L6};`);
                        Funcionescd3.push(`L${L5}:`);
                        Funcionescd3.push(`printf("%c",116);`);
                        Funcionescd3.push(`printf("%c",114);`);
                        Funcionescd3.push(`printf("%c",117);`);
                        Funcionescd3.push(`printf("%c",101);`);
                        Funcionescd3.push(`goto L${L7};`);
                        Funcionescd3.push(`L${L6}:`);
                        Funcionescd3.push(`printf("%c",102);`);
                        Funcionescd3.push(`printf("%c",97);`);
                        Funcionescd3.push(`printf("%c",108);`);
                        Funcionescd3.push(`printf("%c",115);`);
                        Funcionescd3.push(`printf("%c",101);`);
                        Funcionescd3.push(`L${L7}:`);
                        Funcionescd3.push(`printf("%c",10);`);
                    }
                }
                Funcionescd3.push("return 1;\n}");
            }
            this.mostrarContenido(cadena, 'resultado');
            cadena = "";
        }
    }
    recorrerFunciones(t, arbol, lista) {
        var salida = '';
        for (var key of t.tablaActual) {
            var listaobjetitos = "";
            let objetos = key.getvalor();
            if (objetos instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                for (var key3 of objetos.tablaActual) {
                    listaobjetitos += `${key3.getidentificador()}, `;
                }
                //  let recorrido=
                let atributos = "";
                /**################################################################################################
                 * #################################### IMPRIMIR DATOS CD3 XQUERY #################################
                 * ################################################################################################
                 */
                let etiqueta1 = "<" + key.getidentificador();
                this.generarEtiquetasXQUERY("<" + key.getidentificador(), arbol, lista);
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        etiqueta1 += " " + key2 + "=" + value2;
                        this.generarEtiquetasXQUERY(" " + key2 + "=", arbol, lista);
                        let atrib = key.get3DAtributo();
                        this.printcd3SimpleXquery(atrib, arbol, key2, lista);
                    }
                }
                etiqueta1 += ">";
                this.generarEtiquetasXQUERY(">", arbol, lista);
                lista.push(`printf("%c",10);`);
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta1 + "\n" + this.recorrerTablaXquery(objetos, arbol) + etiqueta2 + "\n";
                this.generarEtiquetasXQUERY(etiqueta2, arbol, lista);
                lista.push(`printf("%c",10);`);
            }
            else {
                let atributos = "";
                this.generarEtiquetasXQUERY("<" + key.getidentificador(), arbol, lista);
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        atributos += " " + key2 + "=" + value2;
                        this.generarEtiquetasXQUERY(" " + key2 + "=", arbol, lista);
                        let atrib = key.get3DAtributo();
                        this.printcd3SimpleXquery(atrib, arbol, key2, lista);
                    }
                }
                let contain = key.setcd3Value();
                this.generarEtiquetasXQUERY(">", arbol, lista);
                this.printcd3SimpleXquery(contain, arbol, key.getidentificador(), lista);
                salida += "<" + key.getidentificador() + atributos + ">";
                salida += objetos.replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"");
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta2 + "\n";
                this.generarEtiquetasXQUERY(etiqueta2, arbol, lista);
                lista.push(`printf("%c",10);`);
            }
        }
        return salida;
    }
    recorrerTablaXquery(t, arbol) {
        var salida = '';
        for (var key of t.tablaActual) {
            var listaobjetitos = "";
            let objetos = key.getvalor();
            if (objetos instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                for (var key3 of objetos.tablaActual) {
                    listaobjetitos += `${key3.getidentificador()}, `;
                }
                //  let recorrido=
                let atributos = "";
                /**################################################################################################
                 * #################################### IMPRIMIR DATOS CD3 XQUERY #################################
                 * ################################################################################################
                 */
                let etiqueta1 = "<" + key.getidentificador();
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        etiqueta1 += " " + key2 + "=" + value2;
                    }
                }
                etiqueta1 += ">";
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta1 + "\n" + this.recorrerTablaXquery(objetos, arbol) + etiqueta2 + "\n";
            }
            else {
                let atributos = "";
                if (key.getAtributo().size != 0) {
                    for (var [key2, value2,] of key.getAtributo()) {
                        atributos += " " + key2 + "=" + value2;
                        let atrib = key.get3DAtributo();
                    }
                }
                salida += "<" + key.getidentificador() + atributos + ">";
                salida += objetos.replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"");
                let etiqueta2 = "</" + key.getidentificador() + ">";
                salida += etiqueta2 + "\n";
            }
        }
        return salida;
    }
    /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
     *$$$$$$$$$$$$$$$$$$$$$$$$ UTILIZACION PARA IMPRIMIR ETIQUETAS XQUERY $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
     *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
     */
    /**
     *
     * @param contenido
     * @param arbol
     * @param identificador
     * @param lista
     */
    printcd3SimpleXquery(contenido, arbol, identificador, lista) {
        lista.push(`//***print  ${identificador}****`);
        let countprint = arbol.getContadort();
        lista.push(`$t${countprint}=stack[(int)${contenido}]; `);
        lista.push(`$t0= $t${countprint}; `);
        lista.push("imprimirString();");
    }
    /**
     *
     * @param contenido
     * @param arbol
     * @param lista
     */
    generarEtiquetasXQUERY(contenido, arbol, lista) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        lista.push(`// declaracion para imprimir etiquetas ${contenido}`);
        lista.push(`$t${contadorID}=sp+${stackID};`);
        let data = contenido + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    lista.push(`//agregamos el string al heap ${iterator}`);
                    lista.push("$t0=hp;");
                    lista.push("$t1=" + iterator.charCodeAt(0) + ";");
                    lista.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            lista.push("//agregamos el string al heap");
                            lista.push("$t0=hp;");
                            lista.push("$t1=" + 34 + ";");
                            lista.push("guardarString();");
                            lista.push("//agregamos el string al heap");
                            lista.push("$t0=hp;");
                            lista.push("$t1=" + iterator.charAt(0) + ";");
                            lista.push("guardarString();");
                        }
                        lista.push("//agregamos el string al heap");
                        lista.push("$t0=hp;");
                        lista.push("$t1=" + assci + ";");
                        lista.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        lista.push("$t0=hp;");
        lista.push("$t1=-1;");
        lista.push("guardarString();");
        const contadort = arbol.getContadort();
        lista.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        lista.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        lista.push("//***print****");
        let countprint = arbol.getContadort();
        lista.push(`$t${countprint}=stack[(int)$t${contadorID}]; `);
        lista.push(`$t0= $t${countprint}; `);
        lista.push("imprimirString();");
    }
    /**************************************************************************************************
     * *********************************OPTIMIZACION***************************************************
     * ***********************************************************************************************/
    Optimizar(texto) {
        const Optimo = src_app_Backend_Optimizacion_grammar__WEBPACK_IMPORTED_MODULE_9__;
        const objetos = Optimo.parse(texto);
        let cadenaconcat = "";
        var Tree = new src_app_Backend_Optimizacion_Simbolo_Arbol__WEBPACK_IMPORTED_MODULE_11__["default"]([objetos]);
        ;
        var tabla = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"](); //ejecucion
        Tree.settablaGlobal(tabla);
        for (var instruction of Tree.getinstrucciones()) {
            instruction.forEach(element => {
                if (element instanceof src_app_Backend_Optimizacion_Instrucciones_Declaracion__WEBPACK_IMPORTED_MODULE_24__["default"]) {
                    cadenaconcat += element.interpretar(Tree, tabla);
                }
                else if (element instanceof src_app_Backend_Optimizacion_Instrucciones_Funcion__WEBPACK_IMPORTED_MODULE_25__["default"]) {
                    cadenaconcat += element.interpretar(Tree, tabla);
                }
                else {
                    cadenaconcat += element;
                }
            });
        }
        this.mostrarContenido(cadenaconcat, 'resultado');
        var reco = Tree.getSimbolos();
        let reporte = JSON.stringify(reco);
        localStorage.setItem("optimo", reporte);
    }
}
ContenidoInicioComponent.ɵfac = function ContenidoInicioComponent_Factory(t) { return new (t || ContenidoInicioComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵdirectiveInject"](src_app_servicios_inicio_service__WEBPACK_IMPORTED_MODULE_40__["InicioService"]), _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_41__["MatDialog"])); };
ContenidoInicioComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵdefineComponent"]({ type: ContenidoInicioComponent, selectors: [["app-contenido-inicio"]], viewQuery: function ContenidoInicioComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵviewQuery"](_c0, 1);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵloadQuery"]()) && (ctx.editor = _t.first);
    } }, decls: 55, vars: 0, consts: [[1, "contenedor"], [1, "consolaContainer"], ["name", "fontStyle"], ["value", "Interpretar", 3, "click"], ["value", "Interpretar2", 3, "click"], ["id", "consolas", 1, "consola"], ["consolas", ""], [1, "editores"], ["id", "ediT"], ["name", "fontStyle", "aria-label", "Font Style"], ["value", "InterpretarDesc", 3, "click"], ["value", "Abrir Archivo", 3, "click"], ["type", "file", "hidden", "true", "onclick", "this.value=null", "accept", ".ty", 3, "change"], ["textInput", ""], ["value", "Guardar"], ["id", "contenido", 1, "forma", 3, "this.onload"], ["contenido", ""], ["id", "resultado", 1, "textareanumber3"], ["id", "mostrar", "value", "Interpretar", 3, "click"], ["id", "mostrar", "value", "Optimizar", 3, "click"], ["id", "cdirecciones", 1, "textareanumber4"], ["cdirecciones", ""], ["id", "XQUERY", 1, "textareanumber"], ["resultado", ""]], template: function ContenidoInicioComponent_Template(rf, ctx) { if (rf & 1) {
        const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](1, "h6");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](2, "AMDG");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](3, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](4, " EDITOR XPATH ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](5, "mat-button-toggle-group", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](6, "mat-button-toggle", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](13); return ctx.EjecutarDesc(_r0.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](7, "AST Desc ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](8, "mat-button-toggle", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](13); return ctx.ArbolAscAST(_r0.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](9, "AST Asc ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](10, "mat-button-toggle", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_10_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](13); return ctx.EjecutarAsc(_r0.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](11, "Consulta ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](12, "textarea", 5, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](14, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](15, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](16, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](17, "Editor XML");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](18, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](19, "mat-button-toggle-group", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](20, "mat-button-toggle", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](31); return ctx.interpretarContenido(_r2.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](21, "Interpretar XML Asc ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](22, "mat-button-toggle", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_22_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](31); return ctx.interpretarContenidoDesc(_r2.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](23, "Interpretar XML Desc");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](24, "mat-button-toggle", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_24_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](27); return _r1.click(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](25, "Abrir Archivo XML");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](26, "input", 12, 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("change", function ContenidoInicioComponent_Template_input_change_26_listener($event) { return ctx.textInputChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](28, "mat-button-toggle", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](29, "Guardar XML");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](30, "textarea", 15, 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("this.onload", function ContenidoInicioComponent_Template_textarea_this_onload_30_listener() { return ctx.getConsola(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](32, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](33, "SALIDA CONSULTAS");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](34, "textarea", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](35, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](36, "SALIDA CD3");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](37, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](38, "mat-button-toggle", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_38_listener() { return ctx.finalizarCD3(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](39, "MOSTRAR CD3 ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](40, "mat-button-toggle", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_40_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](43); return ctx.Optimizar(_r3.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](41, "OPTIMIZAR ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](42, "textarea", 20, 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](44, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](45, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](46, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](47, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](48, "EDITOR XQUERY");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](49, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](50, "mat-button-toggle-group", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](51, "mat-button-toggle", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵlistener"]("click", function ContenidoInicioComponent_Template_mat_button_toggle_click_51_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵrestoreView"](_r5); const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵreference"](54); return ctx.InterpretarXQUERY(_r4.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](52, "Consulta XQUERY ");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](53, "textarea", 22, 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
    } }, directives: [_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_42__["MatButtonToggleGroup"], _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_42__["MatButtonToggle"]], styles: ["mat-button-toggle-group[_ngcontent-%COMP%] {\r\n  margin-top: 10px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  left: 20px;\r\n  flex: auto;\r\n  background-color: #fafafa;\r\n}\r\n\r\nmat-button-toggle[_ngcontent-%COMP%] {\r\n  height: 50px;\r\n  width: 140px;\r\n  flex: content;\r\n  background-color: #262c7c;\r\n  color: #f9faf7;\r\n  font-size: 12px;\r\n  font-family: \"Century Gothic\";\r\n}\r\n\r\n.contenedor[_ngcontent-%COMP%] {\r\n  background: #6666e2;\r\n  background: linear-gradient(to right, #4adff3, #5ff16b);\r\n  height: auto;\r\n  width: 97%;\r\n  margin-left: 1.5%;\r\n  font-family: \"Century Gothic\";\r\n\r\n}\r\n\r\n.editores[_ngcontent-%COMP%] {\r\n  display: flex;\r\n}\r\n\r\n#ediT[_ngcontent-%COMP%] {\r\n  margin-top: 2%;\r\n  width: 50%;\r\n}\r\n\r\n.forma[_ngcontent-%COMP%] {\r\n  background: url(http://i.imgur.com/2cOaJ.png);\r\n  background-attachment: local;\r\nbackground-repeat: no-repeat;\r\n  padding-top: 13px;\r\n  padding-left: 40px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  height: 300px;\r\n  border-style: solid;\r\n  width: 80%;\r\n  margin-left: 10%;\r\n  font-family: \"Courier New\", \"Lucida Console\", \"Century Gothic\";\r\n  font-size: 98%;\r\n  color: white;\r\nposition: relative;\r\n  border-color:rgb(126, 123, 123);\r\n  background-color: rgb(24, 73, 43);\r\n}\r\n\r\n.consola[_ngcontent-%COMP%] {\r\n  padding-top: 13px;\r\n  margin-top: 10px;\r\n  height: 50px;\r\n  border-style: solid;\r\n  width: 80%;\r\n  margin-left: 2%;\r\n  background-color: #686869;\r\n  color: #f9faf7;\r\n  font-family: \"Courier New\", \"Century Gothic\", monospace;\r\n  font-size: 20px;\r\n  resize: vertical;\r\n  white-space: nowrap;\r\n}\r\n\r\n.consolaContainer[_ngcontent-%COMP%] {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n}\r\n\r\n#ediT[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\r\n  margin-left: 10%;\r\n  font-size: 20px;\r\n}\r\n\r\n.consolaContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\r\n  font-size: 20px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.textareanumber[_ngcontent-%COMP%]{\r\n  background: url(http://i.imgur.com/2cOaJ.png);\r\n  background-attachment: local;\r\n  background-repeat: no-repeat;\r\n  padding-top: 13px;\r\n  padding-left: 40px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  height: 300px;\r\n  border-style: solid;\r\n  width: 80%;\r\n  margin-left: 10%;\r\n  font-family: \"Courier New\", \"Lucida Console\", \"Century Gothic\";\r\n  font-size: 98%;\r\n  color: white;\r\n  position: relative;\r\n  border-color:rgb(126, 123, 123);\r\n  background-color: rgb(58, 56, 56);\r\n}\r\n\r\n\r\n\r\n.textareanumber3[_ngcontent-%COMP%]{\r\n  background: url(http://i.imgur.com/2cOaJ.png);\r\nbackground-attachment: local;\r\nbackground-repeat: no-repeat;\r\npadding-left: 40px;\r\npadding-top: 13px;\r\ntop: 10px;\r\nleft: 210px;\r\nmargin-block-end: 80px;\r\nheight: 300px;\r\nwidth: 800px;\r\nfont-size: 12.5px;\r\ncolor: white;\r\nposition: relative;\r\n  border-color:rgb(126, 123, 123);\r\n  background-color: rgb(3, 102, 89);\r\n}\r\n\r\n.textareanumber4[_ngcontent-%COMP%]{\r\n  background: url(http://i.imgur.com/2cOaJ.png);\r\nbackground-attachment: local;\r\nbackground-repeat: no-repeat;\r\npadding-left: 40px;\r\npadding-top: 13px;\r\ntop: 10px;\r\nleft: 210px;\r\nmargin-block-end: 80px;\r\nheight: 300px;\r\nwidth: 800px;\r\nfont-size: 12.5px;\r\ncolor: white;\r\nposition: relative;\r\n  border-color:rgb(126, 123, 123);\r\n  background-color: rgb(17, 19, 53);\r\n}\r\n\r\n.cd3result[_ngcontent-%COMP%]{\r\n  left: 100px;\r\n  top: -500px;\r\n  \r\n}\r\n\r\n.mostrar[_ngcontent-%COMP%]{\r\n  left: 100px;\r\n  background-color: aquamarine;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbmlkby1pbmljaW8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLFVBQVU7RUFDVixVQUFVO0VBQ1YseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsNkJBQTZCO0FBQy9COztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLHVEQUF1RDtFQUN2RCxZQUFZO0VBQ1osVUFBVTtFQUNWLGlCQUFpQjtFQUNqQiw2QkFBNkI7O0FBRS9COztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUNBO0VBQ0UsY0FBYztFQUNkLFVBQVU7QUFDWjs7QUFDQTtFQUNFLDZDQUE2QztFQUM3Qyw0QkFBNEI7QUFDOUIsNEJBQTRCO0VBQzFCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsOERBQThEO0VBQzlELGNBQWM7RUFDZCxZQUFZO0FBQ2Qsa0JBQWtCO0VBQ2hCLCtCQUErQjtFQUMvQixpQ0FBaUM7QUFDbkM7O0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsY0FBYztFQUNkLHVEQUF1RDtFQUN2RCxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7O0FBQ0E7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUtBO0VBQ0UsNkNBQTZDO0VBQzdDLDRCQUE0QjtFQUM1Qiw0QkFBNEI7RUFDNUIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQiw4REFBOEQ7RUFDOUQsY0FBYztFQUNkLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsK0JBQStCO0VBQy9CLGlDQUFpQztBQUNuQzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7OzttQ0FnQm1DOztBQUduQztFQUNFLDZDQUE2QztBQUMvQyw0QkFBNEI7QUFDNUIsNEJBQTRCO0FBQzVCLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakIsU0FBUztBQUNULFdBQVc7QUFDWCxzQkFBc0I7QUFDdEIsYUFBYTtBQUNiLFlBQVk7QUFDWixpQkFBaUI7QUFDakIsWUFBWTtBQUNaLGtCQUFrQjtFQUNoQiwrQkFBK0I7RUFDL0IsaUNBQWlDO0FBQ25DOztBQUNBO0VBQ0UsNkNBQTZDO0FBQy9DLDRCQUE0QjtBQUM1Qiw0QkFBNEI7QUFDNUIsa0JBQWtCO0FBQ2xCLGlCQUFpQjtBQUNqQixTQUFTO0FBQ1QsV0FBVztBQUNYLHNCQUFzQjtBQUN0QixhQUFhO0FBQ2IsWUFBWTtBQUNaLGlCQUFpQjtBQUNqQixZQUFZO0FBQ1osa0JBQWtCO0VBQ2hCLCtCQUErQjtFQUMvQixpQ0FBaUM7QUFDbkM7O0FBQ0E7RUFDRSxXQUFXO0VBQ1gsV0FBVzs7QUFFYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCw0QkFBNEI7QUFDOUIiLCJmaWxlIjoiY29udGVuaWRvLWluaWNpby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAge1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIGxlZnQ6IDIwcHg7XHJcbiAgZmxleDogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xyXG59XHJcblxyXG5tYXQtYnV0dG9uLXRvZ2dsZSB7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIHdpZHRoOiAxNDBweDtcclxuICBmbGV4OiBjb250ZW50O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyNjJjN2M7XHJcbiAgY29sb3I6ICNmOWZhZjc7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtZmFtaWx5OiBcIkNlbnR1cnkgR290aGljXCI7XHJcbn1cclxuLmNvbnRlbmVkb3Ige1xyXG4gIGJhY2tncm91bmQ6ICM2NjY2ZTI7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNGFkZmYzLCAjNWZmMTZiKTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgd2lkdGg6IDk3JTtcclxuICBtYXJnaW4tbGVmdDogMS41JTtcclxuICBmb250LWZhbWlseTogXCJDZW50dXJ5IEdvdGhpY1wiO1xyXG5cclxufVxyXG5cclxuLmVkaXRvcmVzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbiNlZGlUIHtcclxuICBtYXJnaW4tdG9wOiAyJTtcclxuICB3aWR0aDogNTAlO1xyXG59XHJcbi5mb3JtYSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKGh0dHA6Ly9pLmltZ3VyLmNvbS8yY09hSi5wbmcpO1xyXG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogbG9jYWw7XHJcbmJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgcGFkZGluZy10b3A6IDEzcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgd2lkdGg6IDgwJTtcclxuICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gIGZvbnQtZmFtaWx5OiBcIkNvdXJpZXIgTmV3XCIsIFwiTHVjaWRhIENvbnNvbGVcIiwgXCJDZW50dXJ5IEdvdGhpY1wiO1xyXG4gIGZvbnQtc2l6ZTogOTglO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxucG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJvcmRlci1jb2xvcjpyZ2IoMTI2LCAxMjMsIDEyMyk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0LCA3MywgNDMpO1xyXG59XHJcbi5jb25zb2xhIHtcclxuICBwYWRkaW5nLXRvcDogMTNweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIGhlaWdodDogNTBweDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDIlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM2ODY4Njk7XHJcbiAgY29sb3I6ICNmOWZhZjc7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIiwgXCJDZW50dXJ5IEdvdGhpY1wiLCBtb25vc3BhY2U7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIHJlc2l6ZTogdmVydGljYWw7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG4uY29uc29sYUNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuI2VkaVQgbGFiZWwge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcbi5jb25zb2xhQ29udGFpbmVyIGxhYmVsIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG5cclxuQGltcG9ydCAnfmNvZGVtaXJyb3IvbGliL2NvZGVtaXJyb3InO1xyXG5AaW1wb3J0ICd+Y29kZW1pcnJvci90aGVtZS9tYXRlcmlhbCc7XHJcbi50ZXh0YXJlYW51bWJlcntcclxuICBiYWNrZ3JvdW5kOiB1cmwoaHR0cDovL2kuaW1ndXIuY29tLzJjT2FKLnBuZyk7XHJcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBsb2NhbDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIHBhZGRpbmctdG9wOiAxM3B4O1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgaGVpZ2h0OiAzMDBweDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcclxuICBmb250LWZhbWlseTogXCJDb3VyaWVyIE5ld1wiLCBcIkx1Y2lkYSBDb25zb2xlXCIsIFwiQ2VudHVyeSBHb3RoaWNcIjtcclxuICBmb250LXNpemU6IDk4JTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJvcmRlci1jb2xvcjpyZ2IoMTI2LCAxMjMsIDEyMyk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDU4LCA1NiwgNTYpO1xyXG59XHJcblxyXG4vKmJhY2tncm91bmQ6IHVybChodHRwOi8vaS5pbWd1ci5jb20vMmNPYUoucG5nKTtcclxuYmFja2dyb3VuZC1hdHRhY2htZW50OiBsb2NhbDtcclxuYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxucGFkZGluZy10b3A6IDEzcHg7XHJcbnBhZGRpbmctbGVmdDogNDBweDtcclxubWFyZ2luLXRvcDogMTBweDtcclxubWFyZ2luLWJvdHRvbTogMTBweDtcclxuaGVpZ2h0OiAzMDBweDtcclxuYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxud2lkdGg6IDgwJTtcclxubWFyZ2luLWxlZnQ6IDEwJTtcclxuZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIiwgXCJMdWNpZGEgQ29uc29sZVwiLCBcIkNlbnR1cnkgR290aGljXCI7XHJcbmZvbnQtc2l6ZTogOTglO1xyXG5jb2xvcjogd2hpdGU7XHJcbnBvc2l0aW9uOiByZWxhdGl2ZTtcclxuYm9yZGVyLWNvbG9yOnJnYigxMjYsIDEyMywgMTIzKTtcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDU4LCA1NiwgNTYpOyovXHJcblxyXG5cclxuLnRleHRhcmVhbnVtYmVyM3tcclxuICBiYWNrZ3JvdW5kOiB1cmwoaHR0cDovL2kuaW1ndXIuY29tLzJjT2FKLnBuZyk7XHJcbmJhY2tncm91bmQtYXR0YWNobWVudDogbG9jYWw7XHJcbmJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbnBhZGRpbmctbGVmdDogNDBweDtcclxucGFkZGluZy10b3A6IDEzcHg7XHJcbnRvcDogMTBweDtcclxubGVmdDogMjEwcHg7XHJcbm1hcmdpbi1ibG9jay1lbmQ6IDgwcHg7XHJcbmhlaWdodDogMzAwcHg7XHJcbndpZHRoOiA4MDBweDtcclxuZm9udC1zaXplOiAxMi41cHg7XHJcbmNvbG9yOiB3aGl0ZTtcclxucG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJvcmRlci1jb2xvcjpyZ2IoMTI2LCAxMjMsIDEyMyk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMsIDEwMiwgODkpO1xyXG59XHJcbi50ZXh0YXJlYW51bWJlcjR7XHJcbiAgYmFja2dyb3VuZDogdXJsKGh0dHA6Ly9pLmltZ3VyLmNvbS8yY09hSi5wbmcpO1xyXG5iYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGxvY2FsO1xyXG5iYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5wYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbnBhZGRpbmctdG9wOiAxM3B4O1xyXG50b3A6IDEwcHg7XHJcbmxlZnQ6IDIxMHB4O1xyXG5tYXJnaW4tYmxvY2stZW5kOiA4MHB4O1xyXG5oZWlnaHQ6IDMwMHB4O1xyXG53aWR0aDogODAwcHg7XHJcbmZvbnQtc2l6ZTogMTIuNXB4O1xyXG5jb2xvcjogd2hpdGU7XHJcbnBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBib3JkZXItY29sb3I6cmdiKDEyNiwgMTIzLCAxMjMpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNywgMTksIDUzKTtcclxufVxyXG4uY2QzcmVzdWx0e1xyXG4gIGxlZnQ6IDEwMHB4O1xyXG4gIHRvcDogLTUwMHB4O1xyXG4gIFxyXG59XHJcblxyXG4ubW9zdHJhcntcclxuICBsZWZ0OiAxMDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhbWFyaW5lO1xyXG59Il19 */"] });
class Pruebas {
}
Pruebas.ɵfac = function Pruebas_Factory(t) { return new (t || Pruebas)(); };
Pruebas.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵdefineComponent"]({ type: Pruebas, selectors: [["contenido-dialog"]], decls: 5, vars: 0, consts: [["mat-dialog-title", ""], ["mat-dialog-content", ""], ["mat-dialog-actions", ""]], template: function Pruebas_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](0, "h1", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](1, "ARBOL AST");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementStart"](2, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵtext"](3, "Se creo de forma exitosa el arbol AST");
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_39__["ɵɵelement"](4, "div", 2);
    } }, encapsulation: 2 });


/***/ }),

/***/ "CgpK":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Nativo.ts ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Nativo; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");



class Nativo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(tipo, valor, fila, columna) {
        super(tipo, fila, columna);
        this.valor = valor;
        if (tipo.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA) {
            let val = this.valor.toString();
            this.valor = val
                .replace('\\n', '\n')
                .replace('\\t', '\t')
                .replace('\\r', '\r')
                .replace('\\\\', '\\')
                .replace("\\'", "'")
                .replace('\\"', '"');
        }
    }
    getNodoAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('NATIVO');
        nodo.agregarHijo(this.valor + '');
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].BOOLEANO) {
            return this.valor == 'true' ? true : false;
        }
        let contador = arbol.getContadort();
        let stack = arbol.getSTACK();
        arbol.codigo3d.push(`// declaracion LET ${this.valor}`);
        arbol.codigo3d.push(`$t${contador}=sp+${stack};`);
        return this.valor;
    }
    getNativo() {
        return this.valor;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "DJ5/":
/*!******************************************************************!*\
  !*** ./src/app/paginas/xpath-asc-ast/xpath-asc-ast.component.ts ***!
  \******************************************************************/
/*! exports provided: XpathAscAstComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XpathAscAstComponent", function() { return XpathAscAstComponent; });
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vis */ "TycK");
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vis__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");


class XpathAscAstComponent {
    constructor() {
        this.contador = 1;
        this.cuerpo = '';
        this.dataSource = '';
        this.nodes = null;
        this.edges = null;
        this.network = null;
        this.cadena = "";
        this.directionInput = document.getElementById("direction");
        this.c = 0;
    }
    ngOnInit() {
        this.nodes = [];
        this.edges = [];
        let info = window.localStorage.getItem('astpath');
        let contenido = JSON.parse(info);
        /*this.cadena+=this.getValor(contenido)+"--"
        this.graficaAST(contenido)
        console.log(this.cadena)*/
        var nivel = 0;
        this.nodes.push({ id: this.c, label: this.getValor(contenido), nivel: nivel });
        this.nodes[this.c]["level"] = nivel;
        var hijos = this.recorrerAST(this.c, contenido, nivel);
        console.log(hijos);
        for (let nodo of hijos.nodos) {
            this.nodes.push({ id: nodo.id, label: nodo.label });
        }
        for (let enlace of hijos.enlaces) {
            this.edges.push({ from: enlace.id1, to: enlace.id2 });
        }
        for (let nodo of hijos.nodos) {
            this.nodes[nodo.id]["level"] = nodo.nivel;
        }
        var container = document.getElementById("mynetwork");
        var data = {
            nodes: this.nodes,
            edges: this.edges,
        };
        var options = {
            nodes: {
                borderWidth: 2,
                size: 30,
                color: {
                    border: '#A72168',
                    background: '#F695BB',
                },
                font: {
                    color: "#000000",
                    face: 'Century Gothic'
                }
            },
            edges: {
                smooth: {
                    type: "cubicBezier",
                    forceDirection: "vertical",
                    roundness: 0.4,
                }
            },
            layout: {
                randomSeed: undefined,
                improvedLayout: true,
                hierarchical: {
                    direction: "UD",
                    sortMethod: "hubsize"
                },
            },
            physics: false,
        };
        this.network = new vis__WEBPACK_IMPORTED_MODULE_0__["Network"](container, data, options);
        this.network.on("select", function (params) {
            document.getElementById("selection").innerText =
                "Selection: " + params.nodes;
        });
    }
    destroy() {
        if (this.network !== null) {
            this.network.destroy();
            this.network = null;
        }
    }
    recorrerAST(padre, nPadre, nivel) {
        var arr = { nodos: [], enlaces: [] };
        for (let hijo of this.getHijos(nPadre)) {
            nivel++;
            this.c++;
            arr.enlaces.push({ id1: padre, id2: this.c });
            arr.nodos.push({ id: this.c, label: this.getValor(hijo), nivel: nivel });
            var resultado = this.recorrerAST(this.c, hijo, nivel);
            arr.enlaces = arr.enlaces.concat(resultado.enlaces);
            arr.nodos = arr.nodos.concat(resultado.nodos);
        }
        return arr;
    }
    getValor(nodo) {
        return nodo.valor;
    }
    getHijos(nodo) {
        return nodo.listaNodos;
    }
    graficaAST(nodo) {
        for (let hijo of this.getHijos(nodo)) {
            this.cadena += this.getValor(hijo) + "->";
            this.graficaAST(hijo);
        }
    }
}
XpathAscAstComponent.ɵfac = function XpathAscAstComponent_Factory(t) { return new (t || XpathAscAstComponent)(); };
XpathAscAstComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: XpathAscAstComponent, selectors: [["app-xpath-asc-ast"]], decls: 1, vars: 0, consts: [["id", "mynetwork"]], template: function XpathAscAstComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 0);
    } }, styles: ["#mynetwork[_ngcontent-%COMP%] {\r\n    width: 1362px;\r\n    height: 595px;\r\n    border: 1px solid rgb(221, 58, 58);\r\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInhwYXRoLWFzYy1hc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixhQUFhO0lBQ2Isa0NBQWtDO0VBQ3BDIiwiZmlsZSI6InhwYXRoLWFzYy1hc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNteW5ldHdvcmsge1xyXG4gICAgd2lkdGg6IDEzNjJweDtcclxuICAgIGhlaWdodDogNTk1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjIxLCA1OCwgNTgpO1xyXG4gIH0iXX0= */"] });


/***/ }),

/***/ "DdrW":
/*!*****************************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/ParentesisExpresion.ts ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ParentesisExpresion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "E7Rf");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");




class ParentesisExpresion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion, fila, columna, coma) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.coma = coma;
        this.Expresion = expresion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('PARENTESIS_EXPRESION'); //PADRE SELECT
        if (this.Expresion != null) {
            nodo.agregarHijoAST(this.Expresion.getNodosAST());
        }
        if (this.coma != null) {
            var nodsBarras2 = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.coma);
            nodo.agregarHijoAST(nodsBarras2);
        }
        return nodo;
    }
    interpretar(arbol, tabla) {
        arbol.gettablaGlobal();
        let variable = tabla.getVariable(this.coma);
        if (variable != null) {
            /*SI NO ES NULA*/
        }
        else {
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('SEMANTICO', 'VARIABLE ' + this.Expresion + ' NO EXISTE', this.fila, this.columna);
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "E7Rf":
/*!*********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Excepciones/NodoErrores.ts ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NodoErrores; });
class NodoErrores {
    constructor(tipo, desc, fila, columna) {
        this.tipoError = tipo;
        this.desc = desc;
        this.fila = fila;
        this.columna = columna;
    }
    getDesc() {
        return this.desc;
    }
    getTipoError() {
        return this.tipoError;
    }
    getcolumna() {
        return this.columna;
    }
    getFila() {
        return this.fila;
    }
    returnError() {
        return ('Se obtuvo: ' +
            this.tipoError +
            ' desc:{' +
            this.desc +
            '} en la fila: ' +
            this.fila +
            ' en la columna: ' +
            this.columna +
            '\n');
    }
}


/***/ }),

/***/ "EHLN":
/*!********************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/GramaticaXML.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var GramaticaXML = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [1, 3], $V1 = [1, 4], $V2 = [1, 10], $V3 = [2, 13], $V4 = [10, 12, 14, 15], $V5 = [1, 20], $V6 = [1, 18], $V7 = [5, 9, 10, 13, 16];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "OBJETO": 4, "EOF": 5, "INSTRUCCION": 6, "CUERPO": 7, "OBJETOS": 8, "MENORQUEESPECIAL": 9, "IDENTIFICADOR": 10, "L_ATRIBUTOS": 11, "MAYORQUEESPECIAL": 12, "MENORQUE": 13, "SELFCLOSE": 14, "MAYORQUE": 15, "SALIDA": 16, "ATRIBUTO": 17, "IGUAL": 18, "CADENA": 19, "QUOTE": 20, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "CUERPO", 9: "MENORQUEESPECIAL", 10: "IDENTIFICADOR", 12: "MAYORQUEESPECIAL", 13: "MENORQUE", 14: "SELFCLOSE", 15: "MAYORQUE", 16: "SALIDA", 18: "IGUAL", 19: "CADENA", 20: "QUOTE" },
        productions_: [0, [3, 2], [6, 1], [6, 1], [6, 1], [8, 2], [8, 1], [4, 5], [4, 5], [4, 8], [4, 7], [11, 2], [11, 1], [11, 0], [17, 3], [17, 3]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                case 3:
                    this.$ = $$[$0];
                    break;
                case 4:
                    inicio.listaErrores.push(new CNodoErrores.default("Error Sintactico", "Se esperaba un token, error en : " + yytext, _$[$0].first_line, _$[$0].first_column));
                    console.log("Error Sintactico, Se esperaba un token en esta linea " + "Linea: " + _$[$0].first_line + " Columna: " + _$[$0].first_column);
                    this.$ = false;
                    break;
                case 5:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 6:
                    this.$ = [$$[$0]];
                    break;
                case 7:
                case 8:
                    this.$ = new objeto.default($$[$0 - 3], null, $$[$0 - 2], $$[$0], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 9:
                    this.$ = new objeto.default($$[$0 - 6], null, $$[$0 - 5], $$[$0 - 3], _$[$0 - 7].first_line, _$[$0 - 7].first_column);
                    if ($$[$0 - 6].toString() != $$[$0 - 1].toString()) {
                        console.log("ERROR SEMANTICO");
                        inicio.listaErrores.push(new CNodoErrores.default("Semantico XML", "Error nombre Etiqueta " + $$[$0 - 6].toString() + ", con " + $$[$0 - 1].toString(), _$[$0 - 7].first_line, _$[$0 - 7].first_column));
                    }
                    break;
                case 10:
                    this.$ = new objeto.default($$[$0 - 5], $$[$0 - 2], $$[$0 - 4], null, _$[$0 - 6].first_line, _$[$0 - 6].first_column);
                    if ($$[$0 - 5].toString() != $$[$0 - 1].toString()) {
                        console.log("ERROR SEMANTICO");
                        inicio.listaErrores.push(new CNodoErrores.default("Semantico XML", "Error nombre Etiqueta " + $$[$0 - 5].toString() + ", con " + $$[$0 - 1].toString(), _$[$0 - 6].first_line, _$[$0 - 6].first_column));
                    }
                    break;
                case 11:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 12:
                    this.$ = [$$[$0]];
                    break;
                case 13:
                    this.$ = [];
                    break;
                case 14:
                case 15:
                    this.$ = new atributo.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 9: $V0, 13: $V1 }, { 1: [3] }, { 5: [1, 5] }, { 10: [1, 6] }, { 10: [1, 7] }, { 1: [2, 1] }, { 10: $V2, 11: 8, 12: $V3, 17: 9 }, o([14, 15], $V3, { 17: 9, 11: 11, 10: $V2 }), { 10: $V2, 12: [1, 12], 17: 13 }, o($V4, [2, 12]), { 18: [1, 14] }, { 10: $V2, 14: [1, 15], 15: [1, 16], 17: 13 }, { 2: $V5, 4: 21, 6: 17, 7: $V6, 8: 19, 9: $V0, 13: $V1 }, o($V4, [2, 11]), { 19: [1, 22], 20: [1, 23] }, { 2: $V5, 4: 21, 6: 24, 7: $V6, 8: 19, 9: $V0, 13: $V1 }, { 2: $V5, 4: 21, 6: 25, 7: $V6, 8: 19, 9: $V0, 13: $V1 }, o($V7, [2, 7]), o($V7, [2, 2]), o([5, 10, 16], [2, 3], { 4: 26, 9: $V0, 13: $V1 }), o($V7, [2, 4]), o($V7, [2, 6]), o($V4, [2, 14]), o($V4, [2, 15]), o($V7, [2, 8]), { 10: [1, 28], 16: [1, 27] }, o($V7, [2, 5]), { 10: [1, 29] }, { 15: [1, 30] }, { 15: [1, 31] }, o($V7, [2, 10]), o($V7, [2, 9])],
        defaultActions: { 5: [2, 1] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], // token stack
            vstack = [null], // semantic value stack
            lstack = [], // location stack
            table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            //this.reductionCount = this.shiftCount = 0;
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            // copy state
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                // if token isn't its numeric value, convert
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                // retreive state number from top of stack
                state = stack[stack.length - 1];
                // use default actions if available
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    // read action for current state and first input
                    action = table[state] && table[state][symbol];
                }
                _handle_error: 
                // handle parse error
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var error_rule_depth;
                    var errStr = '';
                    // Return the rule stack depth where the nearest error rule can be found.
                    // Return FALSE when no error recovery rule was found.
                    function locateNearestErrorRecoveryRule(state) {
                        var stack_probe = stack.length - 1;
                        var depth = 0;
                        // try to recover from error
                        for (;;) {
                            // check for error recovery rule in this state
                            if ((TERROR.toString()) in table[state]) {
                                return depth;
                            }
                            if (state === 0 || stack_probe < 2) {
                                return false; // No suitable error recovery rule available.
                            }
                            stack_probe -= 2; // popStack(1): [symbol, action]
                            state = stack[stack_probe];
                            ++depth;
                        }
                    }
                    if (!recovering) {
                        // first see if there's any chance at hitting an error recovery rule:
                        error_rule_depth = locateNearestErrorRecoveryRule(state);
                        // Report error
                        expected = [];
                        for (p in table[state]) {
                            if (this.terminals_[p] && p > TERROR) {
                                expected.push("'" + this.terminals_[p] + "'");
                            }
                        }
                        if (lexer.showPosition) {
                            errStr = 'Parse error on line ' + (yylineno + 1) + ":\n" + lexer.showPosition() + "\nExpecting " + expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                        }
                        else {
                            errStr = 'Parse error on line ' + (yylineno + 1) + ": Unexpected " +
                                (symbol == EOF ? "end of input" :
                                    ("'" + (this.terminals_[symbol] || symbol) + "'"));
                        }
                        this.parseError(errStr, {
                            text: lexer.match,
                            token: this.terminals_[symbol] || symbol,
                            line: lexer.yylineno,
                            loc: yyloc,
                            expected: expected,
                            recoverable: (error_rule_depth !== false)
                        });
                    }
                    else if (preErrorSymbol !== EOF) {
                        error_rule_depth = locateNearestErrorRecoveryRule(state);
                    }
                    // just recovered from another error
                    if (recovering == 3) {
                        if (symbol === EOF || preErrorSymbol === EOF) {
                            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                        }
                        // discard current lookahead and grab another
                        yyleng = lexer.yyleng;
                        yytext = lexer.yytext;
                        yylineno = lexer.yylineno;
                        yyloc = lexer.yylloc;
                        symbol = lex();
                    }
                    // try to recover from error
                    if (error_rule_depth === false) {
                        throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
                    }
                    popStack(error_rule_depth);
                    preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
                    symbol = TERROR; // insert generic error symbol as new lookahead
                    state = stack[stack.length - 1];
                    action = table[state] && table[state][TERROR];
                    recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
                }
                // this shouldn't happen, unless resolve defaults are off
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1: // shift
                        //this.shiftCount++;
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]); // push state
                        symbol = null;
                        if (!preErrorSymbol) { // normal execution/no error
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            // error just occurred, resume old lookahead f/ before error
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        // reduce
                        //this.reductionCount++;
                        len = this.productions_[action[1]][1];
                        // perform semantic action
                        yyval.$ = vstack[vstack.length - len]; // default to $$ = $1
                        // default location, uses first token for firsts, last for lasts
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
                        }
                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        // pop off stack
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        // goto new state = table[STATE][NONTERMINAL]
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        // accept
                        return true;
                }
            }
            return true;
        } };
    const atributo = __webpack_require__(/*! ./Expresiones/Atributo */ "uvkm");
    const tipo = __webpack_require__(/*! ./Simbolos/Tipo */ "Oyrp");
    const objeto = __webpack_require__(/*! ./Expresiones/Objeto */ "xzWR");
    const CErrores = __webpack_require__(/*! ./Excepciones/Errores */ "Vgfr");
    const CNodoErrores = __webpack_require__(/*! ./Excepciones/NodoErrores */ "cikY");
    const inicio = __webpack_require__(/*! ../../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
    var palabra = "";
    var palabra1 = "";
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0:
                        break;
                    case 1:
                        this.begin('cuerpo');
                        return 15;
                        break;
                    case 2:
                        this.begin('INITIAL');
                        if (palabra.replaceAll(" ", "") == "")
                            return 16;
                        yy_.yytext = palabra;
                        palabra = "";
                        if (palabra == "<!--")
                            return 'COMENTARIOS';
                        if (palabra.replaceAll(" ", "") == "")
                            return 7;
                        break;
                    case 3:
                        this.begin('INITIAL');
                        return 13;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 4:
                        this.begin('INITIAL');
                        return 14;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 5:
                        palabra += yy_.yytext;
                        break;
                    case 6:
                        return 12;
                        break;
                    case 7:
                        return 16;
                        break;
                    case 8:
                        return 14;
                        break;
                    case 9:
                        return 9;
                        break;
                    case 10:
                        return 13;
                        break;
                    case 11:
                        return 18;
                        break;
                    case 12:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 19;
                        break;
                    case 13:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 20;
                        break;
                    case 14:
                        return 10;
                        break;
                    case 15:
                        return 5;
                        break;
                    case 16:
                        break;
                    case 17:
                        break;
                    case 18:
                        break;
                    case 19:
                        inicio.listaErrores.push(new CNodoErrores.default("Lexico", "No se esperaba el caracter: " + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column));
                        console.log("Lexico, No se esperaba el caracter: " + yy_.yytext + " Linea: " + yy_.yylloc.first_line + "Columna: " + yy_.yylloc.first_column);
                        break;
                }
            },
            rules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i, /^(?:>)/i, /^(?:<\/)/i, /^(?:<)/i, /^(?:<)/i, /^(?:.)/i, /^(?:\?>)/i, /^(?:<\/)/i, /^(?:\/>)/i, /^(?:<\?)/i, /^(?:<)/i, /^(?:=)/i, /^(?:"[^\"]*")/i, /^(?:'[^\']*')/i, /^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i, /^(?:$)/i, /^(?:[ \r\t]+)/i, /^(?:\n+)/i, /^(?:\s+)/i, /^(?:.)/i],
            conditions: { "comment": { "rules": [], "inclusive": false }, "xml": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "cuerpo": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "INITIAL": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = GramaticaXML;
    exports.Parser = GramaticaXML.Parser;
    exports.parse = function () { return GramaticaXML.parse.apply(GramaticaXML, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 1).readFileSync(__webpack_require__(/*! path */ 2).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "Er68":
/*!******************************************************!*\
  !*** ./src/app/paginas/errores/errores.component.ts ***!
  \******************************************************/
/*! exports provided: ErroresComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErroresComponent", function() { return ErroresComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/table */ "+0xr");


function ErroresComponent_th_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Error de Tipo. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ErroresComponent_td_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r10 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r10.tipoError, " ");
} }
function ErroresComponent_th_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Descripcion ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ErroresComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r11 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r11.desc, " ");
} }
function ErroresComponent_th_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Linea ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ErroresComponent_td_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r12 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r12.fila, " ");
} }
function ErroresComponent_th_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Columna ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ErroresComponent_td_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r13 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r13.columna, " ");
} }
function ErroresComponent_tr_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 12);
} }
function ErroresComponent_tr_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 13);
} }
class ErroresComponent {
    constructor() {
        this.displayedColumns = ['tipoError', 'Descripcion', 'Linea', 'Columna'];
        this.dataSource = '';
    }
    ngOnInit() {
        let info = window.localStorage.getItem('errores');
        let otro = JSON.parse(info);
        this.dataSource = otro;
        console.log(otro);
    }
}
ErroresComponent.ɵfac = function ErroresComponent_Factory(t) { return new (t || ErroresComponent)(); };
ErroresComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ErroresComponent, selectors: [["app-errores"]], decls: 18, vars: 3, consts: [[1, "tabla"], ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"], ["matColumnDef", "tipoError"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "Descripcion"], ["matColumnDef", "Linea"], ["matColumnDef", "Columna"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]], template: function ErroresComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "TABLA DE ERRORES");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "table", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](4, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, ErroresComponent_th_5_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ErroresComponent_td_6_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](7, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ErroresComponent_th_8_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, ErroresComponent_td_9_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](10, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ErroresComponent_th_11_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ErroresComponent_td_12_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](13, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, ErroresComponent_th_14_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ErroresComponent_td_15_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, ErroresComponent_tr_16_Template, 1, 0, "tr", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, ErroresComponent_tr_17_Template, 1, 0, "tr", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);
    } }, directives: [_angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRow"]], styles: ["table[_ngcontent-%COMP%] {\r\n  position: relative;\r\n  width: 98%;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n  margin-left: 1%;\r\n  background-color: #0c7c6d;\r\n}\r\nh1[_ngcontent-%COMP%] {\r\n  margin-left: 35%;\r\n  margin-top: 5%;\r\n  margin-bottom: 5%;\r\n  font-size: 50px;\r\n  font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\r\n  background-color: transparent;\r\n}\r\n.tabla[_ngcontent-%COMP%] {\r\n  border: 2px solid #67676f;\r\n  margin: auto;\r\n  width: 90%;\r\n  height: auto;\r\n  overflow: hidden;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9yZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2Ysd0VBQXdFO0VBQ3hFLDZCQUE2QjtBQUMvQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixVQUFVO0VBQ1YsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJlcnJvcmVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiA5OCU7XHJcbiAgbWFyZ2luLXRvcDogMSU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMSU7XHJcbiAgbWFyZ2luLWxlZnQ6IDElO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwYzdjNmQ7XHJcbn1cclxuaDEge1xyXG4gIG1hcmdpbi1sZWZ0OiAzNSU7XHJcbiAgbWFyZ2luLXRvcDogNSU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNSU7XHJcbiAgZm9udC1zaXplOiA1MHB4O1xyXG4gIGZvbnQtZmFtaWx5OiBcIkZyYW5rbGluIEdvdGhpYyBNZWRpdW1cIiwgXCJBcmlhbCBOYXJyb3dcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuLnRhYmxhIHtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjNjc2NzZmO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB3aWR0aDogOTAlO1xyXG4gIGhlaWdodDogYXV0bztcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ "F2Ye":
/*!*******************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Declaracion.ts ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Declaracion; });
/* harmony import */ var _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Expresion/Identificador */ "zxbS");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Expresion_Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Expresion/Termino */ "98aF");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");




class Declaracion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(identificador, expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
        this.expresion = expresion;
    }
    interpretar(arbol, tabla) {
        // CONCATENAR EL ; DESPUES DE RECORRER LO DE CORCHETES
        var cadena = "";
        if (this.identificador != null) {
            cadena += this.identificador;
        }
        if (this.expresion != null) {
            var stack = /\[/gi;
            // use of String search() Method
            if (this.identificador.search(stack) == -1) {
                if (this.expresion instanceof _Expresion_Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                    cadena += " " + this.expresion.valor + ";\n";
                }
                else if (this.expresion instanceof _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                    var variable = this.expresion.interpretar(arbol, tabla);
                    cadena += " " + variable.contenido + ";\n";
                }
            }
            else {
                if (this.expresion instanceof Array) {
                    for (var a of this.expresion) {
                        let temporal = a;
                        cadena += temporal.valor + "];\n";
                    }
                }
            }
        }
        return cadena;
    }
}


/***/ }),

/***/ "GvuX":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Abstracto/nodoAST.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nodoAST; });
class nodoAST {
    constructor(valor) {
        this.listaNodos = new Array();
        this.valor = valor;
    }
    agregarHijo(val, ambito, operador) {
        if (ambito != undefined) {
            switch (ambito) {
                case 'ar':
                    switch (operador) {
                        case 0:
                            val = '+';
                            break;
                        case 1:
                            val = '-';
                            break;
                        case 2:
                            val = '*';
                            break;
                        case 3:
                            val = 'div';
                            break;
                        case 4:
                            val = '^';
                            break;
                        case 5:
                            val = 'mod';
                            break;
                    }
                    break;
                case 'log':
                    switch (operador) {
                        case 0:
                            val = 'or';
                            break;
                        case 1:
                            val = 'and';
                            break;
                    }
                    break;
                case 'rel':
                    switch (operador) {
                        case 0:
                            val = '=';
                            break;
                        case 1:
                            val = '!=';
                            break;
                        case 2:
                            val = '>';
                            break;
                        case 3:
                            val = '<';
                            break;
                        case 4:
                            val = '>=';
                            break;
                        case 5:
                            val = '<=';
                            break;
                    }
                    break;
            }
            this.listaNodos.push(new nodoAST(val));
        }
        else
            this.listaNodos.push(new nodoAST(val));
    }
    agregarHijoAST(hijo) {
        if (hijo != undefined)
            this.listaNodos.push(hijo);
    }
    getValor() {
        return this.valor;
    }
    getHijos() {
        return this.listaNodos;
    }
}


/***/ }),

/***/ "HJFq":
/*!**************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Concatenar.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Concatenar; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Concatenar extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(operando, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.operando = operando;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "HVYh":
/*!***********************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Simbolos/Tipo.ts ***!
  \***********************************************************/
/*! exports provided: default, tipoDato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tipo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tipoDato", function() { return tipoDato; });
class Tipo {
    constructor(tipos) {
        this.tipos = tipos;
    }
    getTipo() {
        return this.tipos;
    }
    setTipo(tipo) {
        this.tipos = tipo;
    }
    igual(compara) {
        return (this.tipos = compara.tipos);
    }
}
var tipoDato;
(function (tipoDato) {
    tipoDato[tipoDato["CADENA"] = 0] = "CADENA";
    tipoDato[tipoDato["OBJETO"] = 1] = "OBJETO";
    tipoDato[tipoDato["ENTERO"] = 2] = "ENTERO";
    tipoDato[tipoDato["DECIMAL"] = 3] = "DECIMAL";
    tipoDato[tipoDato["BOOLEANO"] = 4] = "BOOLEANO";
    tipoDato[tipoDato["CARACTER"] = 5] = "CARACTER";
    tipoDato[tipoDato["SELECT"] = 6] = "SELECT";
    tipoDato[tipoDato["ATRIBUTO"] = 7] = "ATRIBUTO";
})(tipoDato || (tipoDato = {}));


/***/ }),

/***/ "I37V":
/*!************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Reportes/reporteOp.ts ***!
  \************************************************************/
/*! exports provided: reporteOp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reporteOp", function() { return reporteOp; });
class reporteOp {
    constructor(tipo, regla, eliminado, agregado, linea, columna) {
        this.eliminado = eliminado;
        this.Regla = regla;
        this.Tipo_Optimizacion = tipo;
        this.linea = linea;
        this.columna = columna;
        this.agregado = agregado;
    }
    getTipoOptimizacion() {
        return this.Tipo_Optimizacion;
    }
    getRegla() {
        return this.Regla;
    }
    getEliminado() {
        return this.eliminado;
    }
    getAgregado() {
        return this.agregado;
    }
    getLinea() {
        return this.linea;
    }
    getColumna() {
        return this.columna;
    }
    setLinea(linea) {
        this.linea = linea;
    }
    setColumna(col) {
        this.columna = col;
    }
}


/***/ }),

/***/ "JDzO":
/*!************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Declaracion.ts ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Declaracion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Llamada__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Llamada */ "MuKW");




class Declaracion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, expresion, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
        this.Tipo = expresion;
    }
    interpretar(arbol, tabla, tablaxml) {
        var auxTipo;
        if (this.Tipo === "decimal") {
            auxTipo = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].DECIMAL);
        }
        else if (this.Tipo === "integer") {
            auxTipo = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].ENTERO);
        }
        else if (this.Tipo === "float") {
            auxTipo = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].DECIMAL);
        }
        else if (this.Tipo === "char") {
            auxTipo = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CARACTER);
        }
        else if (this.Tipo === "boolean") {
            auxTipo = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].BOOLEANO);
        }
        var simbolo = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__["default"](auxTipo, this.identificador, this.fila.toString(), this.columna.toString(), _Llamada__WEBPACK_IMPORTED_MODULE_3__["default"].prototype.identificador, "");
        tabla.setVariable(simbolo);
        return this.identificador;
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "KeVs":
/*!********************************************************************************!*\
  !*** ./src/app/paginas/reporte-optimizacion/reporte-optimizacion.component.ts ***!
  \********************************************************************************/
/*! exports provided: ReporteOptimizacionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReporteOptimizacionComponent", function() { return ReporteOptimizacionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/table */ "+0xr");


function ReporteOptimizacionComponent_th_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " TIPO OPTIMIZACION ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r14 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r14.Tipo_Optimizacion, " ");
} }
function ReporteOptimizacionComponent_th_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " REGLA ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r15 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r15.Regla, " ");
} }
function ReporteOptimizacionComponent_th_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " CODIGO ELIMINADO ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r16 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r16.eliminado, " ");
} }
function ReporteOptimizacionComponent_th_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " CODIGO AGREGADO ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r17 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r17.agregado, " ");
} }
function ReporteOptimizacionComponent_th_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " LINEA ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r18 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r18.linea, " ");
} }
function ReporteOptimizacionComponent_th_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " COLUMNA ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function ReporteOptimizacionComponent_td_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r19 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r19.columna, " ");
} }
function ReporteOptimizacionComponent_tr_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 14);
} }
function ReporteOptimizacionComponent_tr_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 15);
} }
class ReporteOptimizacionComponent {
    constructor() {
        this.displayedColumns = [
            'TIPO OPTIMIZACION',
            'REGLA',
            'CODIGO ELIMINADO',
            'CODIGO AGREGADO',
            'LINEA',
            'COLUMNA'
        ];
        this.dataSource = '';
    }
    ngOnInit() {
        let info = window.localStorage.getItem('optimo');
        let otro = JSON.parse(info);
        this.dataSource = otro;
    }
}
ReporteOptimizacionComponent.ɵfac = function ReporteOptimizacionComponent_Factory(t) { return new (t || ReporteOptimizacionComponent)(); };
ReporteOptimizacionComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ReporteOptimizacionComponent, selectors: [["app-reporte-optimizacion"]], decls: 24, vars: 3, consts: [[1, "tabla"], ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"], ["matColumnDef", "TIPO OPTIMIZACION"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "REGLA"], ["matColumnDef", "CODIGO ELIMINADO"], ["matColumnDef", "CODIGO AGREGADO"], ["matColumnDef", "LINEA"], ["matColumnDef", "COLUMNA"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]], template: function ReporteOptimizacionComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "REPORTE DE OPTIMIZACION");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "table", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](4, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, ReporteOptimizacionComponent_th_5_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ReporteOptimizacionComponent_td_6_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](7, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ReporteOptimizacionComponent_th_8_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, ReporteOptimizacionComponent_td_9_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](10, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ReporteOptimizacionComponent_th_11_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ReporteOptimizacionComponent_td_12_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](13, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, ReporteOptimizacionComponent_th_14_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ReporteOptimizacionComponent_td_15_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](16, 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, ReporteOptimizacionComponent_th_17_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, ReporteOptimizacionComponent_td_18_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](19, 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, ReporteOptimizacionComponent_th_20_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, ReporteOptimizacionComponent_td_21_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, ReporteOptimizacionComponent_tr_22_Template, 1, 0, "tr", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, ReporteOptimizacionComponent_tr_23_Template, 1, 0, "tr", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);
    } }, directives: [_angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRow"]], styles: ["table[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    width: 98%;\r\n    margin-top: 1%;\r\n    margin-bottom: 1%;\r\n    margin-left: 1%;\r\n    background-color: #0c6b7c;\r\n  }\r\n  h1[_ngcontent-%COMP%] {\r\n    margin-left: 35%;\r\n    margin-top: 5%;\r\n    margin-bottom: 5%;\r\n    font-size: 50px;\r\n    font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\r\n    background-color: transparent;\r\n  }\r\n  .tabla[_ngcontent-%COMP%] {\r\n    border: 2px solid #565658;\r\n    margin: auto;\r\n    width: 90%;\r\n    height: auto;\r\n    overflow: hidden;\r\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG9ydGUtb3B0aW1pemFjaW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHlCQUF5QjtFQUMzQjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHdFQUF3RTtJQUN4RSw2QkFBNkI7RUFDL0I7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoicmVwb3J0ZS1vcHRpbWl6YWNpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW4tdG9wOiAxJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDElO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDElO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBjNmI3YztcclxuICB9XHJcbiAgaDEge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDM1JTtcclxuICAgIG1hcmdpbi10b3A6IDUlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNSU7XHJcbiAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICBmb250LWZhbWlseTogXCJGcmFua2xpbiBHb3RoaWMgTWVkaXVtXCIsIFwiQXJpYWwgTmFycm93XCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIC50YWJsYSB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjNTY1NjU4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfSJdfQ== */"] });


/***/ }),

/***/ "KjsP":
/*!***************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Funcion.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Funcion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Reportes/reporteOp */ "I37V");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Etiqueta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Etiqueta */ "YFaA");
/* harmony import */ var _SaltoIncondicional__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SaltoIncondicional */ "BKsa");





class Funcion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
        this.instrucciones = expresion;
    }
    interpretar(arbol, tabla) {
        // void main (){ INSTRUCCIONES Y POR ULTIMO AGREGAR CADENA "}" ACA SE HARA LA MAGIA
        let cadena = "";
        cadena += this.identificador + "\n";
        let simbolo;
        let saltoIncondicional = "";
        let cadenaTemporal = "";
        if (this.instrucciones != null) {
            for (var ins of this.instrucciones) {
                var r = ins.interpretar(arbol, tabla);
                if (r instanceof _SaltoIncondicional__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                    if (saltoIncondicional === "") {
                        cadena += `goto ${r.identificador.toUpperCase()}; \n`;
                        cadenaTemporal = cadena;
                        saltoIncondicional = r.identificador.toUpperCase();
                    }
                    else {
                        cadena += `goto ${r.identificador.toUpperCase()}; \n`;
                    }
                }
                else if (r instanceof _Etiqueta__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                    if (r.identificador.toUpperCase() === saltoIncondicional) {
                        saltoIncondicional = "";
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_1__["reporteOp"]("Eliminacion de codigo muerto", "Regla 1", cadena.replace(cadenaTemporal, ''), r.identificador.toUpperCase(), this.fila + "", this.columna.toString());
                        cadena = `${cadenaTemporal}${r.identificador.toUpperCase()}:\n`;
                        cadenaTemporal = "";
                        arbol.setReporte(report);
                    }
                    else {
                        cadena += `${r.identificador.toUpperCase()}:\n`;
                    }
                }
                else {
                    cadena += r + "\n";
                }
            }
        }
        return cadena + "}\n";
    }
}


/***/ }),

/***/ "KyfK":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Funciones/Number.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Number; });
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Tipo */ "QX8J");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion */ "xBmO");


class Number extends src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(expresion, linea, columna) {
        super(new src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].ENTERO), linea, columna);
        this.expresion = expresion;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion instanceof src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"]) {
            console.log("entre");
            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);
            var resp = hola.toString();
            var c1 = arbol.getContadort();
            arbol.codigo3d.push("//***Print Number****");
            arbol.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
            arbol.codigo3d.push("$t2=" + resp + ";");
            arbol.codigo3d.push("NumberToString();");
            arbol.codigo3d.push("$t0=hp;");
            arbol.codigo3d.push("$t1=-1;");
            arbol.codigo3d.push("guardarString();");
            arbol.codigo3d.push("$t0= $t" + c1 + ";");
            arbol.codigo3d.push(`imprimirString();`);
            arbol.codigo3d.push(`printf("%c",10);`);
            return resp;
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "L5jn":
/*!**********************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/GrammXQuery.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var GrammXQuery = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [2, 14], $V1 = [1, 17], $V2 = [1, 25], $V3 = [1, 24], $V4 = [1, 31], $V5 = [1, 23], $V6 = [1, 18], $V7 = [1, 33], $V8 = [1, 32], $V9 = [1, 13], $Va = [1, 12], $Vb = [1, 14], $Vc = [1, 15], $Vd = [1, 16], $Ve = [1, 28], $Vf = [1, 26], $Vg = [1, 29], $Vh = [5, 9, 11, 12, 49, 51, 68, 71, 77, 81, 82, 83, 84, 85, 91, 96, 97], $Vi = [1, 36], $Vj = [5, 7, 9, 11, 12, 49, 51, 68, 71, 77, 81, 82, 83, 84, 85, 91, 96, 97], $Vk = [1, 37], $Vl = [5, 7, 9, 11, 12, 14, 38, 49, 51, 68, 71, 77, 79, 81, 82, 83, 84, 85, 91, 96, 97], $Vm = [1, 56], $Vn = [1, 64], $Vo = [1, 63], $Vp = [1, 55], $Vq = [1, 45], $Vr = [1, 46], $Vs = [1, 47], $Vt = [1, 48], $Vu = [1, 49], $Vv = [1, 50], $Vw = [1, 51], $Vx = [1, 52], $Vy = [1, 53], $Vz = [1, 54], $VA = [1, 57], $VB = [1, 58], $VC = [1, 59], $VD = [1, 60], $VE = [1, 61], $VF = [1, 62], $VG = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 54, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], $VH = [2, 121], $VI = [2, 123], $VJ = [1, 68], $VK = [2, 125], $VL = [1, 69], $VM = [1, 106], $VN = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 58, 60, 68, 71, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97], $VO = [1, 118], $VP = [1, 127], $VQ = [1, 123], $VR = [1, 125], $VS = [1, 121], $VT = [1, 126], $VU = [1, 128], $VV = [53, 58, 60, 71], $VW = [1, 134], $VX = [1, 136], $VY = [1, 135], $VZ = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], $V_ = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], $V$ = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 103, 104, 109, 110], $V01 = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], $V11 = [1, 154], $V21 = [1, 157], $V31 = [1, 156], $V41 = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 96, 97], $V51 = [9, 11, 12, 51, 71, 91, 94, 96, 97], $V61 = [2, 77], $V71 = [2, 76], $V81 = [1, 172], $V91 = [1, 173], $Va1 = [5, 7, 14, 26, 38, 49, 52, 53, 55, 60, 68, 72, 77, 79, 81, 82, 83, 84, 85], $Vb1 = [1, 189], $Vc1 = [5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 58, 60, 68, 71, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 96, 97], $Vd1 = [14, 54, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], $Ve1 = [14, 26], $Vf1 = [5, 7, 9, 11, 12, 14, 38, 49, 51, 53, 58, 60, 68, 71, 77, 79, 81, 82, 83, 84, 85, 91, 96, 97], $Vg1 = [1, 242], $Vh1 = [1, 246], $Vi1 = [2, 37], $Vj1 = [1, 247], $Vk1 = [1, 248], $Vl1 = [1, 249], $Vm1 = [1, 250], $Vn1 = [1, 251], $Vo1 = [1, 260], $Vp1 = [14, 26, 36, 39], $Vq1 = [9, 11, 12, 38, 49, 51, 68, 71, 77, 91, 96, 97], $Vr1 = [14, 26, 36], $Vs1 = [2, 25], $Vt1 = [1, 292];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "INICIO": 3, "FUNCTION": 4, "EOF": 5, "METODOS": 6, "RDECLARE": 7, "RFUNCTION": 8, "LOCAL": 9, "DOSPUNTOS": 10, "IDENTIFICADOR": 11, "PARIZQ": 12, "PARAMETROS": 13, "PARDER": 14, "TIPO": 15, "BLOQUE": 16, "PTCOMA": 17, "F_SUBS": 18, "F_NUMBER": 19, "F_UPPER": 20, "F_LOWER": 21, "F_STRING": 22, "LLAMADAFUNCION": 23, "LET": 24, "INSTRUCCION": 25, "COMA": 26, "DECLARACIONES": 27, "VARIABLE": 28, "AS": 29, "XS": 30, "OPTIONALQUESTION": 31, "L_PARAMETROSINTERNOS": 32, "TIPOPARAMETRO": 33, "L_CONSULTAS": 34, "EXPRESION": 35, "LLAVEIZQ": 36, "INSTRUCCIONES": 37, "LLAVEDER": 38, "QUESTION": 39, "INT": 40, "FLOAT": 41, "CHAR": 42, "DOUBLE": 43, "BOOLEAN": 44, "DOUBLER": 45, "FORSIMPLE": 46, "FORTO": 47, "L_IF": 48, "RFOR": 49, "RIN": 50, "ENTERO": 51, "RTO": 52, "RRETURN": 53, "IGUAL": 54, "AND": 55, "FORCOMPUESTO": 56, "CONDICIONCOMPUESTA": 57, "RWHERE": 58, "CONDICION": 59, "RORDERBY": 60, "RETORNO": 61, "CONDICIONSIMPLE": 62, "CONJUNCION": 63, "UNION": 64, "L_IN": 65, "L_VARIABLES": 66, "RAT": 67, "RLET": 68, "LETDOSPUNTOS": 69, "CONECTOR": 70, "DOLAR": 71, "OR": 72, "PUNTO": 73, "FUNCIONES": 74, "IF": 75, "ASIGNACION": 76, "RIF": 77, "RTHEN": 78, "RELSE": 79, "RDATA": 80, "RNUMBER": 81, "RSUBS": 82, "RUPPER": 83, "RLOWER": 84, "RSTRING": 85, "CONSULTA": 86, "BARRA": 87, "OPCIONESCONSULT": 88, "PREDICADO": 89, "DOBLEBARRA": 90, "ARROBA": 91, "DOBLEPUNTO": 92, "ASTERISCO": 93, "CORIZQ": 94, "CORDER": 95, "CADENA": 96, "RLAST": 97, "OPERACIONESF": 98, "MAS": 99, "MENOS": 100, "RDIV": 101, "MODULO": 102, "IGUALACION": 103, "DIFERENCIACION": 104, "MENORIGUAL": 105, "MAYORIGUAL": 106, "MENORQUE": 107, "MAYORQUE": 108, "REQUALS": 109, "RNOTEQUALS": 110, "RMENORIGUAL": 111, "RMAYORIGUAL": 112, "RMENORQUE": 113, "RMAYORQUE": 114, "MULTIPLICACION": 115, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "RDECLARE", 8: "RFUNCTION", 9: "LOCAL", 10: "DOSPUNTOS", 11: "IDENTIFICADOR", 12: "PARIZQ", 14: "PARDER", 17: "PTCOMA", 26: "COMA", 29: "AS", 30: "XS", 36: "LLAVEIZQ", 38: "LLAVEDER", 39: "QUESTION", 40: "INT", 41: "FLOAT", 42: "CHAR", 43: "DOUBLE", 44: "BOOLEAN", 45: "DOUBLER", 49: "RFOR", 50: "RIN", 51: "ENTERO", 52: "RTO", 53: "RRETURN", 54: "IGUAL", 55: "AND", 58: "RWHERE", 60: "RORDERBY", 67: "RAT", 68: "RLET", 69: "LETDOSPUNTOS", 71: "DOLAR", 72: "OR", 73: "PUNTO", 77: "RIF", 78: "RTHEN", 79: "RELSE", 80: "RDATA", 81: "RNUMBER", 82: "RSUBS", 83: "RUPPER", 84: "RLOWER", 85: "RSTRING", 87: "BARRA", 90: "DOBLEBARRA", 91: "ARROBA", 92: "DOBLEPUNTO", 93: "ASTERISCO", 94: "CORIZQ", 95: "CORDER", 96: "CADENA", 97: "RLAST", 99: "MAS", 100: "MENOS", 101: "RDIV", 102: "MODULO", 103: "IGUALACION", 104: "DIFERENCIACION", 105: "MENORIGUAL", 106: "MAYORIGUAL", 107: "MENORQUE", 108: "MAYORQUE", 109: "REQUALS", 110: "RNOTEQUALS", 111: "RMENORIGUAL", 112: "RMAYORIGUAL", 113: "RMENORQUE", 114: "RMAYORQUE", 115: "MULTIPLICACION" },
        productions_: [0, [3, 2], [4, 2], [4, 1], [6, 12], [6, 11], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 0], [13, 3], [13, 1], [27, 6], [32, 3], [32, 1], [33, 1], [33, 1], [16, 3], [16, 2], [31, 1], [31, 0], [15, 5], [15, 5], [15, 5], [15, 5], [15, 5], [15, 5], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 0], [37, 2], [37, 1], [25, 1], [25, 1], [25, 1], [25, 1], [25, 1], [25, 1], [47, 10], [47, 24], [56, 8], [56, 6], [56, 6], [56, 4], [46, 8], [46, 6], [46, 6], [46, 4], [57, 3], [57, 1], [57, 0], [62, 2], [62, 1], [64, 3], [64, 2], [63, 2], [66, 3], [66, 1], [24, 6], [24, 4], [65, 1], [65, 6], [65, 5], [65, 1], [65, 1], [23, 6], [23, 5], [28, 2], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [61, 1], [61, 1], [61, 1], [61, 1], [61, 1], [48, 8], [48, 15], [48, 17], [75, 8], [75, 9], [74, 4], [19, 4], [19, 5], [18, 6], [18, 7], [20, 4], [20, 5], [21, 4], [21, 5], [22, 4], [22, 5], [76, 3], [76, 5], [59, 2], [59, 3], [59, 1], [34, 2], [34, 1], [86, 3], [86, 2], [86, 2], [86, 2], [86, 1], [88, 1], [88, 1], [88, 1], [88, 1], [88, 1], [88, 1], [89, 3], [35, 1], [35, 3], [35, 1], [35, 1], [35, 1], [35, 2], [35, 2], [35, 3], [35, 1], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [35, 3], [98, 3], [98, 3], [98, 1]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                case 38:
                case 59:
                case 107:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 3:
                case 16:
                case 19:
                case 39:
                case 60:
                case 65:
                case 108:
                    this.$ = [$$[$0]];
                    break;
                case 4:
                    this.$ = new funciones.default($$[$0 - 6], $$[$0 - 4], $$[$0 - 2], $$[$0 - 1], _$[$0 - 11].first_line, _$[$0 - 11].first_column);
                    break;
                case 5:
                    this.$ = new funciones.default($$[$0 - 5], null, $$[$0 - 2], $$[$0 - 1], _$[$0 - 10].first_line, _$[$0 - 10].first_column);
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 20:
                case 21:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 40:
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 57:
                case 68:
                case 71:
                case 72:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 106:
                case 113:
                case 114:
                case 115:
                case 116:
                case 117:
                case 118:
                case 119:
                case 129:
                case 152:
                    this.$ = $$[$0];
                    break;
                case 14:
                    this.$ = "";
                    break;
                case 15:
                case 18:
                case 64:
                    $$[$0 - 2].push($$[$0]);
                    this.$ = $$[$0 - 2];
                    break;
                case 17:
                    this.$ = new declaracion.default($$[$0 - 5], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);
                    break;
                case 22:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 62:
                case 120:
                case 122:
                    this.$ = $$[$0 - 1];
                    break;
                case 23:
                    this.$ = null;
                    break;
                case 24:
                    $$[$0];
                    break;
                case 46:
                    this.$ = new thefortosimple.default($$[$0 - 8], $$[$0], $$[$0 - 5], $$[$0 - 3], _$[$0 - 9].first_line, _$[$0 - 9].first_column);
                    break;
                case 47:
                    this.$ = new thefortocompuesto.default($$[$0 - 22], $$[$0 - 14], $$[$0 - 19], $$[$0 - 17], $$[$0 - 11], $$[$0 - 9], _$[$0 - 23].first_line, _$[$0 - 23].first_column);
                    break;
                case 48:
                    this.$ = $$[$0 - 7] + $$[$0 - 6] + $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
                case 49:
                case 50:
                case 69:
                    this.$ = $$[$0 - 5] + $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
                case 51:
                case 91:
                    this.$ = $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
                case 52:
                    this.$ = new theforsimple.default($$[$0 - 6], $$[$0], _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0 - 4], $$[$0 - 2]);
                    break;
                case 53:
                    this.$ = new theforsimple.default($$[$0 - 4], $$[$0], _$[$0 - 5].first_line, _$[$0 - 5].first_column, $$[$0 - 2], null);
                    break;
                case 54:
                    this.$ = new theforsimple.default($$[$0 - 4], $$[$0], _$[$0 - 5].first_line, _$[$0 - 5].first_column, null, $$[$0 - 2]);
                    break;
                case 55:
                    this.$ = new theforsimple.default($$[$0 - 2], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column, null, null);
                    break;
                case 56:
                    this.$ = $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
                case 61:
                    this.$ = new condicionsimple.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 63:
                case 75:
                case 111:
                case 112:
                    this.$ = $$[$0 - 1] + $$[$0];
                    break;
                case 66:
                    this.$ = new thelet.default($$[$0 - 4], $$[$0 - 2], $$[$0], _$[$0 - 5].first_line, _$[$0 - 5].first_column);
                    break;
                case 67:
                    this.$ = new thelet.default($$[$0 - 2], $$[$0], null, _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 70:
                    this.$ = $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
                case 73:
                    this.$ = new llamada.default($$[$0 - 3], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);
                    break;
                case 74:
                    this.$ = new llamada.default($$[$0 - 2], null, _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 86:
                    this.$ = new thefunctionif.default($$[$0 - 5], $$[$0 - 2], _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0], null);
                    break;
                case 87:
                    this.$ = new theifAnidado.default($$[$0 - 12], $$[$0 - 9], $$[$0 - 5], $$[$0 - 2], $$[$0], _$[$0 - 14].first_line, _$[$0 - 14].first_column);
                    break;
                case 88:
                    this.$ = new theifAnidado.default($$[$0 - 14], $$[$0 - 11], $$[$0 - 7], $$[$0 - 4], $$[$0 - 1], _$[$0 - 16].first_line, _$[$0 - 16].first_column);
                    break;
                case 89:
                    this.$ = new theif.default($$[$0 - 5], _$[$0 - 7].first_line, _$[$0 - 7].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 90:
                    this.$ = new theif.default($$[$0 - 6], _$[$0 - 8].first_line, _$[$0 - 8].first_column, $$[$0 - 3], null);
                    break;
                case 92:
                    this.$ = new number.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 93:
                    this.$ = new number.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 94:
                    this.$ = new subs.default($$[$0 - 3], $$[$0 - 1], _$[$0 - 5].first_line, _$[$0 - 5].first_column);
                    break;
                case 95:
                    this.$ = new subs.default($$[$0 - 4], $$[$0 - 2], _$[$0 - 6].first_line, _$[$0 - 6].first_column);
                    break;
                case 96:
                    this.$ = new upper.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 97:
                    this.$ = new upper.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 98:
                    this.$ = new lower.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 99:
                    this.$ = new lower.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 100:
                    this.$ = new string.default($$[$0 - 1], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
                case 101:
                    this.$ = new string.default($$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 102:
                case 141:
                    this.$ = new asignacion.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 103:
                    this.$ = new asignacion.default($$[$0 - 4], $$[$0 - 2], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 104:
                    this.$ = new condicionsimple.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 105:
                    this.$ = new condicion.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 109:
                    this.$ = new barrasnodo.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1]);
                    break;
                case 110:
                    this.$ = new barrasnodo.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column, null);
                    break;
                case 121:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 123:
                    this.$ = new identificador.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 124:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 125:
                    this.$ = new variable.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 126:
                    this.$ = new atributosexpresion.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 127:
                    this.$ = new identificadorpredicado.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 128:
                    this.$ = $$[$0 - 2] + "()";
                    break;
                case 130:
                    this.$ = new aritmetica.default(aritmetica.Operadores.SUMA, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 131:
                    this.$ = new aritmetica.default(aritmetica.Operadores.RESTA, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 132:
                    this.$ = new aritmetica.default(aritmetica.Operadores.DIVISION, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 133:
                    this.$ = new aritmetica.default(aritmetica.Operadores.MODULADOR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 134:
                case 142:
                    this.$ = new relacional.default(relacional.Relacionales.IGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 135:
                case 143:
                    this.$ = new relacional.default(relacional.Relacionales.DIFERENTE, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 136:
                case 144:
                    this.$ = new relacional.default(relacional.Relacionales.MENORIGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 137:
                case 145:
                    this.$ = new relacional.default(relacional.Relacionales.MAYORIGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 138:
                case 146:
                    this.$ = new relacional.default(relacional.Relacionales.MENORQUE, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 139:
                case 147:
                    this.$ = new relacional.default(relacional.Relacionales.MAYORQUE, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 140:
                    this.$ = new aritmetica.default(aritmetica.Operadores.MULTIPLICACION, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 148:
                    this.$ = new logica.default(logica.Logicas.OR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 149:
                    this.$ = new logica.default(logica.Logicas.AND, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 150:
                case 151:
                    this.$ = $$[$0 - 2] + $$[$0 - 1] + $$[$0];
                    break;
            }
        },
        table: [o([5, 7], $V0, { 3: 1, 4: 2, 6: 3, 18: 4, 19: 5, 20: 6, 21: 7, 22: 8, 23: 9, 24: 10, 25: 11, 35: 19, 46: 20, 47: 21, 48: 22, 28: 27, 98: 30, 9: $V1, 11: $V2, 12: $V3, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 81: $V9, 82: $Va, 83: $Vb, 84: $Vc, 85: $Vd, 91: $Ve, 96: $Vf, 97: $Vg }), { 1: [3] }, { 5: [1, 34], 6: 35, 7: $V0, 9: $V1, 11: $V2, 12: $V3, 18: 4, 19: 5, 20: 6, 21: 7, 22: 8, 23: 9, 24: 10, 25: 11, 28: 27, 35: 19, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 81: $V9, 82: $Va, 83: $Vb, 84: $Vc, 85: $Vd, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vh, [2, 3], { 7: $Vi }), o($Vj, [2, 6]), o($Vj, [2, 7]), o($Vj, [2, 8]), o($Vj, [2, 9]), o($Vj, [2, 10]), o([5, 7, 9, 11, 12, 49, 51, 54, 55, 68, 71, 72, 77, 81, 82, 83, 84, 85, 91, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], [2, 11], { 99: $Vk }), o($Vj, [2, 12]), o($Vj, [2, 13]), { 12: [1, 38] }, { 12: [1, 39] }, { 12: [1, 40] }, { 12: [1, 41] }, { 12: [1, 42] }, { 10: [1, 43] }, { 28: 44, 71: $V7 }, o($Vl, [2, 40], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($Vl, [2, 41]), o($Vl, [2, 42]), o($Vl, [2, 45]), o($VG, $VH), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 65, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($VG, $VI, { 89: 67, 94: $VJ }), o($VG, [2, 124]), o($VG, $VK, { 115: $VL }), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 70, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 12: [1, 71] }, o($VG, [2, 129]), { 28: 73, 62: 72, 64: 74, 71: $V7 }, { 12: [1, 75] }, { 11: [1, 76] }, { 1: [2, 1] }, o($Vh, [2, 2], { 7: $Vi }), { 8: [1, 77] }, { 9: $V1, 23: 78 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 79, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 80, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 81, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 82, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 83, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 11: [1, 84] }, { 69: [1, 85] }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 86, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 87, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 88, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 89, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 90, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 91, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 92, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 93, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 94, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 95, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 96, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 97, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 98, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 99, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 100, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 101, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 102, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 103, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 104, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 105, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 14: $VM, 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, o([5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 54, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], [2, 152], { 99: $Vk }), o($VG, [2, 127]), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 107, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 23: 108 }, o($VN, [2, 126], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), { 14: [1, 109] }, { 28: 114, 53: [1, 112], 58: [1, 110], 60: [1, 111], 64: 113, 71: $V7 }, { 9: $V1, 11: $V2, 12: $VO, 23: 119, 28: 27, 34: 120, 35: 117, 50: [1, 115], 51: $V5, 65: 116, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, o($VV, [2, 60]), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 129, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o([5, 7, 9, 11, 12, 14, 26, 29, 38, 49, 50, 51, 52, 53, 54, 55, 58, 60, 68, 69, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [2, 75]), { 9: [1, 130] }, o($VG, [2, 151]), { 26: $VW, 52: $VX, 54: $Vm, 55: [1, 133], 70: 131, 72: [1, 132], 73: $VY, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 14: [1, 137], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 14: [1, 138], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 14: [1, 139], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 14: [1, 140], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 12: [1, 141] }, { 9: $V1, 11: $V2, 12: $VO, 23: 119, 28: 27, 34: 120, 35: 117, 50: [1, 143], 51: $V5, 65: 142, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, o($VZ, [2, 130], { 54: $Vm, 93: $Vp, 101: $Vs, 102: $Vt, 114: $VF }), o($VZ, [2, 131], { 54: $Vm, 93: $Vp, 101: $Vs, 102: $Vt, 114: $VF }), o($V_, [2, 132], { 54: $Vm, 93: $Vp, 114: $VF }), o($V_, [2, 133], { 54: $Vm, 93: $Vp, 114: $VF }), o($V$, [2, 134], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V$, [2, 135], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V01, [2, 136], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($V01, [2, 137], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($V01, [2, 138], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($V01, [2, 139], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($VN, [2, 140], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($VN, [2, 141], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V$, [2, 142], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V$, [2, 143], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V01, [2, 144], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($V01, [2, 145], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($V01, [2, 146], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 114: $VF }), o($VN, [2, 147], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o([5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97], [2, 148], { 54: $Vm, 55: $Vn, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o([5, 7, 9, 11, 12, 14, 26, 38, 49, 51, 52, 53, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97], [2, 149], { 54: $Vm, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($VG, [2, 122]), { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 95: [1, 144], 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, o($VG, [2, 150]), o($VG, [2, 128]), { 28: 146, 59: 145, 71: $V7 }, { 28: 146, 59: 147, 71: $V7 }, { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 148, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($VV, [2, 59]), { 9: $V1, 11: $V2, 12: $VO, 23: 119, 28: 27, 34: 120, 35: 117, 50: [1, 158], 51: $V5, 65: 116, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: [1, 159], 23: 66, 28: 27, 34: 160, 35: 161, 51: $V5, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, o($VV, [2, 62]), o([5, 7, 9, 11, 12, 14, 38, 49, 51, 53, 58, 60, 68, 71, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 96, 97], [2, 68], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 65, 51: [1, 162], 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o([5, 7, 9, 11, 12, 14, 38, 49, 51, 53, 54, 55, 58, 60, 68, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], [2, 71], { 99: $Vk }), o([5, 7, 14, 38, 49, 53, 58, 60, 68, 77, 79, 81, 82, 83, 84, 85], [2, 72], { 28: 27, 98: 30, 23: 66, 88: 124, 35: 161, 86: 163, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg }), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 70, 51: $V5, 71: $V7, 91: $Ve, 94: [2, 116], 96: $Vf, 97: $Vg, 98: 30 }, o($V41, [2, 108]), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 165, 51: $V5, 71: $V7, 87: [1, 164], 91: $Ve, 94: [2, 114], 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 166, 51: $V5, 71: $V7, 89: 167, 91: $Ve, 94: $VJ, 96: $Vf, 97: $Vg, 98: 30 }, o($V51, [2, 115]), o($V51, [2, 117]), o($V51, [2, 118]), o($V51, [2, 119]), { 14: [1, 168], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 10: [1, 169] }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 170, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V61, 23: 66, 28: 27, 35: 104, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V71, 23: 66, 28: 27, 35: 105, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vj, [2, 78]), o($Vj, [2, 79]), o($Vj, [2, 80]), o($Vj, [2, 92], { 70: 171, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($Vj, [2, 96], { 70: 174, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($Vj, [2, 98], { 70: 175, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($Vj, [2, 100], { 70: 176, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), { 9: $V1, 11: $V2, 12: $V3, 14: [1, 178], 23: 66, 28: 27, 32: 177, 33: 179, 34: 180, 35: 181, 51: $V5, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, o($Vl, [2, 67], { 53: [1, 182] }), { 12: [1, 183] }, o($VG, [2, 120]), { 26: $VW, 52: $VX, 53: [1, 185], 55: $V81, 60: [1, 184], 70: 186, 72: $V91, 73: $VY }, o($Va1, [2, 106], { 28: 27, 98: 30, 23: 66, 86: 122, 88: 124, 35: 161, 34: 187, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg }), { 26: $VW, 52: $VX, 53: [1, 188], 55: $V81, 70: 186, 72: $V91, 73: $VY }, o($Vl, [2, 55]), o($Vl, [2, 81], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($Vl, [2, 82]), o($Vl, [2, 83]), o($Vl, [2, 84]), o($Vl, [2, 85], { 70: 186, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o([5, 7, 9, 11, 12, 14, 38, 49, 51, 55, 68, 71, 72, 77, 79, 81, 82, 83, 84, 85, 91, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], $VI, { 89: 67, 54: $Vb1, 94: $VJ }), o([5, 7, 14, 26, 38, 49, 52, 54, 55, 68, 72, 77, 79, 81, 82, 83, 84, 85, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], $VK, { 28: 27, 98: 30, 23: 66, 86: 122, 88: 124, 35: 161, 34: 187, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 115: $VL }), { 12: [1, 190] }, { 12: [1, 191] }, { 9: $V1, 11: $V2, 12: [1, 192], 23: 66, 28: 27, 34: 160, 35: 161, 51: $V5, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 65, 51: [1, 193], 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o([53, 58, 60], [2, 61], { 28: 27, 98: 30, 23: 66, 88: 124, 35: 161, 86: 163, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg }), o($Vc1, [2, 113], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($Vd1, $VH, { 70: 194, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($V41, [2, 107]), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 195, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vc1, [2, 110], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($Vc1, [2, 111], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), o($V41, [2, 112]), { 78: [1, 196] }, { 11: [1, 197] }, { 14: [1, 198], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, o($Vj, [2, 93]), o($Vj, $V71), o($Vj, $V61), o($Vj, [2, 97]), o($Vj, [2, 99]), o($Vj, [2, 101]), { 14: [1, 199], 26: [1, 200] }, o($VG, [2, 74]), o($Ve1, [2, 19]), o($Ve1, [2, 20], { 28: 27, 98: 30, 23: 66, 88: 124, 35: 161, 86: 163, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg }), o([9, 11, 12, 14, 26, 51, 71, 73, 87, 90, 91, 92, 96, 97], [2, 21], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 201, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 51: [1, 202] }, { 28: 146, 59: 203, 71: $V7 }, { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 204, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 28: 146, 59: 205, 71: $V7 }, o($Va1, [2, 104], { 28: 27, 98: 30, 23: 66, 88: 124, 35: 161, 86: 163, 9: $V1, 11: $V2, 12: $V3, 51: $V5, 71: $V7, 73: $VP, 87: $VQ, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg }), { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 206, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 28: 207, 71: $V7 }, { 28: 146, 59: 208, 71: $V7 }, { 28: 146, 59: 209, 71: $V7 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 65, 51: [1, 210], 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vd1, $VH, { 70: 213, 26: [1, 212], 52: [1, 211], 55: $V81, 72: $V91, 73: $VY }), { 51: [1, 214] }, o($Vc1, [2, 109], { 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }), { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 215, 28: 27, 35: 19, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 12: [1, 218] }, o($Vj, [2, 94], { 70: 219, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($VG, [2, 73]), { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 33: 220, 34: 180, 35: 181, 51: $V5, 71: $V7, 73: $VP, 86: 122, 87: $VQ, 88: 124, 90: $VR, 91: $VS, 92: $VT, 93: $VU, 96: $Vf, 97: $Vg, 98: 30 }, o($Vl, [2, 66]), { 26: $VW, 52: $VX, 55: $V81, 70: 213, 72: $V91, 73: $VY }, { 26: $VW, 52: $VX, 53: [1, 221], 55: $V81, 70: 186, 72: $V91, 73: $VY }, o($Vl, [2, 53]), o([5, 7, 9, 11, 12, 14, 38, 49, 51, 53, 60, 68, 71, 77, 79, 81, 82, 83, 84, 85, 91, 96, 97], [2, 105], { 70: 186, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), o($Vl, [2, 54]), o($Vl, [2, 102], { 70: 222, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), { 14: [1, 223], 26: $VW, 52: $VX, 55: $V81, 70: 186, 72: $V91, 73: $VY }, { 14: [1, 224], 26: $VW, 52: $VX, 55: $V81, 70: 186, 72: $V91, 73: $VY }, o($Vd1, $VH, { 70: 213, 26: $VW, 52: $VX, 55: $V81, 72: $V91, 73: $VY }), { 51: [1, 225] }, { 51: [1, 226] }, { 51: [1, 227] }, { 14: [1, 228] }, { 79: [1, 229] }, o($Vl, [2, 43]), o([5, 7, 9, 11, 12, 14, 38, 49, 51, 54, 55, 68, 71, 72, 77, 79, 81, 82, 83, 84, 85, 91, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], [2, 44], { 99: $Vk }), { 13: 230, 14: [1, 231], 27: 232, 28: 233, 71: $V7 }, o($Vj, [2, 95]), o($Ve1, [2, 18]), { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 234, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 11: [1, 236], 76: 235 }, o($Vl, [2, 91]), { 78: [1, 237] }, { 14: [1, 238] }, { 14: [1, 239] }, { 14: [1, 240] }, o($Vf1, [2, 70]), { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 241, 28: 27, 35: 19, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $Vg1, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 14: [1, 243], 26: [1, 244] }, { 15: 245, 29: $Vh1, 36: $Vi1, 40: $Vj1, 41: $Vk1, 42: $Vl1, 43: $Vm1, 44: $Vn1 }, o($Ve1, [2, 16]), { 29: [1, 252] }, o($Vl, [2, 52]), o($Vl, [2, 103]), { 54: $Vb1 }, { 9: $V1, 11: $V11, 12: $V3, 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 253, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 53: [1, 254] }, { 26: [1, 255] }, o($Vf1, [2, 69]), o($Vl, [2, 86]), { 12: [1, 256] }, { 15: 257, 29: $Vh1, 36: $Vi1, 40: $Vj1, 41: $Vk1, 42: $Vl1, 43: $Vm1, 44: $Vn1 }, { 27: 258, 28: 233, 71: $V7 }, { 16: 259, 36: $Vo1 }, { 30: [1, 261] }, o($Vp1, [2, 32]), o($Vp1, [2, 33]), o($Vp1, [2, 34]), o($Vp1, [2, 35]), o($Vp1, [2, 36]), { 30: [1, 262] }, { 79: [1, 263] }, { 28: 264, 71: $V7 }, { 28: 265, 71: $V7 }, { 9: $V1, 11: $V2, 12: $V3, 23: 66, 28: 27, 35: 266, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 16: 267, 36: $Vo1 }, o($Ve1, [2, 15]), { 17: [1, 268] }, { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 271, 28: 27, 35: 19, 37: 269, 38: [1, 270], 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 10: [1, 272] }, { 10: [1, 273] }, { 9: $V1, 11: $V11, 12: [1, 275], 23: 66, 28: 155, 35: 149, 51: $V5, 59: 153, 61: 274, 71: $V7, 74: 150, 75: 151, 76: 152, 77: $V21, 80: $V31, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vl, [2, 46]), { 50: [1, 276] }, { 14: [1, 277], 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 17: [1, 278] }, o($Vj, [2, 5]), { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 280, 28: 27, 35: 19, 38: [1, 279], 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 17: [2, 23] }, o($Vq1, [2, 39]), { 40: [1, 281], 41: [1, 282], 42: [1, 283], 43: [1, 284], 44: [1, 285], 45: [1, 286] }, o([14, 26, 39], $Vi1, { 15: 287, 29: $Vh1, 40: $Vj1, 41: $Vk1, 42: $Vl1, 43: $Vm1, 44: $Vn1 }), o($Vl, [2, 89]), { 9: $V1, 11: $V2, 12: $V3, 14: [1, 288], 23: 66, 28: 27, 35: 65, 51: $V5, 71: $V7, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 12: [1, 289] }, { 78: [1, 290] }, o($Vj, [2, 4]), { 17: [2, 22] }, o($Vq1, [2, 38]), o($Vr1, $Vs1, { 31: 291, 39: $Vt1 }), o($Vr1, $Vs1, { 31: 293, 39: $Vt1 }), o($Vr1, $Vs1, { 31: 294, 39: $Vt1 }), o($Vr1, $Vs1, { 31: 295, 39: $Vt1 }), o($Vr1, $Vs1, { 31: 296, 39: $Vt1 }), o($Vr1, $Vs1, { 31: 297, 39: $Vt1 }), o($Ve1, $Vs1, { 31: 298, 39: $Vt1 }), o($Vl, [2, 90]), { 51: [1, 299] }, { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 300, 28: 27, 35: 19, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, o($Vp1, [2, 26]), o($Vp1, [2, 24]), o($Vp1, [2, 27]), o($Vp1, [2, 28]), o($Vp1, [2, 29]), o($Vp1, [2, 30]), o($Vp1, [2, 31]), o($Ve1, [2, 17]), { 26: [1, 301] }, { 79: [1, 302] }, { 51: [1, 303] }, { 9: $V1, 11: $V2, 12: [1, 305], 23: 217, 24: 216, 25: 304, 28: 27, 35: 19, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $Vg1, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 14: [1, 306] }, o($Vl, [2, 87]), { 9: $V1, 11: $V2, 12: $V3, 23: 217, 24: 216, 25: 307, 28: 27, 35: 308, 46: 20, 47: 21, 48: 22, 49: $V4, 51: $V5, 68: $V6, 71: $V7, 77: $V8, 91: $Ve, 96: $Vf, 97: $Vg, 98: 30 }, { 53: [1, 309] }, { 14: [1, 310] }, { 14: $VM, 54: $Vm, 55: $Vn, 72: $Vo, 93: $Vp, 99: $Vq, 100: $Vr, 101: $Vs, 102: $Vt, 103: $Vu, 104: $Vv, 105: $Vw, 106: $Vx, 107: $Vy, 108: $Vz, 109: $VA, 110: $VB, 111: $VC, 112: $VD, 113: $VE, 114: $VF }, { 11: [1, 311] }, o($Vl, [2, 88]), { 54: [1, 312] }, { 28: 313, 71: $V7 }, { 55: [1, 314] }, { 11: [1, 315] }, { 54: [1, 316] }, { 28: 317, 71: $V7 }, o($Vl, [2, 47])],
        defaultActions: { 34: [2, 1], 270: [2, 23], 279: [2, 22] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    const thefortosimple = __webpack_require__(/*! ./Instrucciones/ForToSimple */ "wPOe");
    const thefortocompuesto = __webpack_require__(/*! ./Instrucciones/ForToCompuesto */ "99ag");
    const theforsimple = __webpack_require__(/*! ./Instrucciones/ForSimple */ "U3Vy");
    const atributosexpresion = __webpack_require__(/*! ../../XPATH/Analizador/Instrucciones/AtributosSimples */ "6clo");
    const identificadorpredicado = __webpack_require__(/*! ../../XPATH/Analizador/Instrucciones/IdentificadorPredicado */ "svf7");
    const aritmetica = __webpack_require__(/*! ./Expresiones/Aritmetica */ "rLpq");
    const logica = __webpack_require__(/*! ./Expresiones/Logica */ "l2Mm");
    const relacional = __webpack_require__(/*! ./Expresiones/Relacional */ "N49t");
    const barrasnodo = __webpack_require__(/*! ./Instrucciones/BarrasNodo */ "+d5a");
    const identificador = __webpack_require__(/*! ./Expresiones/Identificador */ "iNLt");
    const variable = __webpack_require__(/*! ./Expresiones/Variable */ "95dx");
    const nativo = __webpack_require__(/*! ./Expresiones/Nativo */ "CgpK");
    const asignacion = __webpack_require__(/*! ./Instrucciones/Asignacion */ "UoMi");
    const funciones = __webpack_require__(/*! ./Instrucciones/Funciones */ "xl6+");
    const declaracion = __webpack_require__(/*! ./Instrucciones/Declaracion */ "JDzO");
    const llamada = __webpack_require__(/*! ./Instrucciones/Llamada */ "MuKW");
    const theif = __webpack_require__(/*! ./Instrucciones/If */ "V62L");
    const thelet = __webpack_require__(/*! ./Instrucciones/Let */ "xsaW");
    const Tipo = __webpack_require__(/*! ./Simbolos/Tipo */ "QX8J");
    const condicionsimple = __webpack_require__(/*! ./Instrucciones/CondicionSimple */ "0xk3");
    const condicion = __webpack_require__(/*! ./Instrucciones/Condicion */ "Lmlt");
    const lower = __webpack_require__(/*! ./Funciones/Lower */ "iW93");
    const number = __webpack_require__(/*! ./Funciones/Number */ "KyfK");
    const string = __webpack_require__(/*! ./Funciones/String */ "7fLb");
    const upper = __webpack_require__(/*! ./Funciones/Upper */ "g+4Y");
    const subs = __webpack_require__(/*! ./Funciones/Substring */ "5qhH");
    const thefunctionif = __webpack_require__(/*! ./Instrucciones/IfFuncion */ "h867");
    const theifAnidado = __webpack_require__(/*! ./Instrucciones/IfFuncionAnidado */ "0FvM");
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-sensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0:
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    case 4:
                        break;
                    case 5:
                        break;
                    case 6:
                        return 29;
                        break;
                    case 7:
                        return 30;
                        break;
                    case 8:
                        return 49;
                        break;
                    case 9:
                        return 68;
                        break;
                    case 10:
                        return 58;
                        break;
                    case 11:
                        return 60;
                        break;
                    case 12:
                        return 53;
                        break;
                    case 13:
                        return 50;
                        break;
                    case 14:
                        return 'RDOC';
                        break;
                    case 15:
                        return 77;
                        break;
                    case 16:
                        return 79;
                        break;
                    case 17:
                        return 78;
                        break;
                    case 18:
                        return 109;
                        break;
                    case 19:
                        return 110;
                        break;
                    case 20:
                        return 113;
                        break;
                    case 21:
                        return 111;
                        break;
                    case 22:
                        return 114;
                        break;
                    case 23:
                        return 112;
                        break;
                    case 24:
                        return 67;
                        break;
                    case 25:
                        return 52;
                        break;
                    case 26:
                        return 7;
                        break;
                    case 27:
                        return 8;
                        break;
                    case 28:
                        return 101;
                        break;
                    case 29:
                        return 72;
                        break;
                    case 30:
                        return 55;
                        break;
                    case 31:
                        return 102;
                        break;
                    case 32:
                        return 'RNODO';
                        break;
                    case 33:
                        return 'RTEXT';
                        break;
                    case 34:
                        return 80;
                        break;
                    case 35:
                        return 97;
                        break;
                    case 36:
                        return 9;
                        break;
                    case 37:
                        return 81;
                        break;
                    case 38:
                        return 85;
                        break;
                    case 39:
                        return 40;
                        break;
                    case 40:
                        return 43;
                        break;
                    case 41:
                        return 45;
                        break;
                    case 42:
                        return 41;
                        break;
                    case 43:
                        return 42;
                        break;
                    case 44:
                        return 44;
                        break;
                    case 45:
                        return 83;
                        break;
                    case 46:
                        return 84;
                        break;
                    case 47:
                        return 82;
                        break;
                    case 48:
                        return 93;
                        break;
                    case 49:
                        return 12;
                        break;
                    case 50:
                        return 14;
                        break;
                    case 51:
                        return 92;
                        break;
                    case 52:
                        return 73;
                        break;
                    case 53:
                        return 90;
                        break;
                    case 54:
                        return 87;
                        break;
                    case 55:
                        return 94;
                        break;
                    case 56:
                        return 95;
                        break;
                    case 57:
                        return 71;
                        break;
                    case 58:
                        return 106;
                        break;
                    case 59:
                        return 'MENORQUECIERRE';
                        break;
                    case 60:
                        return 105;
                        break;
                    case 61:
                        return 107;
                        break;
                    case 62:
                        return 108;
                        break;
                    case 63:
                        return 36;
                        break;
                    case 64:
                        return 38;
                        break;
                    case 65:
                        return 104;
                        break;
                    case 66:
                        return 54;
                        break;
                    case 67:
                        return 103;
                        break;
                    case 68:
                        return 99;
                        break;
                    case 69:
                        return 100;
                        break;
                    case 70:
                        return 115;
                        break;
                    case 71:
                        return 'POTENCIA';
                        break;
                    case 72:
                        return 102;
                        break;
                    case 73:
                        return 'POTENCIA';
                        break;
                    case 74:
                        return 91;
                        break;
                    case 75:
                        return 26;
                        break;
                    case 76:
                        return 69;
                        break;
                    case 77:
                        return 10;
                        break;
                    case 78:
                        return 17;
                        break;
                    case 79:
                        return 39;
                        break;
                    case 80:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 96;
                        break;
                    case 81:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 'QUOTE';
                        break;
                    case 82:
                        return 11;
                        break;
                    case 83:
                        return 51;
                        break;
                    case 84:
                        return 5;
                        break;
                    case 85:
                        console.log("Error Lexico");
                        break;
                }
            },
            rules: [/^(?:[(][:][^:]*[:]+[)])/, /^(?:[ \r\t]+)/, /^(?:\s+)/, /^(?:\n+)/, /^(?:\/\/.*)/, /^(?:[/][][^][]+([^/][^][]+)*[/])/, /^(?:as\b)/, /^(?:xs\b)/, /^(?:for\b)/, /^(?:let\b)/, /^(?:where\b)/, /^(?:order by\b)/, /^(?:return\b)/, /^(?:in\b)/, /^(?:doc\b)/, /^(?:if\b)/, /^(?:else\b)/, /^(?:then\b)/, /^(?:eq\b)/, /^(?:ne\b)/, /^(?:lt\b)/, /^(?:le\b)/, /^(?:gt\b)/, /^(?:ge\b)/, /^(?:at\b)/, /^(?:to\b)/, /^(?:declare\b)/, /^(?:function\b)/, /^(?:div\b)/, /^(?:or\b)/, /^(?:and\b)/, /^(?:mod\b)/, /^(?:node\b)/, /^(?:text\b)/, /^(?:data\b)/, /^(?:last\b)/, /^(?:local\b)/, /^(?:number\b)/, /^(?:string\b)/, /^(?:integer\b)/, /^(?:decimal\b)/, /^(?:double\b)/, /^(?:float\b)/, /^(?:char\b)/, /^(?:boolean\b)/, /^(?:upper-case\b)/, /^(?:lower-case\b)/, /^(?:substring\b)/, /^(?:\*)/, /^(?:\()/, /^(?:\))/, /^(?:\.\.)/, /^(?:\.)/, /^(?:\/\/)/, /^(?:\/)/, /^(?:\[)/, /^(?:\])/, /^(?:\$)/, /^(?:>=)/, /^(?:<\/)/, /^(?:<=)/, /^(?:<)/, /^(?:>)/, /^(?:\{)/, /^(?:\})/, /^(?:!=)/, /^(?:=)/, /^(?:==)/, /^(?:\+)/, /^(?:-)/, /^(?:\*)/, /^(?:\^)/, /^(?:%)/, /^(?:\^)/, /^(?:@)/, /^(?:,)/, /^(?::=)/, /^(?::)/, /^(?:;)/, /^(?:\?)/, /^(?:"[^\"]*")/, /^(?:'[^\']*')/, /^(?:([a-zA-Z_À-ÿ\u00F1\u00D1])[a-zA-Z0-9_^ÑñÀ-ÿ\-\.\u00F1\u00D10-9_]*)/, /^(?:[0-9]+(\.[0-9]+)?\b)/, /^(?:$)/, /^(?:.)/],
            conditions: { "INITIAL": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = GrammXQuery;
    exports.Parser = GrammXQuery.Parser;
    exports.parse = function () { return GrammXQuery.parse.apply(GrammXQuery, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 9).readFileSync(__webpack_require__(/*! path */ 10).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "LXtN":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Excepciones/NodoErrores.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NodoErrores; });
class NodoErrores {
    constructor(tipo, desc, fila, columna) {
        this.tipoError = tipo;
        this.desc = desc;
        this.fila = fila;
        this.columna = columna;
    }
    getDesc() {
        return this.desc;
    }
    getTipoError() {
        return this.tipoError;
    }
    getcolumna() {
        return this.columna;
    }
    getFila() {
        return this.fila;
    }
    returnError() {
        return ('Se obtuvo: ' +
            this.tipoError +
            ' desc:{' +
            this.desc +
            '} en la fila: ' +
            this.fila +
            ' en la columna: ' +
            this.columna +
            '\n');
    }
}


/***/ }),

/***/ "LdXe":
/*!**************************************************************************!*\
  !*** ./src/app/paginas/gramatical-report/gramatical-report.component.ts ***!
  \**************************************************************************/
/*! exports provided: GramaticalReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GramaticalReportComponent", function() { return GramaticalReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");

class GramaticalReportComponent {
    constructor() { }
    ngOnInit() {
        let info = window.localStorage.getItem('gramatica');
        let texto = document.getElementById("text2");
        if (texto != null) {
            texto.innerHTML += info;
        }
    }
}
GramaticalReportComponent.ɵfac = function GramaticalReportComponent_Factory(t) { return new (t || GramaticalReportComponent)(); };
GramaticalReportComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: GramaticalReportComponent, selectors: [["app-gramatical-report"]], decls: 3, vars: 0, consts: [["name", "Estruct", "id", "text2", "cols", "125", "rows", "35"]], template: function GramaticalReportComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "textarea", 0);
    } }, styles: ["textarea[_ngcontent-%COMP%]{\r\n    background: url(http://i.imgur.com/2cOaJ.png);\r\nbackground-attachment: local;\r\nbackground-repeat: no-repeat;\r\npadding-left: 40px;\r\nfont-size: 95%;\r\ncolor: white;\r\nposition: relative;\r\nleft: 100px;\r\n    border-color:rgb(126, 123, 123);\r\n    background-color: rgb(58, 56, 56);\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYW1hdGljYWwtcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2Q0FBNkM7QUFDakQsNEJBQTRCO0FBQzVCLDRCQUE0QjtBQUM1QixrQkFBa0I7QUFDbEIsY0FBYztBQUNkLFlBQVk7QUFDWixrQkFBa0I7QUFDbEIsV0FBVztJQUNQLCtCQUErQjtJQUMvQixpQ0FBaUM7QUFDckMiLCJmaWxlIjoiZ3JhbWF0aWNhbC1yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhe1xyXG4gICAgYmFja2dyb3VuZDogdXJsKGh0dHA6Ly9pLmltZ3VyLmNvbS8yY09hSi5wbmcpO1xyXG5iYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGxvY2FsO1xyXG5iYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5wYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbmZvbnQtc2l6ZTogOTUlO1xyXG5jb2xvcjogd2hpdGU7XHJcbnBvc2l0aW9uOiByZWxhdGl2ZTtcclxubGVmdDogMTAwcHg7XHJcbiAgICBib3JkZXItY29sb3I6cmdiKDEyNiwgMTIzLCAxMjMpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDU4LCA1NiwgNTYpO1xyXG59Il19 */"] });


/***/ }),

/***/ "LeVp":
/*!************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Exit.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Exit; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Exit extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
    }
    interpretar(arbol, tabla) {
        return "exit;";
    }
}


/***/ }),

/***/ "LgZT":
/*!*********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Abstracto/Instrucciones.ts ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Instrucciones; });
class Instrucciones extends Array {
    constructor(instruction1, instruction2, fila, columna) {
        super();
        if (instruction1 != null) {
            this.push(instruction1);
        }
        if (instruction2 != null) {
            this.push(instruction2);
        }
    }
}


/***/ }),

/***/ "Lmlt":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Condicion.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Condicion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");


class Condicion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(operador, linea, columna, op1, op2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), linea, columna);
        this.operador = operador;
        if (!op2)
            this.operandoUnico = op1;
        else {
            this.operando1 = op1;
            this.operando2 = op2;
        }
    }
    interpretar(arbol, tabla, tablaxml) {
        console.log("aqui iria la consulta");
        console.log(tabla);
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "Mc8n":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Reportes/reporteTabla.ts ***!
  \*****************************************************************/
/*! exports provided: reporteTabla */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reporteTabla", function() { return reporteTabla; });
class reporteTabla {
    constructor(identificador, tipo, entorno, contenido, linea, columna, posicion) {
        this.identificador = identificador;
        this.tipo = tipo;
        this.entorno = entorno;
        this.contenido = contenido;
        this.linea = linea;
        this.columna = columna;
        this.posicion = posicion;
    }
    getIdentificador() {
        return this.identificador;
    }
    setIdentificador(identificador) {
        this.identificador = identificador;
    }
    getContenido() {
        return this.identificador;
    }
    setContenido(contenido) {
        this.contenido = contenido;
    }
    getTipo() {
        return this.tipo;
    }
    setTipo(tipo) {
        this.tipo = tipo;
    }
    getEntorno() {
        return this.entorno;
    }
    setEntorno(ent) {
        this.entorno = ent;
    }
    getLinea() {
        return this.linea;
    }
    getColumna() {
        return this.columna;
    }
    setLinea(linea) {
        this.linea = linea;
    }
    setColumna(col) {
        this.columna = col;
    }
    getPosicion() {
        return this.posicion;
    }
    setPosicion(posicion) {
        this.posicion = posicion;
    }
}


/***/ }),

/***/ "MuHt":
/*!*********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Simbolos/tablaSimbolos.ts ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return tablaSimbolos; });
/* harmony import */ var _Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tipo */ "QX8J");

class tablaSimbolos {
    constructor(anterior) {
        this.tablaAnterior = anterior;
        this.tablaActual = new Array();
        this.tipoDato = new _Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].CADENA);
        this.nombreDato = '';
    }
    getAnterior() {
        return this.tablaAnterior;
    }
    setAnterior(anterior) {
        this.tablaAnterior = anterior;
    }
    getTabla() {
        return this.tablaActual;
    }
    setTabla(Tabla) {
        this.tablaActual = Tabla;
    }
    setVariable(simbolo) {
        this.tablaActual.push(simbolo);
        return `creada con exito`;
    }
    getVariable(id) {
        for (let e = this; e != null; e = e.getAnterior()) {
            let encontrado = null;
            for (let h of e.getTabla()) {
                if (h.getidentificador() == id) {
                    encontrado = h;
                    break;
                }
            }
            if (encontrado != null) {
                return encontrado;
            }
        }
        return null;
    }
    getNombre() {
        return this.nombreDato;
    }
    setNombre(nombre) {
        this.nombreDato = nombre;
    }
}
//ARREGLO DE SOLO ID DE METODOS


/***/ }),

/***/ "MuKW":
/*!********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Llamada.ts ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Llamada; });
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Expresiones_Nativo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Expresiones/Nativo */ "CgpK");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Simbolos/tablaSimbolos */ "MuHt");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _BarrasNodo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BarrasNodo */ "+d5a");
/* harmony import */ var _Declaracion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Declaracion */ "JDzO");
/* harmony import */ var _IfFuncionAnidado__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./IfFuncionAnidado */ "0FvM");
/* harmony import */ var _Let__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Let */ "xsaW");










class Llamada extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(identificador, parametros, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
        this.parametros = parametros;
    }
    interpretar(arbol, tabla, tablaxml) {
        var ListaParametros = new Array();
        var listaInstrucciones = new Array();
        var cadenaparametros = "";
        var c = 0;
        var sim;
        var tabxmlanterior;
        let countparameter = 0;
        let countparameter2 = 0;
        var tablasimbol = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__["default"]();
        /************************************************************************************************************************
         *******************************************************AREA DE PARAMETROS************************************************
         * **********************************************************************************************************************
         */
        var buscarFuncion = tabla.getVariable(this.identificador);
        if (buscarFuncion != null) {
            if (this.parametros != null) {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == this.identificador) {
                        ///aqui se agrega la lista de instrucciones
                        listaInstrucciones = buscarFuncion.getvalor();
                    }
                    else {
                        ////aqui se agregan y declaran los paramentros
                        ListaParametros = key.getvalor();
                    }
                }
                if (this.parametros instanceof Array) {
                    this.parametros.forEach(element => {
                        if (element instanceof Array) {
                            element.forEach(iteracion => {
                                if (iteracion instanceof _Expresiones_Nativo__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                                    countparameter++;
                                    var declaravalor = iteracion.interpretar(arbol, tabla, tablaxml);
                                    ListaParametros.forEach(element => {
                                        countparameter2++;
                                        if (countparameter == countparameter2) {
                                            if (element instanceof _Declaracion__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                                                var declara = element.interpretar(arbol, tabla, tablaxml);
                                                var buscar1 = tabla.getVariable(declara);
                                                if (buscar1 != null) {
                                                    buscar1.setvalor(declaravalor);
                                                    tablasimbol.setVariable(buscar1);
                                                }
                                            }
                                        }
                                    });
                                    countparameter2 = 0;
                                }
                                else if (iteracion instanceof _BarrasNodo__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                                    var resultador = element.interpretar(arbol, tabla, tablaxml);
                                    if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                                        c++;
                                        tabxmlanterior = tablaxml;
                                        tablaxml = resultador;
                                        if (c == element.length) {
                                            if (arbol != null) {
                                                console.log("LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\n");
                                                sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["tipoDato"].FUNCION), this.identificador, this.fila.toString(), this.columna.toString(), "", resultador);
                                                tabla.setVariable(sim);
                                                tablaxml = tabxmlanterior;
                                            }
                                        }
                                    }
                                    if (resultador instanceof Array) {
                                        console.log(resultador);
                                        resultador.forEach(element => {
                                            console.log(element.getvalor());
                                        });
                                    }
                                }
                            });
                        }
                        else {
                            ////SI FUERA STRING
                            if (element instanceof _Expresiones_Nativo__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                                countparameter++;
                                var declaravalor = element.interpretar(arbol, tabla, tablaxml);
                                ListaParametros.forEach(element1 => {
                                    countparameter2++;
                                    if (countparameter == countparameter2) {
                                        if (element1 instanceof _Declaracion__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                                            var declara = element1.interpretar(arbol, tabla, tablaxml);
                                            var buscar1 = tabla.getVariable(declara);
                                            if (buscar1 != null) {
                                                buscar1.setvalor(declaravalor);
                                                tablasimbol.setVariable(buscar1);
                                            }
                                        }
                                    }
                                });
                                countparameter2 = 0;
                            }
                            else if (element instanceof _BarrasNodo__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                                var resultador = element.interpretar(arbol, tabla, tablaxml);
                                if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                                    c++;
                                    tabxmlanterior = tablaxml;
                                    tablaxml = resultador;
                                    if (c == this.parametros.length) {
                                        if (arbol != null) {
                                            console.log("LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\n");
                                            sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["tipoDato"].FUNCION), this.identificador, this.fila.toString(), this.columna.toString(), "", resultador);
                                            tabla.setVariable(sim);
                                            tablaxml = tabxmlanterior;
                                        }
                                    }
                                }
                                if (resultador instanceof Array) {
                                    console.log(resultador);
                                    resultador.forEach(element => {
                                        console.log(element.getvalor());
                                    });
                                }
                            }
                        }
                    });
                }
            }
            else {
            }
            /*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ EJECUTAR INSTRUCCIONES @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             */
            if (listaInstrucciones != null) {
                listaInstrucciones.forEach(element => {
                    if (element instanceof _Let__WEBPACK_IMPORTED_MODULE_9__["default"]) {
                        var respuesta = element.interpretar(arbol, tablasimbol, tablaxml);
                        if (respuesta instanceof _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                            buscarFuncion.setvalor(respuesta.getvalor());
                        }
                        else if (respuesta instanceof Array) {
                            buscarFuncion.setvalor(respuesta);
                        }
                        else if (respuesta instanceof _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                            buscarFuncion.setvalor(respuesta);
                        }
                        else {
                            buscarFuncion.setvalor(respuesta);
                        }
                    }
                    if (element instanceof _IfFuncionAnidado__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                        var theifani = element.interpretar(arbol, tabla, tablaxml);
                        // respuesta=theifani;
                        buscarFuncion.setvalor(theifani);
                        console.log("hola estamos en if anidado");
                        //cadena = theifani;
                    }
                });
            }
            return buscarFuncion.getvalor();
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "N49t":
/*!*********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Relacional.ts ***!
  \*********************************************************************/
/*! exports provided: default, Relacionales */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Relacional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Relacionales", function() { return Relacionales; });
/* harmony import */ var src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Variable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Variable */ "95dx");





class Relacional extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(relacion, fila, columna, cond1, cond2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.relacion = relacion;
        this.cond1 = cond1;
        this.cond2 = cond2;
    }
    getNodoAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"]('RELACIONAL');
        nodo.agregarHijoAST(this.cond1.getNodoAST());
        nodo.agregarHijo(this.relacion + '', 'rel', this.relacion);
        nodo.agregarHijoAST(this.cond2.getNodoAST());
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        let izq, der;
        izq = this.obtieneValor(this.cond1, arbol, tabla, tablaxml);
        if (izq instanceof src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"])
            return izq;
        der = this.obtieneValor(this.cond2, arbol, tabla, tablaxml);
        if (der instanceof src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"])
            return der;
        if (this.cond1.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA &&
            this.cond2.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
            let opera = this.TipoOperando();
            return { condicion1: izq, operador: opera, condicion2: der };
        }
        else if (this.cond2.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA &&
            this.cond1.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
            let opera = this.TipoOperando();
            return { condicion1: izq, operador: opera, condicion2: der };
        }
        else {
            this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
            switch (this.relacion) {
                case Relacionales.IGUAL:
                    return izq == der;
                case Relacionales.DIFERENTE:
                    return izq != der;
                case Relacionales.MENORQUE:
                    return izq < der;
                case Relacionales.MENORIGUAL:
                    return izq <= der;
                case Relacionales.MAYORQUE:
                    return izq > der;
                case Relacionales.MAYORIGUAL:
                    return izq >= der;
                default:
                    return 'what';
            }
        }
    }
    obtieneValor(operando, arbol, tabla, tablaxml) {
        let valor = operando.interpretar(arbol, tabla, tablaxml);
        if (operando instanceof _Variable__WEBPACK_IMPORTED_MODULE_4__["default"]) {
            var buscar1 = tabla.getVariable(valor);
            if (buscar1 != null) {
                return buscar1.getvalor();
            }
        }
        else {
            switch (operando.tipoDato.getTipo()) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                    return parseInt(valor);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                    return parseFloat(valor);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                    var da = valor + '';
                    var res = da.charCodeAt(0);
                    return res;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                    let dats = valor + '';
                    let otr = dats.toLowerCase();
                    return valor;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                    return '' + valor;
            }
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    TipoOperando() {
        switch (this.relacion) {
            case Relacionales.IGUAL:
                return "==";
            case Relacionales.DIFERENTE:
                return "!=";
            case Relacionales.MENORQUE:
                return "<";
            case Relacionales.MENORIGUAL:
                return "<=";
            case Relacionales.MAYORQUE:
                return ">";
            case Relacionales.MAYORIGUAL:
                return ">=";
            default:
                return 'what';
        }
    }
}
var Relacionales;
(function (Relacionales) {
    Relacionales[Relacionales["IGUAL"] = 0] = "IGUAL";
    Relacionales[Relacionales["DIFERENTE"] = 1] = "DIFERENTE";
    Relacionales[Relacionales["MAYORQUE"] = 2] = "MAYORQUE";
    Relacionales[Relacionales["MENORQUE"] = 3] = "MENORQUE";
    Relacionales[Relacionales["MAYORIGUAL"] = 4] = "MAYORIGUAL";
    Relacionales[Relacionales["MENORIGUAL"] = 5] = "MENORIGUAL";
    Relacionales[Relacionales["NOIGUAL"] = 6] = "NOIGUAL";
})(Relacionales || (Relacionales = {}));


/***/ }),

/***/ "O4JO":
/*!*************************************************!*\
  !*** ./src/app/Backend/XPATH/GramaticaXPath.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var GramaticaXPath = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [1, 5], $V1 = [1, 23], $V2 = [1, 24], $V3 = [1, 9], $V4 = [1, 10], $V5 = [1, 11], $V6 = [1, 12], $V7 = [1, 13], $V8 = [1, 14], $V9 = [1, 15], $Va = [1, 16], $Vb = [1, 17], $Vc = [1, 18], $Vd = [1, 19], $Ve = [1, 20], $Vf = [1, 21], $Vg = [1, 22], $Vh = [5, 6], $Vi = [5, 6, 9, 17, 18, 19, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $Vj = [1, 28], $Vk = [1, 39], $Vl = [1, 46], $Vm = [1, 47], $Vn = [1, 30], $Vo = [1, 31], $Vp = [1, 32], $Vq = [1, 34], $Vr = [1, 35], $Vs = [1, 41], $Vt = [1, 42], $Vu = [1, 43], $Vv = [1, 44], $Vw = [1, 45], $Vx = [5, 6, 9, 18, 19, 21, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $Vy = [1, 66], $Vz = [5, 6, 9, 17, 18, 19, 21, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $VA = [5, 6, 9, 17, 19, 21, 23, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $VB = [1, 71], $VC = [1, 69], $VD = [1, 70], $VE = [1, 72], $VF = [1, 73], $VG = [1, 74], $VH = [1, 75], $VI = [1, 76], $VJ = [1, 77], $VK = [1, 78], $VL = [1, 79], $VM = [1, 80], $VN = [1, 81], $VO = [1, 82], $VP = [2, 33], $VQ = [5, 6, 9, 17, 19, 21, 23, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $VR = [5, 6, 9, 17, 19, 21, 23, 33, 34, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $VS = [5, 6, 9, 17, 19, 21, 23, 33, 34, 35, 36, 37, 38, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], $VT = [5, 6, 9, 17, 18, 19, 20, 21, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "NODO": 4, "EOF": 5, "OPTION": 6, "INSTRUCCIONES": 7, "INSTRUCCION": 8, "BARRA": 9, "EXPRESION": 10, "ATRIBUTO": 11, "AXES": 12, "ALL": 13, "PREDICADOS": 14, "IDENTIFICADOR": 15, "L_CORCHETES": 16, "SELECT": 17, "MULTIPLICACION": 18, "ATRIBUTOS": 19, "CORCHETEIZQ": 20, "CORCHETEDER": 21, "PARIZQ": 22, "PARDER": 23, "COMA": 24, "CADENA": 25, "entero": 26, "NUMBER": 27, "CARACTER_LITERAL": 28, "STRING_LITERAL": 29, "MENOS": 30, "MAS": 31, "DIVISION": 32, "IGUAL": 33, "NOIGUAL": 34, "MENORQUE": 35, "MENORIGUAL": 36, "MAYORQUE": 37, "MAYORIGUAL": 38, "OR": 39, "AND": 40, "MODULO": 41, "LAST": 42, "POSITION": 43, "NODE": 44, "TEXT": 45, "ANCESTOR": 46, "DOSPUNTOS": 47, "ANCESTORSELF": 48, "ATTRIBUTE": 49, "CHILD": 50, "DESCENDENT": 51, "DESCENDENTSELF": 52, "FOLLOWING": 53, "FOLLOWINGSIBLI": 54, "NAMESPACE": 55, "PARENT": 56, "PRECEDING": 57, "PRECEDINGSIBLI": 58, "SELF": 59, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 6: "OPTION", 9: "BARRA", 15: "IDENTIFICADOR", 17: "SELECT", 18: "MULTIPLICACION", 19: "ATRIBUTOS", 20: "CORCHETEIZQ", 21: "CORCHETEDER", 22: "PARIZQ", 23: "PARDER", 24: "COMA", 25: "CADENA", 26: "entero", 27: "NUMBER", 28: "CARACTER_LITERAL", 29: "STRING_LITERAL", 30: "MENOS", 31: "MAS", 32: "DIVISION", 33: "IGUAL", 34: "NOIGUAL", 35: "MENORQUE", 36: "MENORIGUAL", 37: "MAYORQUE", 38: "MAYORIGUAL", 39: "OR", 40: "AND", 41: "MODULO", 42: "LAST", 43: "POSITION", 44: "NODE", 45: "TEXT", 46: "ANCESTOR", 47: "DOSPUNTOS", 48: "ANCESTORSELF", 49: "ATTRIBUTE", 50: "CHILD", 51: "DESCENDENT", 52: "DESCENDENTSELF", 53: "FOLLOWING", 54: "FOLLOWINGSIBLI", 55: "NAMESPACE", 56: "PARENT", 57: "PRECEDING", 58: "PRECEDINGSIBLI", 59: "SELF" },
        productions_: [0, [3, 2], [4, 3], [4, 1], [7, 2], [7, 1], [8, 3], [8, 2], [8, 1], [8, 1], [8, 1], [14, 1], [14, 2], [13, 2], [13, 1], [13, 1], [11, 2], [11, 2], [11, 2], [11, 3], [16, 4], [16, 3], [16, 4], [16, 3], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 3], [10, 2], [10, 3], [10, 3], [10, 3], [10, 3], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4], [12, 4]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                    if ($$[$0] != false)
                        $$[$0 - 2].push($$[$0]);
                    this.$ = $$[$0 - 2];
                    break;
                case 3:
                case 5:
                case 11:
                    this.$ = ($$[$0] != false) ? [$$[$0]] : [];
                    break;
                case 4:
                    if ($$[$0] != false)
                        $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 6:
                    this.$ = new barrasnodo.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1]);
                    break;
                case 7:
                    this.$ = new barrasnodo.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column, null);
                    break;
                case 8:
                case 9:
                case 10:
                case 27:
                case 30:
                case 31:
                case 32:
                case 34:
                    this.$ = $$[$0];
                    break;
                case 12:
                    this.$ = new predicado.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 13:
                    this.$ = new selectroot.default($$[$0 - 1], _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0]);
                    break;
                case 14:
                    this.$ = new selectroot.default($$[$0], _$[$0].first_line, _$[$0].first_column, null);
                    break;
                case 15:
                    this.$ = new todo.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 16:
                    this.$ = new atributosexpresion.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 17:
                case 18:
                    this.$ = new atributosimple.default($$[$0 - 1], $$[$0], _$[$0 - 1].first_line, _$[$0 - 1].first_column);
                    break;
                case 19:
                    this.$ = new atributospredicado.default($$[$0 - 1], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 20:
                    this.$ = new arreglos.default($$[$0 - 3], _$[$0 - 3].first_line, _$[$0 - 3].first_column, $$[$0 - 1]);
                    break;
                case 21:
                    this.$ = new arreglos.default(null, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 1]);
                    break;
                case 22:
                    this.$ = new parentesis.default($$[$0 - 2], _$[$0 - 3].first_line, _$[$0 - 3].first_column, $$[$0]);
                    break;
                case 23:
                    this.$ = new parentesis.default($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, null);
                    break;
                case 24:
                case 29:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.CADENA), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 25:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.ENTERO), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 26:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.DECIMAL), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 28:
                    this.$ = new nativo.default(new Tipo.default(Tipo.tipoDato.CARACTER), $$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 33:
                    this.$ = new identificador.default($$[$0], _$[$0].first_line, _$[$0].first_column);
                    break;
                case 35:
                    this.$ = new aritmetica.default(aritmetica.Operadores.RESTA, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 36:
                    this.$ = new aritmetica.default(aritmetica.Operadores.SUMA, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 37:
                    this.$ = new aritmetica.default(aritmetica.Operadores.MULTIPLICACION, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 38:
                    this.$ = new aritmetica.default(aritmetica.Operadores.DIVISION, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 39:
                    this.$ = new relacional.default(relacional.Relacionales.IGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 40:
                    this.$ = new relacional.default(relacional.Relacionales.NOIGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 41:
                    this.$ = new relacional.default(relacional.Relacionales.MENOR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 42:
                    this.$ = new relacional.default(relacional.Relacionales.MENORIGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 43:
                    this.$ = new relacional.default(relacional.Relacionales.MAYOR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 44:
                    this.$ = new relacional.default(relacional.Relacionales.MAYORIGUAL, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 45:
                    this.$ = new logica.default(logica.Logicas.OR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 46:
                    this.$ = new logica.default(logica.Logicas.AND, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 47:
                    this.$ = new aritmetica.default(aritmetica.Operadores.MODULADOR, _$[$0 - 2].first_line, _$[$0 - 2].first_column, $$[$0 - 2], $$[$0]);
                    break;
                case 48:
                    this.$ = new aritmetica.default(aritmetica.Operadores.MENOSNUM, _$[$0 - 1].first_line, _$[$0 - 1].first_column, $$[$0], null);
                    break;
                case 49:
                case 50:
                case 51:
                case 52:
                    this.$ = new especiales.default($$[$0 - 2], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                    this.$ = new axes.default($$[$0 - 3], $$[$0], _$[$0 - 3].first_line, _$[$0 - 3].first_column);
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 7: 3, 8: 4, 9: $V0, 11: 6, 12: 7, 13: 8, 17: $V1, 18: $V2, 19: $V3, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 1: [3] }, { 5: [1, 25], 6: [1, 26] }, o($Vh, [2, 3], { 11: 6, 12: 7, 13: 8, 8: 27, 9: $V0, 17: $V1, 18: $V2, 19: $V3, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }), o($Vi, [2, 5]), { 8: 48, 9: $Vj, 10: 29, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($Vi, [2, 8]), o($Vi, [2, 9]), o($Vi, [2, 10]), { 8: 48, 9: $V0, 10: 49, 11: 38, 12: 37, 13: 36, 14: 40, 15: [1, 52], 16: 33, 17: [1, 50], 18: [1, 51], 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 47: [1, 53] }, { 47: [1, 54] }, { 47: [1, 55] }, { 47: [1, 56] }, { 47: [1, 57] }, { 47: [1, 58] }, { 47: [1, 59] }, { 47: [1, 60] }, { 47: [1, 61] }, { 47: [1, 62] }, { 47: [1, 63] }, { 47: [1, 64] }, { 47: [1, 65] }, o($Vx, [2, 14], { 17: $Vy }), o($Vz, [2, 15]), { 1: [2, 1] }, { 7: 67, 8: 4, 9: $V0, 11: 6, 12: 7, 13: 8, 17: $V1, 18: $V2, 19: $V3, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($Vi, [2, 4]), { 8: 48, 9: $Vj, 10: 68, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($VA, [2, 7], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($Vz, [2, 24]), o($Vz, [2, 25]), o($Vz, [2, 26]), o($Vz, [2, 27], { 20: $VO }), o($Vz, [2, 28]), o($Vz, [2, 29]), o($Vz, [2, 30]), o($Vz, [2, 31]), o($Vz, [2, 32]), o($Vz, $VP, { 16: 83, 20: $Vl, 22: $Vm }), o($Vz, [2, 34]), { 8: 48, 9: $V0, 10: 84, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 22: [1, 85] }, { 22: [1, 86] }, { 22: [1, 87] }, { 22: [1, 88] }, { 8: 48, 9: $V0, 10: 89, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 90, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($Vz, [2, 11]), o($VA, [2, 16], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($Vx, [2, 17], { 17: $Vy }), o($Vz, [2, 18]), o($Vz, $VP, { 16: 91, 20: $Vl, 22: $Vm }), { 47: [1, 92] }, { 47: [1, 93] }, { 47: [1, 94] }, { 47: [1, 95] }, { 47: [1, 96] }, { 47: [1, 97] }, { 47: [1, 98] }, { 47: [1, 99] }, { 47: [1, 100] }, { 47: [1, 101] }, { 47: [1, 102] }, { 47: [1, 103] }, { 47: [1, 104] }, o($Vz, [2, 13]), o($Vh, [2, 2], { 11: 6, 12: 7, 13: 8, 8: 27, 9: $V0, 17: $V1, 18: $V2, 19: $V3, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }), o($VA, [2, 6], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), { 8: 48, 9: $V0, 10: 105, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 106, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 107, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 108, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 109, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 110, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 111, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 112, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 113, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 114, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 115, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 116, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 117, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 118, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($Vz, [2, 12], { 20: $VO }), o($Vz, [2, 48]), { 23: [1, 119] }, { 23: [1, 120] }, { 23: [1, 121] }, { 23: [1, 122] }, { 18: $VB, 21: [1, 123], 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }, { 18: $VB, 23: [1, 124], 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }, o($Vz, [2, 19], { 20: $VO }), { 8: 48, 9: $V0, 10: 125, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 126, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 127, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 128, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 129, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 130, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 131, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 132, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 133, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 134, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 135, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 136, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, { 8: 48, 9: $V0, 10: 137, 11: 38, 12: 37, 13: 36, 14: 40, 15: $Vk, 16: 33, 17: $V1, 18: $V2, 19: $V3, 20: $Vl, 22: $Vm, 25: $Vn, 26: $Vo, 27: $Vp, 28: $Vq, 29: $Vr, 30: $Vs, 42: $Vt, 43: $Vu, 44: $Vv, 45: $Vw, 46: $V4, 48: $V5, 49: $V6, 50: $V7, 51: $V8, 52: $V9, 53: $Va, 54: $Vb, 55: $Vc, 56: $Vd, 57: $Ve, 58: $Vf, 59: $Vg }, o($VQ, [2, 35], { 18: $VB, 32: $VE, 41: $VN }), o($VQ, [2, 36], { 18: $VB, 32: $VE, 41: $VN }), o($Vz, [2, 37]), o($Vz, [2, 38]), o($VR, [2, 39], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 41: $VN }), o($VR, [2, 40], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 41: $VN }), o($VS, [2, 41], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 41: $VN }), o($VS, [2, 42], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 41: $VN }), o($VS, [2, 43], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 41: $VN }), o($VS, [2, 44], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 41: $VN }), o([5, 6, 9, 17, 19, 21, 23, 39, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [2, 45], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 40: $VM, 41: $VN }), o([5, 6, 9, 17, 19, 21, 23, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [2, 46], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 41: $VN }), o($Vz, [2, 47]), { 18: $VB, 21: [1, 138], 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }, o($Vz, [2, 49]), o($Vz, [2, 50]), o($Vz, [2, 51]), o($Vz, [2, 52]), o($VT, [2, 21]), o($VT, [2, 23], { 24: [1, 139] }), o($VA, [2, 53], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 54], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 55], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 56], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 57], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 58], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 59], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 60], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 61], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 62], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 63], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 64], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VA, [2, 65], { 18: $VB, 30: $VC, 31: $VD, 32: $VE, 33: $VF, 34: $VG, 35: $VH, 36: $VI, 37: $VJ, 38: $VK, 39: $VL, 40: $VM, 41: $VN }), o($VT, [2, 20]), o($VT, [2, 22])],
        defaultActions: { 25: [2, 1] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    const barrasnodo = __webpack_require__(/*! ./Analizador/Instrucciones/BarrasNodo */ "jtD6");
    const identificador = __webpack_require__(/*! ./Analizador/Expresiones/Identificador */ "/mHx");
    const CErrores = __webpack_require__(/*! ./Analizador/Excepciones/Errores */ "5Y53");
    const CNodoErrores = __webpack_require__(/*! ./Analizador/Excepciones/NodoErrores */ "E7Rf");
    const inicio = __webpack_require__(/*! ../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
    const selectroot = __webpack_require__(/*! ./Analizador/Instrucciones/SelectRoot */ "0iGS");
    const todo = __webpack_require__(/*! ./Analizador/Instrucciones/todo */ "avIU");
    const atributosimple = __webpack_require__(/*! ./Analizador/Instrucciones/AtributosSimples */ "6clo");
    const atributosexpresion = __webpack_require__(/*! ./Analizador/Instrucciones/AtributosExpresion */ "iolQ");
    const atributospredicado = __webpack_require__(/*! ./Analizador/Instrucciones/AtributosPredicado */ "v19a");
    const predicado = __webpack_require__(/*! ./Analizador/Instrucciones/Predicados */ "+QV2");
    const arreglos = __webpack_require__(/*! ./Analizador/Instrucciones/Arreglos */ "C7AR");
    const parentesis = __webpack_require__(/*! ./Analizador/Expresiones/ParentesisExpresion */ "DdrW");
    const axes = __webpack_require__(/*! ./Analizador/Funciones/Axes */ "x2tA");
    const especiales = __webpack_require__(/*! ./Analizador/Funciones/Especiales */ "VOP4");
    const nativo = __webpack_require__(/*! ./Analizador/Expresiones/Nativo */ "5beR");
    const Tipo = __webpack_require__(/*! ./Analizador/Simbolos/Tipo */ "HVYh");
    const aritmetica = __webpack_require__(/*! ./Analizador/Expresiones/Aritmetica */ "0NkC");
    const logica = __webpack_require__(/*! ./Analizador/Expresiones/Logica */ "j/FN");
    const relacional = __webpack_require__(/*! ./Analizador/Expresiones/Relacional */ "mh+0");
    const instrucciones = __webpack_require__(/*! ./Analizador/Abstracto/Instrucciones */ "LgZT");
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0: /* skip whitespace */
                        break;
                    case 1: // comentario simple línea
                        break;
                    case 2: // comentario multiple líneas
                        break;
                    case 3:
                        return 48;
                        break;
                    case 4:
                        return 52;
                        break;
                    case 5:
                        return 54;
                        break;
                    case 6:
                        return 58;
                        break;
                    case 7:
                        return 26;
                        break;
                    case 8:
                        return 29;
                        break;
                    case 9:
                        return 28;
                        break;
                    case 10:
                        return 46;
                        break;
                    case 11:
                        return 49;
                        break;
                    case 12:
                        return 50;
                        break;
                    case 13:
                        return 51;
                        break;
                    case 14:
                        return 53;
                        break;
                    case 15:
                        return 55;
                        break;
                    case 16:
                        return 56;
                        break;
                    case 17:
                        return 57;
                        break;
                    case 18:
                        return 59;
                        break;
                    case 19:
                        return 42;
                        break;
                    case 20:
                        return 43;
                        break;
                    case 21:
                        return 44;
                        break;
                    case 22:
                        return 45;
                        break;
                    case 23:
                        return 39;
                        break;
                    case 24:
                        return 40;
                        break;
                    case 25:
                        return 41;
                        break;
                    case 26:
                        return 32;
                        break;
                    case 27:
                        return 19;
                        break;
                    case 28:
                        return 15;
                        break;
                    case 29:
                        return 25;
                        break;
                    case 30:
                        return 'DECIMAL';
                        break;
                    case 31:
                        return 27;
                        break;
                    case 32:
                        return 9;
                        break;
                    case 33:
                        return 36;
                        break;
                    case 34:
                        return 38;
                        break;
                    case 35:
                        return 35;
                        break;
                    case 36:
                        return 37;
                        break;
                    case 37:
                        return 'INTERROGACION';
                        break;
                    case 38:
                        return 33;
                        break;
                    case 39:
                        return 22;
                        break;
                    case 40:
                        return 23;
                        break;
                    case 41:
                        return 20;
                        break;
                    case 42:
                        return 21;
                        break;
                    case 43:
                        return 24;
                        break;
                    case 44:
                        return 6;
                        break;
                    case 45:
                        return 31;
                        break;
                    case 46:
                        return 30;
                        break;
                    case 47:
                        return 18; /* SELECTALL TAMBIEN*/
                        break;
                    case 48:
                        return 33;
                        break;
                    case 49:
                        return 34;
                        break;
                    case 50:
                        return 47;
                        break;
                    case 51:
                        return 17;
                        break;
                    case 52:
                        return 5;
                        break;
                    case 53:
                        inicio.listaErrores.push(new CNodoErrores.default("Lexico", "No se esperaba el caracter: " + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column));
                        console.log("Lexico, No se esperaba el caracter: " + yy_.yytext + " Linea: " + yy_.yylloc.first_line + "Columna: " + yy_.yylloc.first_column);
                        break;
                }
            },
            rules: [/^(?:\s+)/i, /^(?:\/\/.*)/i, /^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/i, /^(?:ancestor-or-self\b)/i, /^(?:descendant-or-self\b)/i, /^(?:following-sibling\b)/i, /^(?:preceding-sibling\b)/i, /^(?:([0-9]+(\.[0-9]+)?))/i, /^(?:(("(\\"|[^"]|\n)*")))/i, /^(?:(('[^']*')))/i, /^(?:ancestor\b)/i, /^(?:attribute\b)/i, /^(?:child\b)/i, /^(?:descendant\b)/i, /^(?:following\b)/i, /^(?:namespace\b)/i, /^(?:parent\b)/i, /^(?:preceding\b)/i, /^(?:self\b)/i, /^(?:last\b)/i, /^(?:position\b)/i, /^(?:node\b)/i, /^(?:text\b)/i, /^(?:or\b)/i, /^(?:and\b)/i, /^(?:mod\b)/i, /^(?:div\b)/i, /^(?:@)/i, /^(?:([a-zA-Z])[a-zA-Z0-9_!#$%&(),.\*\^Ññáéíúó]*)/i, /^(?:"[^\"]*")/i, /^(?:[0-9]+(\.[0-9]+)\b)/i, /^(?:[0-9]+(\.[0-9]+)?\b)/i, /^(?:\/)/i, /^(?:<=)/i, /^(?:>=)/i, /^(?:<)/i, /^(?:>)/i, /^(?:\?)/i, /^(?:=)/i, /^(?:\()/i, /^(?:\))/i, /^(?:\[)/i, /^(?:\])/i, /^(?:,)/i, /^(?:\|)/i, /^(?:\+)/i, /^(?:-)/i, /^(?:\*)/i, /^(?:=)/i, /^(?:!=)/i, /^(?::)/i, /^(?:\.)/i, /^(?:$)/i, /^(?:.)/i],
            conditions: { "INITIAL": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = GramaticaXPath;
    exports.Parser = GramaticaXPath.Parser;
    exports.parse = function () { return GramaticaXPath.parse.apply(GramaticaXPath, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 3).readFileSync(__webpack_require__(/*! path */ 4).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "OBp0":
/*!**********************************************************!*\
  !*** ./src/app/paginas/arbol-ast/arbol-ast.component.ts ***!
  \**********************************************************/
/*! exports provided: ArbolASTComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArbolASTComponent", function() { return ArbolASTComponent; });
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vis */ "TycK");
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vis__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
//import Simbolo from 'src/app/Backend/XPATH/Analizador/Simbolos/Simbolo';
//import tablaSimbolos from 'src/app/Backend/XPATH/Analizador/Simbolos/tablaSimbolos';


class ArbolASTComponent {
    constructor() {
        //**desde aqui vro */
        this.contador = 1;
        this.cuerpo = '';
        this.dataSource = '';
        this.nodes = null;
        this.edges = null;
        this.network = null;
        this.directionInput = document.getElementById("direction");
        this.c = 0;
    }
    ngOnInit() {
        this.destroy();
        this.nodes = [];
        this.edges = [];
        var connectionCount = [];
        let info = window.localStorage.getItem('simbolos');
        let contenido = JSON.parse(info);
        console.log(contenido);
        var nivel = 0;
        this.nodes.push({ id: this.c, label: this.getValor(contenido), nivel: nivel });
        this.nodes[this.c]["level"] = nivel;
        var hijos = this.recorrerAST(this.c, contenido, nivel);
        console.log(hijos);
        for (let nodo of hijos.nodos) {
            this.nodes.push({ id: nodo.id, label: nodo.label });
        }
        for (let enlace of hijos.enlaces) {
            this.edges.push({ from: enlace.id1, to: enlace.id2 });
        }
        for (let nodo of hijos.nodos) {
            this.nodes[nodo.id]["level"] = nodo.nivel;
        }
        var container = document.getElementById("mynetwork");
        var data = {
            nodes: this.nodes,
            edges: this.edges,
        };
        var options = {
            nodes: {
                borderWidth: 2,
                size: 30,
                color: {
                    border: '#46304E',
                    background: '#D297E9',
                },
                font: {
                    color: "#000000",
                    face: 'Century Gothic'
                }
            },
            edges: {
                smooth: {
                    type: "cubicBezier",
                    forceDirection: "vertical",
                    roundness: 0.4,
                }
            },
            layout: {
                randomSeed: undefined,
                improvedLayout: true,
                hierarchical: {
                    direction: "UD",
                    sortMethod: "hubsize"
                },
            },
            physics: false,
        };
        this.network = new vis__WEBPACK_IMPORTED_MODULE_0__["Network"](container, data, options);
        this.network.on("select", function (params) {
            document.getElementById("selection").innerText =
                "Selection: " + params.nodes;
        });
        let registros = [];
    }
    destroy() {
        if (this.network !== null) {
            this.network.destroy();
            this.network = null;
        }
    }
    recorrerAST(padre, nPadre, nivel) {
        var arr = { nodos: [], enlaces: [] };
        for (let hijo of this.getHijos(nPadre)) {
            nivel++;
            this.c++;
            arr.enlaces.push({ id1: padre, id2: this.c });
            arr.nodos.push({ id: this.c, label: this.getValor(hijo), nivel: nivel });
            var resultado = this.recorrerAST(this.c, hijo, nivel);
            arr.enlaces = arr.enlaces.concat(resultado.enlaces);
            arr.nodos = arr.nodos.concat(resultado.nodos);
        }
        return arr;
    }
    getValor(nodo) {
        return nodo.valor;
    }
    getHijos(nodo) {
        return nodo.listaNodos;
    }
}
ArbolASTComponent.ɵfac = function ArbolASTComponent_Factory(t) { return new (t || ArbolASTComponent)(); };
ArbolASTComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ArbolASTComponent, selectors: [["app-arbol-ast"]], decls: 1, vars: 0, consts: [["id", "mynetwork"]], template: function ArbolASTComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 0);
    } }, styles: ["#mynetwork[_ngcontent-%COMP%] {\r\n    width: 1362px;\r\n    height: 595px;\r\n    border: 1px solid rgb(221, 58, 58);\r\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyYm9sLWFzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYixrQ0FBa0M7RUFDcEMiLCJmaWxlIjoiYXJib2wtYXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbXluZXR3b3JrIHtcclxuICAgIHdpZHRoOiAxMzYycHg7XHJcbiAgICBoZWlnaHQ6IDU5NXB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIyMSwgNTgsIDU4KTtcclxuICB9Il19 */"] });


/***/ }),

/***/ "Oyrp":
/*!*********************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Simbolos/Tipo.ts ***!
  \*********************************************************/
/*! exports provided: default, tipoDato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tipo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tipoDato", function() { return tipoDato; });
class Tipo {
    constructor(tipos) {
        this.tipos = tipos;
    }
    getTipo() {
        return this.tipos;
    }
    setTipo(tipo) {
        this.tipos = tipo;
    }
    igual(compara) {
        return (this.tipos = compara.tipos);
    }
}
var tipoDato;
(function (tipoDato) {
    tipoDato[tipoDato["CADENA"] = 0] = "CADENA";
    tipoDato[tipoDato["OBJETO"] = 1] = "OBJETO";
    tipoDato[tipoDato["QUOTE"] = 2] = "QUOTE";
    tipoDato[tipoDato["ATRIBUTO"] = 3] = "ATRIBUTO";
    tipoDato[tipoDato["FUNCION"] = 4] = "FUNCION";
})(tipoDato || (tipoDato = {}));


/***/ }),

/***/ "QX8J":
/*!************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Simbolos/Tipo.ts ***!
  \************************************************************/
/*! exports provided: default, tipoDato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tipo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tipoDato", function() { return tipoDato; });
class Tipo {
    constructor(tipos) {
        this.tipos = tipos;
    }
    getTipo() {
        return this.tipos;
    }
    setTipo(tipo) {
        this.tipos = tipo;
    }
    igual(compara) {
        return (this.tipos = compara.tipos);
    }
}
var tipoDato;
(function (tipoDato) {
    tipoDato[tipoDato["CADENA"] = 0] = "CADENA";
    tipoDato[tipoDato["OBJETO"] = 1] = "OBJETO";
    tipoDato[tipoDato["ENTERO"] = 2] = "ENTERO";
    tipoDato[tipoDato["DECIMAL"] = 3] = "DECIMAL";
    tipoDato[tipoDato["BOOLEANO"] = 4] = "BOOLEANO";
    tipoDato[tipoDato["CARACTER"] = 5] = "CARACTER";
    tipoDato[tipoDato["SELECT"] = 6] = "SELECT";
    tipoDato[tipoDato["ATRIBUTO"] = 7] = "ATRIBUTO";
    tipoDato[tipoDato["FUNCION"] = 8] = "FUNCION";
    tipoDato[tipoDato["CICLOFOR"] = 9] = "CICLOFOR";
    tipoDato[tipoDato["WHERE"] = 10] = "WHERE";
    tipoDato[tipoDato["ORDERBY"] = 11] = "ORDERBY";
})(tipoDato || (tipoDato = {}));


/***/ }),

/***/ "Sy1n":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _componentes_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./componentes/side-bar/side-bar.component */ "8hwP");


class AppComponent {
    constructor() {
        this.title = 'Frontend';
    }
}
AppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(); };
AppComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AppComponent, selectors: [["app-root"]], decls: 1, vars: 0, template: function AppComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-sidebar");
    } }, directives: [_componentes_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_1__["SideBarComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ "T4Rd":
/*!************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Simbolos/Arbol.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Arbol; });
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");

class Arbol {
    constructor(instrucciones) {
        this.consola = '';
        this.instrucciones = instrucciones;
        this.consola = '';
        this.tablaGlobal = new _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
        this.NodoErrores = new Array();
        this.funciones = new Array();
        this.listaSimbolos = new Array();
    }
    getSimbolos() {
        return this.listaSimbolos;
    }
    actualizarTabla(identificador, valor, linea, entorno, columna) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador().toString() == identificador.toLowerCase() &&
                elemento.getEntorno().toString() == entorno.toString()) {
                elemento.setValor(valor);
                elemento.setLinea(linea);
                elemento.setColumna(columna);
                return true;
            }
        }
        return false;
    }
    BuscarTipo(identificador) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador() == identificador.toLowerCase()) {
                return elemento.getForma().toString();
            }
        }
        return 'as';
    }
    getfunciones() {
        return this.funciones;
    }
    setfunciones(value) {
        this.funciones = value;
    }
    getNodoErrores() {
        return this.NodoErrores;
    }
    setNodoErrores(value) {
        this.NodoErrores = value;
    }
    getinstrucciones() {
        return this.instrucciones;
    }
    setinstrucciones(value) {
        this.instrucciones = value;
    }
    getconsola() {
        return this.consola;
    }
    setconsola(value) {
        this.consola = value;
    }
    actualizaConsola(uptodate) {
        this.consola = `${this.consola}${uptodate}\n`;
    }
    gettablaGlobal() {
        return this.tablaGlobal;
    }
    settablaGlobal(value) {
        this.tablaGlobal = value;
    }
}


/***/ }),

/***/ "TD3t":
/*!******************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos.ts ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return tablaSimbolos; });
/* harmony import */ var _Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tipo */ "Oyrp");

class tablaSimbolos {
    constructor(anterior) {
        this.list_asignaciones = [];
        this.tablaAnterior = anterior;
        this.tablaActual = new Array();
        this.tipoDato = new _Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].CADENA);
        this.nombreDato = '';
    }
    getAnterior() {
        return this.tablaAnterior;
    }
    setAnterior(anterior) {
        this.tablaAnterior = anterior;
    }
    getTabla() {
        return this.tablaActual;
    }
    setTabla(Tabla) {
        this.tablaActual = Tabla;
    }
    setVariable(simbolo) {
        /*
        for (let e: tablaSimbolos = this; e != null; e = e.getAnterior()) {
          let encontrado: Simbolo = null;
          for(let h of e.getTabla()){
            if(h.getidentificador()==simbolo.getidentificador()){
              encontrado=h;
              break;
            }
          }
               
          if (encontrado != null) {
            return `La variable existe actualmente`;
          }
          break;
        }
        */
        this.tablaActual.push(simbolo);
        return `creada con exito`;
    }
    getVariable(id) {
        for (let e = this; e != null; e = e.getAnterior()) {
            let encontrado = null;
            for (let h of e.getTabla()) {
                if (h.getidentificador() == id) {
                    encontrado = h;
                    break;
                }
            }
            if (encontrado != null) {
                return encontrado;
            }
        }
        return null;
    }
    getNombre() {
        return this.nombreDato;
    }
    setNombre(nombre) {
        this.nombreDato = nombre;
    }
    pushListAsignacion(temp1, temp2) {
        this.list_asignaciones.push({ temp1: temp1, temp2: temp2 });
    }
    thisDeclarationExist(temp1, temp2) {
        for (let asignacion of this.list_asignaciones) {
            if (asignacion.temp1 == temp2 && asignacion.temp2 == temp1) {
                return "";
            }
        }
        this.pushListAsignacion(temp1, temp2);
        return temp1 + "=" + temp2;
    }
}
//ARREGLO DE SOLO ID DE METODOS


/***/ }),

/***/ "U3Vy":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/ForSimple.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ForSimple; });
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _CondicionSimple__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CondicionSimple */ "0xk3");
/* harmony import */ var _BarrasNodo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BarrasNodo */ "+d5a");
/* harmony import */ var _Condicion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Condicion */ "Lmlt");
/* harmony import */ var _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Expresiones/Variable */ "95dx");








class ForSimple extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(consulta, respuesta, linea, columna, thewhere, theorderby) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), linea, columna);
        this.consulta = consulta;
        this.respuesta = respuesta;
        this.thewhere = thewhere;
        this.theorderby = theorderby;
    }
    interpretar(arbol, tabla, tablaxml) {
        let c = 0;
        let searchconsulta;
        let sim;
        arbol.codigo3d.push("// *****for*****");
        let etiquetaFor = arbol.getEtiqueta();
        arbol.codigo3d.push(`L${etiquetaFor}:`);
        if (this.consulta instanceof Array) {
            this.consulta.forEach(cons => {
                if (cons instanceof _CondicionSimple__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                    let temconsulta = cons.interpretar(arbol, tabla, tablaxml);
                    temconsulta.consulta.forEach(element => {
                        c++;
                        if (element instanceof _BarrasNodo__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                            var resultador = element.interpretar(arbol, tabla, tablaxml);
                            if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                                tablaxml = resultador;
                                if (c == temconsulta.consulta.length) {
                                    if (arbol != null) {
                                        sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), temconsulta.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                                        tabla.setVariable(sim);
                                        var buscar = tabla.getVariable(temconsulta.variables);
                                        if (buscar != null) {
                                            searchconsulta = buscar.getvalor();
                                            return buscar;
                                        }
                                    }
                                }
                            }
                            else if (resultador instanceof Array) {
                                sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), temconsulta.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                                tabla.setVariable(sim);
                                var buscar = tabla.getVariable(temconsulta.variables.toString());
                                if (buscar != null) {
                                    searchconsulta = buscar.getvalor();
                                    return buscar;
                                }
                            }
                        }
                    });
                }
            });
        }
        console.log(this.variableanterior);
        c = 0;
        let etiquetaV = arbol.getEtiqueta();
        let etiquetaF = arbol.getEtiqueta();
        if (this.thewhere != null) {
            let cuando;
            if (this.thewhere instanceof _CondicionSimple__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                cuando = this.thewhere.interpretar(arbol, tabla, tablaxml);
                cuando.consulta.forEach(element => {
                    c++;
                    if (element instanceof _BarrasNodo__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                        var resultador = element.interpretar(arbol, tabla, tablaxml);
                        if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                            tablaxml = resultador;
                            if (c == cuando.consulta.length) {
                                if (arbol != null) {
                                    var buscar = tabla.getVariable(cuando.variables);
                                    if (buscar != null) {
                                        buscar.setvalor(resultador);
                                        return buscar;
                                    }
                                }
                            }
                        }
                        else if (resultador instanceof Array) {
                            arbol.etiquetasS.push("L" + etiquetaF);
                            arbol.codigo3d.push(`if(${cuando.variables}==1) goto L${etiquetaV};`);
                            arbol.codigo3d.push(`goto L${etiquetaF};`);
                            arbol.codigo3d.push(`L${etiquetaV}:`);
                            sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].WHERE), cuando.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                            tabla.setVariable(sim);
                            var buscar = tabla.getVariable(cuando.variables.toString());
                            if (buscar != null) {
                                searchconsulta = buscar.getvalor();
                                return buscar;
                            }
                        }
                    }
                });
            }
            else if (this.thewhere instanceof _Condicion__WEBPACK_IMPORTED_MODULE_6__["default"]) {
            }
            else {
            }
        }
        if (this.respuesta != null) {
            arbol.codigo3d.push(`goto L${etiquetaF};`);
            if (this.respuesta instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                var buscar = tabla.getVariable(this.respuesta.identificador);
                if (buscar != null) {
                    return buscar.getvalor();
                }
            }
            else if (this.respuesta) {
                var buscar = tabla.getVariable(this.respuesta.toString());
                if (buscar != null) {
                    return buscar.getvalor();
                }
            }
        }
        /* if(this.theorderby!=null){
 
         }
 
         if(this.respuesta!=null){
             this.consolita='';
             if(this.respuesta instanceof Array){
                 console.log("Aqui vendra si viene una consulta")
             }else{
                 console.log("Entra aca si solo es una variable")
                  if (searchconsulta instanceof Array) {
                     console.log("aca viene la magic")
                     searchconsulta.forEach(element => {
                         this.respuesta=this.consolita;
                         this.consolita += <string>element.getvalor() + "\n";
                         return this.consolita;
                         
                     });
                 } else if (searchconsulta instanceof tablaSimbolosxml) {
                     if (arbol != null) {
                         this.consolita += this.recorrerTabla(searchconsulta, arbol);
                         this.consolita += "\n"
                         this.respuesta=this.consolita
                         return this.consolita;
                     }
 
                 }else{
                     console.log("Entra aca si solo es una variable")
                     searchconsulta.forEach(element => {
                         this.respuesta=this.consolita;
                         this.consolita += <string>element.getvalor() + "\n";
                         return this.consolita;
                         
                     });
 
                 }
             }
         }
     }
 
 
 
     recorrerTabla(t: tablaSimbolosxml, arbol: Arbol) {
         var salida = ''
         for (var key of t.tablaActual) {
 
 
             let objetos = key.getvalor();
            this.consolita+=<string>objetos + "\n";;
 
         }
         return this.consolita;
 */
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "U3hP":
/*!****************************************************!*\
  !*** ./src/app/paginas/inicio/inicio.component.ts ***!
  \****************************************************/
/*! exports provided: InicioComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InicioComponent", function() { return InicioComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _componentes_tabsinicio_tabsinicio_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../componentes/tabsinicio/tabsinicio.component */ "nUj/");


class InicioComponent {
    ngOnInit() { }
}
InicioComponent.ɵfac = function InicioComponent_Factory(t) { return new (t || InicioComponent)(); };
InicioComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: InicioComponent, selectors: [["app-inicio"]], decls: 1, vars: 0, template: function InicioComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-tabsinicio");
    } }, directives: [_componentes_tabsinicio_tabsinicio_component__WEBPACK_IMPORTED_MODULE_1__["TabsinicioComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmljaW8uY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ "UoMi":
/*!***********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Asignacion.ts ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Asignacion; });
/* harmony import */ var src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");




class Asignacion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(id, valor, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), linea, columna);
        this.id = id;
        this.valor = valor;
    }
    interpretar(arbol, tabla, tablaxml) {
        var simbolo = tabla.getVariable(this.id);
        if (simbolo == null)
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]("Semantico", "Variable no encontrada", this.fila, this.columna);
        var value;
        value = null;
        value = this.valor.interpretar(arbol, tabla, tablaxml);
        simbolo.setvalor(value);
        return null;
    }
    getNodoAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"]("Asignacion");
        nodo.agregarHijo(this.id);
        nodo.agregarHijo("=");
        nodo.agregarHijoAST(this.valor.getNodoAST());
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "V62L":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/If.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return If; });
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Instrucciones/BarrasNodo */ "+d5a");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _CondicionSimple__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CondicionSimple */ "0xk3");






class If extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__["Instruccion"] {
    constructor(condicion, linea, columna, insThen, insElse) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].CADENA), linea, columna);
        this.condicion = condicion;
        this.insThen = insThen;
        this.insElse = insElse;
    }
    interpretar(arbol, tabla, tablaxml) {
        let c = 0;
        let sym;
        let searchconsulta;
        if (this.condicion instanceof _CondicionSimple__WEBPACK_IMPORTED_MODULE_5__["default"]) {
            let thecondi = this.condicion.interpretar(arbol, tabla, tablaxml);
            thecondi.consulta.forEach(element => {
                c++;
                if (element instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    var resultador = element.interpretar(arbol, tabla, tablaxml);
                    if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                        tablaxml = resultador;
                        if (c == thecondi.consulta.length) {
                            if (arbol != null) {
                                sym = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].FUNCION), thecondi.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                                tabla.setVariable(sym);
                                var buscar = tabla.getVariable(thecondi.variables);
                                if (buscar != null) {
                                    searchconsulta = buscar.getvalor();
                                    return buscar;
                                }
                            }
                        }
                    }
                    else if (resultador instanceof Array) {
                        sym = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].FUNCION), thecondi.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                        tabla.setVariable(sym);
                        var buscar = tabla.getVariable(thecondi.variables.toString());
                        if (buscar != null) {
                            searchconsulta = buscar.getvalor();
                            return buscar;
                        }
                    }
                }
            });
        }
        if (this.insThen != null) {
            let Sentencia;
            if (this.insThen instanceof _CondicionSimple__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                Sentencia = this.insThen.interpretar(arbol, tabla, tablaxml);
                Sentencia.consulta.forEach(element => {
                    c++;
                    if (element instanceof src_app_Backend_XQUERY_Analizador_Instrucciones_BarrasNodo__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        var resultador = element.interpretar(arbol, tabla, tablaxml);
                        if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                            tablaxml = resultador;
                            if (c == Sentencia.consulta.length) {
                                if (arbol != null) {
                                    var buscar = tabla.getVariable(Sentencia.variables);
                                    if (buscar != null) {
                                        buscar.setvalor(resultador);
                                        return buscar;
                                    }
                                }
                            }
                        }
                        else if (resultador instanceof Array) {
                            sym = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_3__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_4__["tipoDato"].WHERE), Sentencia.variables, this.fila.toString(), this.columna.toString(), "", resultador);
                            tabla.setVariable(sym);
                            var buscar = tabla.getVariable(Sentencia.variables.toString());
                            if (buscar != null) {
                                searchconsulta = buscar.getvalor();
                                return buscar;
                            }
                        }
                    }
                });
            }
            else {
            }
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "VD77":
/*!**************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Relacional.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Relacional; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Termino */ "98aF");



class Relacional extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion1, operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion1 = expresion1;
        this.operando = operando;
        this.expresion2 = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        var operadorizq = this.expresion1.interpretar(arbol, tabla);
        var operadorder = this.expresion2.interpretar(arbol, tabla);
        if (operadorizq != null && operadorder != null) {
            if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"] && this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
            }
            else {
                if (operadorder.contenido != null && operadorizq.contenido != null) {
                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                }
                else {
                    if (operadorder.operadorder != null) {
                        if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (operadorizq.operadorder != null) {
                        if (this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ "VOP4":
/*!******************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Funciones/Especiales.ts ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Especiales; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class Especiales extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(funcion, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].ENTERO), fila, columna);
        this.Funcion = funcion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('FUNCION ESPECIAL'); //PADRE SELECT
        var nodsBarras = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Funcion);
        nodo.agregarHijoAST(nodsBarras);
        return nodo;
    }
    interpretar(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "Vgfr":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Excepciones/Errores.ts ***!
  \***************************************************************/
/*! exports provided: Errores */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Errores", function() { return Errores; });
class Errores extends Array {
    constructor(err) {
        super();
        this.push(err);
    }
    static add(err) {
        this.prototype.push(err);
    }
    static verificarerror() {
        if (this.prototype.length > 0) {
            return "Se Detectaron Errores de Compilacion";
        }
        return "Compilacion Sin Errores";
    }
    static geterror() {
        var cad = "";
        cad += "<html>\n";
        cad += "<header>\n";
        cad += "<title>Reporte Errores</title>\n";
        cad += "</header>\n";
        cad += "<body background=\"gray\">\n";
        cad += "<div align=\"center\">\n";
        cad += "<h1>Reporte de Errores de Compilacion</h1>\n";
        cad += "<table border=\"2\" align=\"center\">\n";
        cad += "<tr>\n";
        cad += "<th>TIPO DE ERROR</th><th>DESCRIPCION</th><th>LINEA</th>\n";
        cad += "</tr>\n";
        for (var i = 0; i < this.prototype.length; i++) {
            cad += "<tr>\n";
            cad += "<td>" + this.prototype[i].getTipoError() + "</td><td>" +
                this.prototype[i].getDesc() + "</td><td>" +
                this.prototype[i].getFila() + "</td><td>" +
                this.prototype[i].getcolumna() + "</td>\n";
            cad += "</tr>\n";
        }
        cad += "</table>\n";
        cad += "</div>\n";
        cad += "</body>\n";
        cad += "</html>\n";
        return cad;
    }
    static clear() {
        while (this.prototype.length > 0) {
            this.prototype.pop();
        }
    }
}



/***/ }),

/***/ "YFaA":
/*!****************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Etiqueta.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Etiqueta; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Etiqueta extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
    }
    interpretar(arbol, tabla) {
        return this;
    }
}


/***/ }),

/***/ "YaOD":
/*!*******************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Simbolo/Arbol.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Arbol; });
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");

class Arbol {
    constructor(instrucciones) {
        this.consola = '';
        this.instrucciones = instrucciones;
        this.consola = '';
        this.tablaGlobal = new _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
        this.NodoErrores = new Array();
        this.funciones = new Array();
        this.listaSimbolos = new Array();
    }
    getSimbolos() {
        return this.listaSimbolos;
    }
    setReporte(instruccion) {
        this.listaSimbolos.push(instruccion);
    }
    getfunciones() {
        return this.funciones;
    }
    setfunciones(value) {
        this.funciones = value;
    }
    getNodoErrores() {
        return this.NodoErrores;
    }
    setNodoErrores(value) {
        this.NodoErrores = value;
    }
    getinstrucciones() {
        return this.instrucciones;
    }
    setinstrucciones(value) {
        this.instrucciones = value;
    }
    getconsola() {
        return this.consola;
    }
    setconsola(value) {
        this.consola = value;
    }
    actualizaConsola(uptodate) {
        this.consola = `${this.consola}${uptodate}\n`;
    }
    gettablaGlobal() {
        return this.tablaGlobal;
    }
    settablaGlobal(value) {
        this.tablaGlobal = value;
    }
}


/***/ }),

/***/ "ZAI4":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app-routing.module */ "vY5A");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.component */ "Sy1n");
/* harmony import */ var _paginas_inicio_inicio_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./paginas/inicio/inicio.component */ "U3hP");
/* harmony import */ var _paginas_errores_errores_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./paginas/errores/errores.component */ "Er68");
/* harmony import */ var _paginas_tabla_simbolos_tabla_simbolos_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./paginas/tabla-simbolos/tabla-simbolos.component */ "g7AS");
/* harmony import */ var _paginas_arbol_ast_arbol_ast_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./paginas/arbol-ast/arbol-ast.component */ "OBp0");
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/toolbar */ "/t3+");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/icon */ "NFeN");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/sidenav */ "XhcP");
/* harmony import */ var _angular_material_list__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/list */ "MutI");
/* harmony import */ var _componentes_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./componentes/side-bar/side-bar.component */ "8hwP");
/* harmony import */ var _componentes_tabsinicio_tabsinicio_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./componentes/tabsinicio/tabsinicio.component */ "nUj/");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/tabs */ "wZkO");
/* harmony import */ var _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/button-toggle */ "jaxi");
/* harmony import */ var _componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/input */ "qFsG");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _ctrl_ngx_codemirror__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ctrl/ngx-codemirror */ "Xl2X");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _paginas_gramatical_report_gramatical_report_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./paginas/gramatical-report/gramatical-report.component */ "LdXe");
/* harmony import */ var _paginas_ast_desc_ast_desc_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./paginas/ast-desc/ast-desc.component */ "gX41");
/* harmony import */ var _paginas_xpath_asc_ast_xpath_asc_ast_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./paginas/xpath-asc-ast/xpath-asc-ast.component */ "DJ5/");
/* harmony import */ var _paginas_reporte_optimizacion_reporte_optimizacion_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./paginas/reporte-optimizacion/reporte-optimizacion.component */ "KeVs");
/* harmony import */ var _paginas_tablasimbolos_xquery_tablasimbolos_xquery_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./paginas/tablasimbolos-xquery/tablasimbolos-xquery.component */ "z7xg");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/core */ "fXoL");






























class AppModule {
}
AppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };
AppModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_28__["ɵɵdefineNgModule"]({ type: AppModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"]] });
AppModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_28__["ɵɵdefineInjector"]({ providers: [], imports: [[
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_3__["AppRoutingModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClientModule"],
            _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_9__["MatToolbarModule"],
            _angular_material_icon__WEBPACK_IMPORTED_MODULE_10__["MatIconModule"],
            _ctrl_ngx_codemirror__WEBPACK_IMPORTED_MODULE_21__["CodemirrorModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_11__["BrowserAnimationsModule"],
            _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_12__["MatSidenavModule"],
            _angular_material_list__WEBPACK_IMPORTED_MODULE_13__["MatListModule"],
            _angular_material_tabs__WEBPACK_IMPORTED_MODULE_16__["MatTabsModule"],
            _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_17__["MatButtonToggleModule"],
            _angular_material_input__WEBPACK_IMPORTED_MODULE_19__["MatInputModule"],
            _angular_material_table__WEBPACK_IMPORTED_MODULE_20__["MatTableModule"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__["MatDialogModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_0__["ReactiveFormsModule"]
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_28__["ɵɵsetNgModuleScope"](AppModule, { declarations: [_app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"],
        _paginas_inicio_inicio_component__WEBPACK_IMPORTED_MODULE_5__["InicioComponent"],
        _paginas_errores_errores_component__WEBPACK_IMPORTED_MODULE_6__["ErroresComponent"],
        _paginas_tabla_simbolos_tabla_simbolos_component__WEBPACK_IMPORTED_MODULE_7__["TablaSimbolosComponent"],
        _paginas_arbol_ast_arbol_ast_component__WEBPACK_IMPORTED_MODULE_8__["ArbolASTComponent"],
        _componentes_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_14__["SideBarComponent"],
        _componentes_tabsinicio_tabsinicio_component__WEBPACK_IMPORTED_MODULE_15__["TabsinicioComponent"],
        _componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_18__["ContenidoInicioComponent"],
        _paginas_gramatical_report_gramatical_report_component__WEBPACK_IMPORTED_MODULE_23__["GramaticalReportComponent"],
        _paginas_ast_desc_ast_desc_component__WEBPACK_IMPORTED_MODULE_24__["AstDescComponent"],
        _paginas_xpath_asc_ast_xpath_asc_ast_component__WEBPACK_IMPORTED_MODULE_25__["XpathAscAstComponent"],
        _paginas_reporte_optimizacion_reporte_optimizacion_component__WEBPACK_IMPORTED_MODULE_26__["ReporteOptimizacionComponent"],
        _paginas_tablasimbolos_xquery_tablasimbolos_xquery_component__WEBPACK_IMPORTED_MODULE_27__["TablasimbolosXqueryComponent"]], imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
        _app_routing_module__WEBPACK_IMPORTED_MODULE_3__["AppRoutingModule"],
        _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClientModule"],
        _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_9__["MatToolbarModule"],
        _angular_material_icon__WEBPACK_IMPORTED_MODULE_10__["MatIconModule"],
        _ctrl_ngx_codemirror__WEBPACK_IMPORTED_MODULE_21__["CodemirrorModule"],
        _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_11__["BrowserAnimationsModule"],
        _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_12__["MatSidenavModule"],
        _angular_material_list__WEBPACK_IMPORTED_MODULE_13__["MatListModule"],
        _angular_material_tabs__WEBPACK_IMPORTED_MODULE_16__["MatTabsModule"],
        _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_17__["MatButtonToggleModule"],
        _angular_material_input__WEBPACK_IMPORTED_MODULE_19__["MatInputModule"],
        _angular_material_table__WEBPACK_IMPORTED_MODULE_20__["MatTableModule"],
        _angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__["MatDialogModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormsModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_0__["ReactiveFormsModule"]] }); })();


/***/ }),

/***/ "alhG":
/*!*************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Print.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Print; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Print extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.Expresion = expresion;
    }
    interpretar(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "avIU":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/todo.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Todo; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");





class Todo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), fila, columna);
        this.Operacion = select;
    }
    interpretar(arbol, tabla) {
        return this.Operacion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion); //PADRE SELECT    
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    CollectAtribute(key, cad, salidas) {
        if (key.getvalor().getTabla() != null) {
            for (let sim of key.getvalor().getTabla()) {
                salidas.setVariable(sim);
                if (sim instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                    if (sim.getAtributo().size != 0) {
                        sim.getAtributo().forEach(element => {
                            this.cadena += element.trim() + "\n";
                        });
                    }
                    if (sim.getvalor() instanceof _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                        this.CollectAtribute(sim, this.cadena, salidas);
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ "c5IQ":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/Todo.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Todo; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");





class Todo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), fila, columna);
        this.Operacion = select;
    }
    interpretar(arbol, tabla) {
        return this.Operacion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Operacion); //PADRE SELECT    
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    CollectAtribute(key, cad, salidas) {
        if (key.getvalor().getTabla() != null) {
            for (let sim of key.getvalor().getTabla()) {
                salidas.setVariable(sim);
                if (sim instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                    if (sim.getAtributo().size != 0) {
                        sim.getAtributo().forEach(element => {
                            this.cadena += element.trim() + "\n";
                        });
                    }
                    if (sim.getvalor() instanceof _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                        this.CollectAtribute(sim, this.cadena, salidas);
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ "cikY":
/*!*******************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Excepciones/NodoErrores.ts ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NodoErrores; });
class NodoErrores {
    constructor(tipo, desc, fila, columna) {
        this.tipoError = tipo;
        this.desc = desc;
        this.fila = fila;
        this.columna = columna;
    }
    getDesc() {
        return this.desc;
    }
    getTipoError() {
        return this.tipoError;
    }
    getcolumna() {
        return this.columna;
    }
    getFila() {
        return this.fila;
    }
    returnError() {
        return ('Se obtuvo: ' +
            this.tipoError +
            ' desc:{' +
            this.desc +
            '} en la fila: ' +
            this.fila +
            ' en la columna: ' +
            this.columna +
            '\n');
    }
}


/***/ }),

/***/ "dpWr":
/*!*************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Unset.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Unset; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Unset extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.Expresion = expresion;
    }
    interpretar(arbol, tabla) {
        // SI ES DE TIPO TERMINO 
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "floT":
/*!****************************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/AsignacionEstructura.ts ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AsignacionEstructura; });
/* harmony import */ var src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
/* harmony import */ var _XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Expresion_Aritmetica__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Expresion/Aritmetica */ "kJtm");
/* harmony import */ var _Expresion_Bit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Expresion/Bit */ "1+gB");
/* harmony import */ var _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Expresion/Identificador */ "zxbS");
/* harmony import */ var _Expresion_Logica__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Expresion/Logica */ "0zjc");
/* harmony import */ var _Expresion_Relacional__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Expresion/Relacional */ "VD77");
/* harmony import */ var _Expresion_Termino__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Expresion/Termino */ "98aF");
/* harmony import */ var _Expresion_Unario__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Expresion/Unario */ "pz2h");
/* harmony import */ var _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Reportes/reporteOp */ "I37V");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");












class AsignacionEstructura extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__["Instruccion"] {
    constructor(termino, l_corchetes, expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_11__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_11__["tipoDato"].CADENA), fila, columna);
        this.Temporales = termino;
        this.ListaCorchetes = l_corchetes;
        this.Expresion = expresion;
    }
    interpretar(arbol, tabla) {
        // si es Temporal y si es expresion las instrucciones, ListaCorchetes tipo Instruccion
        let idtemp = "";
        let cadena = "";
        if (this.Temporales != null) {
            if (this.Temporales instanceof _Expresion_Termino__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                let a = this.Temporales.interpretar(arbol, tabla);
                idtemp = a.contenido;
                cadena += idtemp + " ";
            }
            else if (this.Temporales instanceof _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                let a = this.Temporales.interpretar(arbol, tabla);
                idtemp = a.contenido;
                cadena += idtemp + " ";
            }
        }
        if (this.ListaCorchetes != null) {
            var stack = /\[/gi;
            if (this.ListaCorchetes instanceof Array) {
                for (var a of this.ListaCorchetes) {
                    let temporal = a;
                    let aux = temporal.interpretar(arbol, tabla);
                    cadena += "[" + aux.contenido + "] =";
                }
            }
        }
        if (this.Expresion != null) {
            if (this.Expresion instanceof _Expresion_Aritmetica__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                if (a.operadorder === "0" && a.operador === "+" || a.operadorder == 0 && a.operador === "+") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 12", idtemp + "= " + a.operadorizq + "+0;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + ";";
                }
                else if (a.operadorizq === "0" && a.operador === "+" || a.operadorizq == 0 && a.operador === "+") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 12", idtemp + "= 0+" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorder + ";";
                }
                else if (a.operadorder === "0" && a.operador === "-" || a.operadorder == 0 && a.operador === "-") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 13", idtemp + "=" + a.operadorizq + "-0;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + ";";
                }
                else if (a.operadorizq === "0" && a.operador === "-" || a.operadorizq == 0 && a.operador === "-") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 13", idtemp + "= 0-" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorder + ";";
                }
                else if (a.operadorder === "1" && a.operador === "*" || a.operadorder == 1 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 14", idtemp + "=" + a.operadorizq + "*1;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + ";";
                }
                else if (a.operadorizq === "1" && a.operador === "*" || a.operadorizq == 1 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 14", idtemp + "= 1*" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorder + ";";
                }
                else if (a.operadorder === "2" && a.operador === "*" || a.operadorder == 2 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 16", idtemp + "=" + a.operadorizq + "*2;", idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";";
                }
                else if (a.operadorizq === "2" && a.operador === "*" || a.operadorizq == 2 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 16", idtemp + "= 2*" + a.operadorder + ";", idtemp + "=" + a.operadorder + "+" + a.operadorder + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";";
                }
                else if (a.operadorder === "0" && a.operador === "*" || a.operadorder == 0 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 17", idtemp + "=" + a.operadorizq + "*0;", idtemp + "=" + "0;", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + "0;";
                }
                else if (a.operadorizq === "0" && a.operador === "*" || a.operadorizq == 0 && a.operador === "*") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 17", idtemp + "= 0*" + a.operadorder + ";", idtemp + "=" + "0;", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + "0;";
                }
                else if (a.operadorder === "1" && a.operador === "/" || a.operadorder == 1 && a.operador === "/") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 15", idtemp + "=" + a.operadorizq + "/1;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + a.operadorizq + ";";
                }
                else if (a.operadorizq === "0" && a.operador === "/" || a.operadorizq == 0 && a.operador === "/") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_10__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 18", idtemp + "= 0/" + a.operadorder + ";", idtemp + "=" + "0;", a.linea, a.columna);
                    arbol.setReporte(report);
                    return idtemp + "=" + "0;";
                }
                else if (a.operadorder === "0" && a.operador === "/" || a.operadorder == 0 && a.operador === "/") {
                    src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_0__["listaErrores"].push(new _XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_1__["default"]("Lexico Optimizacion", "No se puede operar /0 ", this.fila, this.columna));
                    return "";
                }
                else if (a.operadorizq === "1" && a.operador === "/" || a.operadorder == 1 && a.operador === "/") {
                    return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                }
                else {
                    return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                }
            }
            else if (this.Expresion instanceof _Expresion_Logica__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Relacional__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Bit__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Unario__WEBPACK_IMPORTED_MODULE_9__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                //SE HACE OTRO PROCEDIMIENTO
            }
            else if (this.Expresion instanceof _Expresion_Termino__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                //SE HACE OTRO PROCEDIMIENTO
            }
        }
    }
}


/***/ }),

/***/ "g+4Y":
/*!**************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Funciones/Upper.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Upper; });
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Tipo */ "QX8J");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion */ "xBmO");


class Upper extends src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(expresion, linea, columna) {
        super(new src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].ENTERO), linea, columna);
        this.expresion = expresion;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion instanceof src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"]) {
            console.log("entre");
            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);
            var resp = hola.toString();
            var uper = resp.toUpperCase();
            var val = this.Textocd3(arbol, hola.toString());
            arbol.codigo3d.push("//***print****");
            let countprint = arbol.getContadort();
            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);
            arbol.codigo3d.push("//*****ToUpperCase******");
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push(`toUpperCase();`);
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push("imprimirString();");
            arbol.codigo3d.push(`printf("%c",10);`);
            return uper;
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    Textocd3(arbol, valor) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);
        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
        let data = valor + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                    arbol.codigo3d.push("$t0=hp;");
                    arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                    arbol.codigo3d.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + 34 + ";");
                            arbol.codigo3d.push("guardarString();");
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                            arbol.codigo3d.push("guardarString();");
                        }
                        arbol.codigo3d.push("//agregamos el string al heap");
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + assci + ";");
                        arbol.codigo3d.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        arbol.codigo3d.push("$t0=hp;");
        arbol.codigo3d.push("$t1=-1;");
        arbol.codigo3d.push("guardarString();");
        const contadort = arbol.getContadort();
        arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        return `$t${contadorID}`;
    }
}


/***/ }),

/***/ "g7AS":
/*!********************************************************************!*\
  !*** ./src/app/paginas/tabla-simbolos/tabla-simbolos.component.ts ***!
  \********************************************************************/
/*! exports provided: TablaSimbolosComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TablaSimbolosComponent", function() { return TablaSimbolosComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/table */ "+0xr");


function TablaSimbolosComponent_th_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Id. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r16 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r16.identificador, " ");
} }
function TablaSimbolosComponent_th_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Tipo ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r17 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r17.tipo, " ");
} }
function TablaSimbolosComponent_th_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Ambito ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r18 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r18.entorno, " ");
} }
function TablaSimbolosComponent_th_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Contenido ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r19 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r19.contenido, " ");
} }
function TablaSimbolosComponent_th_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Linea ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r20 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r20.linea, " ");
} }
function TablaSimbolosComponent_th_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Columna ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r21 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r21.columna, " ");
} }
function TablaSimbolosComponent_th_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Posicion ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablaSimbolosComponent_td_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r22 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r22.posicion, " ");
} }
function TablaSimbolosComponent_tr_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 15);
} }
function TablaSimbolosComponent_tr_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 16);
} }
class TablaSimbolosComponent {
    constructor() {
        this.displayedColumns = [
            'ID',
            'TIPO',
            'AMBITO',
            'CONTENIDO',
            'LINEA',
            'COLUMNA',
            'POSICION'
        ];
        this.dataSource = '';
    }
    ngOnInit() {
        let info = window.localStorage.getItem('symbol');
        let otro = JSON.parse(info);
        this.dataSource = otro;
        console.log("Aqui abajo tabla simbolos");
        console.log(this.dataSource);
    }
}
TablaSimbolosComponent.ɵfac = function TablaSimbolosComponent_Factory(t) { return new (t || TablaSimbolosComponent)(); };
TablaSimbolosComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TablaSimbolosComponent, selectors: [["app-tabla-simbolos"]], decls: 27, vars: 3, consts: [[1, "tabla"], ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"], ["matColumnDef", "ID"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "TIPO"], ["matColumnDef", "AMBITO"], ["matColumnDef", "CONTENIDO"], ["matColumnDef", "LINEA"], ["matColumnDef", "COLUMNA"], ["matColumnDef", "POSICION"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]], template: function TablaSimbolosComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "TABLA DE SIMBOLOS");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "table", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](4, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, TablaSimbolosComponent_th_5_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, TablaSimbolosComponent_td_6_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](7, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, TablaSimbolosComponent_th_8_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, TablaSimbolosComponent_td_9_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](10, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, TablaSimbolosComponent_th_11_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, TablaSimbolosComponent_td_12_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](13, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, TablaSimbolosComponent_th_14_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, TablaSimbolosComponent_td_15_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](16, 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, TablaSimbolosComponent_th_17_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, TablaSimbolosComponent_td_18_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](19, 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, TablaSimbolosComponent_th_20_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, TablaSimbolosComponent_td_21_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](22, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, TablaSimbolosComponent_th_23_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, TablaSimbolosComponent_td_24_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, TablaSimbolosComponent_tr_25_Template, 1, 0, "tr", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](26, TablaSimbolosComponent_tr_26_Template, 1, 0, "tr", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](22);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);
    } }, directives: [_angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRow"]], styles: ["table[_ngcontent-%COMP%] {\r\n  position: relative;\r\n  width: 98%;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n  margin-left: 1%;\r\n  background-color: #0c7c6d;\r\n}\r\nh1[_ngcontent-%COMP%] {\r\n  margin-left: 35%;\r\n  margin-top: 5%;\r\n  margin-bottom: 5%;\r\n  font-size: 50px;\r\n  font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\r\n  background-color: transparent;\r\n}\r\n.tabla[_ngcontent-%COMP%] {\r\n  border: 2px solid #565658;\r\n  margin: auto;\r\n  width: 90%;\r\n  height: auto;\r\n  overflow: hidden;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhLXNpbWJvbG9zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLHdFQUF3RTtFQUN4RSw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osVUFBVTtFQUNWLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoidGFibGEtc2ltYm9sb3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDk4JTtcclxuICBtYXJnaW4tdG9wOiAxJTtcclxuICBtYXJnaW4tYm90dG9tOiAxJTtcclxuICBtYXJnaW4tbGVmdDogMSU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBjN2M2ZDtcclxufVxyXG5oMSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDM1JTtcclxuICBtYXJnaW4tdG9wOiA1JTtcclxuICBtYXJnaW4tYm90dG9tOiA1JTtcclxuICBmb250LXNpemU6IDUwcHg7XHJcbiAgZm9udC1mYW1pbHk6IFwiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkFyaWFsIE5hcnJvd1wiLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG4udGFibGEge1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICM1NjU2NTg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuIl19 */"] });


/***/ }),

/***/ "gX41":
/*!********************************************************!*\
  !*** ./src/app/paginas/ast-desc/ast-desc.component.ts ***!
  \********************************************************/
/*! exports provided: AstDescComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AstDescComponent", function() { return AstDescComponent; });
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vis */ "TycK");
/* harmony import */ var vis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vis__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");


class AstDescComponent {
    constructor() {
        this.contador = 1;
        this.cuerpo = '';
        this.dataSource = '';
        this.nodes = null;
        this.edges = null;
        this.network = null;
        this.directionInput = document.getElementById("direction");
        this.c = 0;
    }
    ngOnInit() {
        this.nodes = [];
        this.edges = [];
        var connectionCount = [];
        let info = window.localStorage.getItem('simbolos1');
        let contenido = JSON.parse(info);
        console.log(contenido);
        var nivel = 0;
        this.nodes.push({ id: this.c, label: this.getValor(contenido), nivel: nivel });
        this.nodes[this.c]["level"] = nivel;
        var hijos = this.recorrerAST(this.c, contenido, nivel);
        console.log(hijos);
        for (let nodo of hijos.nodos) {
            this.nodes.push({ id: nodo.id, label: nodo.label });
        }
        for (let enlace of hijos.enlaces) {
            this.edges.push({ from: enlace.id1, to: enlace.id2 });
        }
        for (let nodo of hijos.nodos) {
            this.nodes[nodo.id]["level"] = nodo.nivel;
        }
        var container = document.getElementById("mynetwork");
        var data = {
            nodes: this.nodes,
            edges: this.edges,
        };
        var options = {
            nodes: {
                borderWidth: 2,
                size: 30,
                color: {
                    border: '#46304E',
                    background: '#D297E9',
                },
                font: {
                    color: "#000000",
                    face: 'Century Gothic'
                }
            },
            edges: {
                smooth: {
                    type: "cubicBezier",
                    forceDirection: "vertical",
                    roundness: 0.4,
                }
            },
            layout: {
                randomSeed: undefined,
                improvedLayout: true,
                hierarchical: {
                    direction: "UD",
                    sortMethod: "hubsize"
                },
            },
            physics: false,
        };
        this.network = new vis__WEBPACK_IMPORTED_MODULE_0__["Network"](container, data, options);
        this.network.on("select", function (params) {
            document.getElementById("selection").innerText =
                "Selection: " + params.nodes;
        });
        let registros = [];
    }
    destroy() {
        if (this.network !== null) {
            this.network.destroy();
            this.network = null;
        }
    }
    recorrerAST(padre, nPadre, nivel) {
        var arr = { nodos: [], enlaces: [] };
        for (let hijo of this.getHijos(nPadre)) {
            nivel++;
            this.c++;
            arr.enlaces.push({ id1: padre, id2: this.c });
            arr.nodos.push({ id: this.c, label: this.getValor(hijo), nivel: nivel });
            var resultado = this.recorrerAST(this.c, hijo, nivel);
            arr.enlaces = arr.enlaces.concat(resultado.enlaces);
            arr.nodos = arr.nodos.concat(resultado.nodos);
        }
        return arr;
    }
    getValor(nodo) {
        return nodo.valor;
    }
    getHijos(nodo) {
        return nodo.listaNodos;
    }
}
AstDescComponent.ɵfac = function AstDescComponent_Factory(t) { return new (t || AstDescComponent)(); };
AstDescComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: AstDescComponent, selectors: [["app-ast-desc"]], decls: 1, vars: 0, consts: [["id", "mynetwork"]], template: function AstDescComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 0);
    } }, styles: ["#mynetwork[_ngcontent-%COMP%] {\r\n    width: 1362px;\r\n    height: 595px;\r\n    border: 1px solid rgb(255, 254, 254);\r\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzdC1kZXNjLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLG9DQUFvQztFQUN0QyIsImZpbGUiOiJhc3QtZGVzYy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI215bmV0d29yayB7XHJcbiAgICB3aWR0aDogMTM2MnB4O1xyXG4gICAgaGVpZ2h0OiA1OTVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyNTUsIDI1NCwgMjU0KTtcclxuICB9Il19 */"] });


/***/ }),

/***/ "h867":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/IfFuncion.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IfFuncion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Expresiones/Variable */ "95dx");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");



class IfFuncion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(condicion, insThen, linea, columna, insElse) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), linea, columna);
        this.condicion = condicion;
        this.insThen = insThen;
        this.insElse = insElse;
    }
    interpretar(arbol, tabla, tablaxml) {
        var value;
        value = this.condicion.interpretar(arbol, tabla, tablaxml);
        console.log("condicion ");
        console.log(value);
        var result = null;
        if (Boolean(value)) {
            for (let m of this.insThen) {
                if (m instanceof _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"]) {
                    result = m.interpretar(arbol, tabla, tablaxml);
                }
                result = this.insThen;
            }
        }
        else {
            if (this.insElse instanceof _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"]) {
                if (this.insElse instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    result = this.insElse.interpretar(arbol, tabla, tablaxml);
                    var buscar = tabla.getVariable(result);
                    if (buscar != null) {
                        result = buscar.getvalor();
                        return buscar;
                    }
                }
                else {
                    result = this.insElse.interpretar(arbol, tabla, tablaxml);
                }
            }
            else {
                result = this.insElse;
            }
            console.log(result);
        }
        return result;
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "iNLt":
/*!************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Identificador.ts ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Identificador; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");



class Identificador extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador.toLowerCase();
    }
    getNodoAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.identificador);
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        let contador = arbol.getContadort();
        let stack = arbol.getSTACK();
        arbol.codigo3d.push(`// declaracion LET ${this.identificador}`);
        arbol.codigo3d.push(`$t${contador}=sp+${stack};`);
        return this.identificador;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "iW93":
/*!**************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Funciones/Lower.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Lower; });
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Simbolos/Tipo */ "QX8J");
/* harmony import */ var src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion */ "xBmO");


class Lower extends src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(expresion, linea, columna) {
        super(new src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["default"](src_app_Backend_XQUERY_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_0__["tipoDato"].ENTERO), linea, columna);
        this.expresion = expresion;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion instanceof src_app_Backend_XQUERY_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"]) {
            console.log("entre");
            var hola = this.expresion.interpretar(arbol, tabla, tablaxml);
            var resp = hola.toString();
            var low = resp.toLowerCase();
            var val = this.Textocd3(arbol, hola.toString());
            arbol.codigo3d.push("//***print****");
            let countprint = arbol.getContadort();
            arbol.codigo3d.push(`$t${countprint}=stack[(int)${val}]; `);
            arbol.codigo3d.push("//*****ToLowerCase******");
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push(`toLowerCase();`);
            arbol.codigo3d.push(`$t0=$t${countprint};`);
            arbol.codigo3d.push("imprimirString();");
            arbol.codigo3d.push(`printf("%c",10);`);
            return low;
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    Textocd3(arbol, valor) {
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        arbol.codigo3d.push(`// declaracion PARA TOLOWERCASE `);
        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
        let data = valor + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                    arbol.codigo3d.push("$t0=hp;");
                    arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                    arbol.codigo3d.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + 34 + ";");
                            arbol.codigo3d.push("guardarString();");
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                            arbol.codigo3d.push("guardarString();");
                        }
                        arbol.codigo3d.push("//agregamos el string al heap");
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + assci + ";");
                        arbol.codigo3d.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        arbol.codigo3d.push("$t0=hp;");
        arbol.codigo3d.push("$t1=-1;");
        arbol.codigo3d.push("guardarString();");
        const contadort = arbol.getContadort();
        arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        return `$t${contadorID}`;
    }
}


/***/ }),

/***/ "iolQ":
/*!******************************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosExpresion.ts ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AtributoExpresion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class AtributoExpresion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, expresion, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.Operacion = select;
        this.expresion = expresion;
    }
    interpretar(arbol, tabla) {
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("ATRIBUTO"); //PADRE SELECT
        if (this.expresion != null) {
            nodo.agregarHijo(this.Operacion);
            nodo.agregarHijoAST(this.expresion.getNodosAST());
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "j/FN":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/Logica.ts ***!
  \****************************************************************/
/*! exports provided: default, Logicas */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Logica; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logicas", function() { return Logicas; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "E7Rf");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
//relacionales




class Logica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(relacion, fila, columna, cond1, cond2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.loogica = relacion;
        if (!cond2)
            this.condExcep = cond1;
        else {
            this.cond1 = cond1;
            this.cond2 = cond2;
        }
    }
    getNodosAST() {
        var _a, _b;
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('LOGICO');
        if (this.condExcep != null) {
            nodo.agregarHijo(this.loogica + '', 'log', this.loogica);
            nodo.agregarHijoAST(this.condExcep.getNodosAST());
        }
        else {
            nodo.agregarHijoAST((_a = this.cond1) === null || _a === void 0 ? void 0 : _a.getNodosAST());
            nodo.agregarHijo(this.loogica + '', 'log', this.loogica);
            nodo.agregarHijoAST((_b = this.cond2) === null || _b === void 0 ? void 0 : _b.getNodosAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla) {
        var _a, _b;
        let izq, der, unico;
        izq = der = unico = null;
        if (this.condExcep != null) {
            unico = this.condExcep.interpretar(arbol, tabla);
            if (unico instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return unico;
        }
        else {
            izq = (_a = this.cond1) === null || _a === void 0 ? void 0 : _a.interpretar(arbol, tabla);
            if (izq instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return izq;
            der = (_b = this.cond2) === null || _b === void 0 ? void 0 : _b.interpretar(arbol, tabla);
            if (der instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return der;
        }
        //inicio comparacion
        switch (this.loogica) {
            case Logicas.AND:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return izq && der ? true : false;
            case Logicas.OR:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return izq || der ? true : false;
            case Logicas.NOT:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return !unico;
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}
var Logicas;
(function (Logicas) {
    Logicas[Logicas["OR"] = 0] = "OR";
    Logicas[Logicas["AND"] = 1] = "AND";
    Logicas[Logicas["NOT"] = 2] = "NOT";
})(Logicas || (Logicas = {}));


/***/ }),

/***/ "jtD6":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/BarrasNodo.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BarrasNodo; });
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Expresiones/Aritmetica */ "0NkC");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
/* harmony import */ var _AtributosSimples__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AtributosSimples */ "6clo");
/* harmony import */ var _SelectRoot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SelectRoot */ "0iGS");
/* harmony import */ var _todo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./todo */ "avIU");









const inicio = __webpack_require__(/*! ../../../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
class BarrasNodo extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__["Instruccion"] {
    constructor(barra1, expresion, fila, columna, barra2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_5__["tipoDato"].ENTERO), fila, columna);
        this.contenido = "";
        this.Barra = barra1;
        this.Barra2 = barra2;
        this.Operacion = expresion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_3__["default"]('INSTRUCCION'); //PADRE SELECT
        var nodsBarras = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_3__["default"](this.Barra);
        nodo.agregarHijoAST(nodsBarras);
        if (this.Barra2 != null) {
            /*nodo.agregarHijo(this.Barra2)*/
            var nodsBarras2 = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_3__["default"](this.Barra2);
            nodo.agregarHijoAST(nodsBarras2);
        }
        if (this.Operacion != null) {
            nodo.agregarHijoAST(this.Operacion.getNodosAST());
        }
        return nodo;
    }
    //BARRA: SELECCIONA DESDE EL NODO RAIZ
    //DOBLE BARRA: SELECCIONA LOS NODOS QUE HAGAN MATCH EN EL DOCUMENTO NO IMPORTANDO DONDE ESTEN DESDE EL NODO ACTUAL 
    interpretar(arbol, tabla) {
        //arbol.gettablaGlobal();
        //BARRA
        console.log('BARRA');
        console.log(tabla);
        this.variablePublica = this.Operacion.interpretar(arbol, tabla);
        console.log(this.Operacion);
        //if (variable != null) {
        if (this.Barra2 == null) {
            console.log("Aqui esta el arbol");
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
            let cadena = '';
            let error = '';
            if (this.Operacion instanceof _AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    console.log(this.Operacion.cadena);
                    return this.Operacion.cadena;
                }
                else {
                    return "No hay atributos";
                }
            }
            else if (this.Operacion instanceof _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_4__["default"]) {
            }
            else if (this.Operacion instanceof _SelectRoot__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                if (this.variablePublica === ".") {
                    for (var key of tabla.getTabla()) {
                        salidas.setVariable(key);
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
                else {
                    //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR
                    var temporal = tabla.tablaAnterior;
                    if (temporal != null) {
                        for (var i of temporal.tablaActual) {
                            console.log(inicio.ArbolGlobalReporte);
                            for (var b of inicio.ArbolGlobalReporte) {
                                if (b.identificador === i.identificador && b.entorno == "Global") {
                                    return "Nodo no encontado: [object XMLDocument]";
                                }
                            }
                            salidas.setVariable(i);
                        }
                    }
                    else {
                        cadena = "Nodo no encontado: [object XMLDocument]";
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
            }
            else if (this.Operacion instanceof _todo__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                for (var key of tabla.getTabla()) {
                    salidas.setVariable(key);
                }
                if (cadena != '') {
                    return cadena;
                }
                return salidas;
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == this.variablePublica) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    else {
                        error = "Nodo no encontrado ";
                        console.log(error);
                    }
                }
                if (cadena != '') {
                    return cadena;
                }
                else if (error != '') {
                    return error;
                }
                console.log("OBJETOSSALIDA");
                console.log(salidas);
                salidas.setAnterior(tabla);
                return salidas;
            }
        }
        else { // **************************************ESTE ES DOBLE BARRA******************************
            console.log("entro doble barra");
            //DOBLE BARRA
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
            let cadena = '';
            /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */
            if (this.Operacion instanceof _AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    return this.Operacion.cadena;
                }
                return this.variablePublica;
            }
            else if (this.Operacion instanceof _todo__WEBPACK_IMPORTED_MODULE_8__["default"]) {
            }
            else if (this.Operacion instanceof _SelectRoot__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                if (this.variablePublica === ".") {
                    for (var key of tabla.getTabla()) {
                        salidas.setVariable(key);
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
                else {
                    //SI EN CASO FUERA .. ENTONCES REGRESA AL NODO ANTERIOR
                    var temporal = tabla.tablaAnterior;
                    if (temporal != null) {
                        for (var i of temporal.tablaActual) {
                            console.log(inicio.ArbolGlobalReporte);
                            for (var b of inicio.ArbolGlobalReporte) {
                                if (b.identificador === i.identificador && b.entorno == "Global") {
                                    return "Nodo no encontado: [object XMLDocument]";
                                }
                            }
                            salidas.setVariable(i);
                        }
                    }
                    else {
                        cadena = "Nodo no encontado: [object XMLDocument]";
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    return salidas;
                }
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == this.variablePublica) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    console.log("OBJETOSSALIDA");
                    console.log(salidas);
                    salidas.setAnterior(tabla);
                    return salidas;
                }
            }
        }
    }
    CollectAll(key, cad, salidas) {
        if (key.getvalor().getTabla() != null) {
            for (let sim of key.getvalor().getTabla()) {
                salidas.setVariable(sim);
                if (sim instanceof src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_0__["default"]) {
                    if (sim.getAtributo().size != 0) {
                        sim.getAtributo().forEach(element => {
                            cad += element.trim() + "\n";
                        });
                    }
                    if (sim.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        this.CollectAll(sim, cad, salidas);
                    }
                }
            }
        }
    }
    codigo3D(arbol, tabla) {
        let variable = this.Operacion.codigo3D(arbol, tabla);
        console.log(this.Operacion);
        //if (variable != null) {
        if (this.Barra2 == null) {
            console.log("Aqui esta el arbol");
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
            let cadena = '';
            let error = '';
            if (this.Operacion instanceof _AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    console.log(this.Operacion.cadena);
                    return this.Operacion.cadena;
                }
                return variable;
            }
            else if (this.Operacion instanceof _Expresiones_Aritmetica__WEBPACK_IMPORTED_MODULE_4__["default"]) {
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == variable) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    else {
                        error = "Nodo no encontrado ";
                        console.log(error);
                    }
                }
                if (cadena != '') {
                    return cadena;
                }
                else if (error != '') {
                    return error;
                }
                console.log("OBJETOSSALIDA");
                console.log(salidas);
                return salidas;
            }
        }
        else {
            console.log("entro doble barra");
            //DOBLE BARRA
            let salidas = new src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]();
            let cadena = '';
            /**ESTE SERVIRIA CUANDO ES TRIPO ATRIBUTO SIMPLE */
            if (this.Operacion instanceof _AtributosSimples__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SECCION DE LO QUE DEVUELVA ATRIBUTOS SIMPLES QUE SON * Y .
                if (this.Operacion.cadena != '') {
                    return this.Operacion.cadena;
                }
                return variable;
            }
            else {
                for (var key of tabla.getTabla()) {
                    if (key.getidentificador() == variable) {
                        console.log(key.getidentificador());
                        if (key.getvalor() instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                            for (let sim of key.getvalor().getTabla()) {
                                salidas.setVariable(sim);
                            }
                        }
                        else {
                            cadena += key.getvalor().replaceAll("%20", " ").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&").replaceAll("&apos;", "'").replaceAll("&quot;", "\"").replaceAll("   ", "\n");
                        }
                    }
                    if (cadena != '') {
                        return cadena;
                    }
                    console.log("OBJETOSSALIDA");
                    console.log(salidas);
                    return salidas;
                }
            }
        }
    }
}


/***/ }),

/***/ "k6K8":
/*!**************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Conversion.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Conversion; });
/* harmony import */ var src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
/* harmony import */ var _XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Termino */ "98aF");





class Conversion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__["Instruccion"] {
    constructor(operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), fila, columna);
        this.tipo = operando;
        this.expresion = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        let variable = this.expresion.interpretar(arbol, tabla);
        if (this.tipo === "int") {
            if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                return "(int) " + variable.contenido;
            }
        }
        else if (this.tipo === "double") {
            if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                return "(double) " + variable.contenido;
            }
        }
        else if (this.tipo === "float") {
            if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                return "(float) " + variable.contenido;
            }
        }
        else if (this.tipo === "char") {
            if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                return "(char) " + variable.contenido;
            }
        }
        else {
            //ERROR SEMANTICO SON TODOS LOS TIPOS SOPORTADOS POR C
            src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_0__["listaErrores"].push(new _XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_1__["default"]("Semantico Optimizacion", "Tipo de conversion no soportados por c", this.fila, this.columna));
        }
    }
}


/***/ }),

/***/ "kJtm":
/*!**************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Aritmetica.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Aritmetica; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Termino */ "98aF");



class Aritmetica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion1, operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion1 = expresion1;
        this.operando = operando;
        this.expresion2 = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        var operadorizq = this.expresion1.interpretar(arbol, tabla);
        var operadorder = this.expresion2.interpretar(arbol, tabla);
        if (operadorizq != null && operadorder != null) {
            if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"] && this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                if (this.operando === "+") {
                    // t0= t0+0   o   t0=0+t0
                    if (operadorder.contenido == 0) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 0) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                }
                else if (this.operando === "-") {
                    // t0= t0-0   o   t0=0-t0
                    if (operadorder.contenido == 0) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 0) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                }
                else if (this.operando === "*") {
                    // t0= t0*1   o   t0=1*t0
                    if (operadorder.contenido == 1) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 1) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorder.contenido == 2) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 2) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorder.contenido == 0) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 0) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                }
                else if (this.operando === "/") {
                    // t0= t0/1   o   t0=1*t0
                    if (operadorder.contenido == 1) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 1) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    if (operadorder.contenido != 0) {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else if (operadorizq.contenido == 0) {
                        return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                    else {
                        return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                    }
                }
            }
            else {
                // en este puede venir contenido ya sea de identificador cosa que no acepta el anterior
                if (operadorder.contenido != null && operadorizq.contenido != null) {
                    if (this.operando === "+") {
                        // t0= t0+0   o   t0=0+t0
                        if (operadorder.contenido == 0) {
                            return { operadorder: operadorder.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 0) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (this.operando === "-") {
                        // t0= t0-0   o   t0=0-t0
                        if (operadorder.contenido == 0) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 0) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (this.operando === "*") {
                        // t0= t0*1   o   t0=1*t0
                        if (operadorder.contenido == 1) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 1) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorder.contenido == 2) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 2) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorder.contenido == 0) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 0) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                        }
                    }
                    else if (this.operando === "/") {
                        // t0= t0/1   o   t0=1*t0
                        if (operadorder.contenido == 1) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 1) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        if (operadorder.contenido != 0) {
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: operadorizq.contenido, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else if (operadorizq.contenido == 0) {
                            return { operadorder: operadorder.contenido, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
                else {
                    // en este acepta si hay uno anterior con la estructura 
                    //{ operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() }
                    // analiza las posibilidades
                    if (operadorder.operadorder != null) {
                        if (this.expresion1 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            return { operadorder: arm, operador: this.operando, operadorizq: operadorizq.contenido.toString(), linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                    else if (operadorizq.operadorder != null) {
                        if (this.expresion2 instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: arm, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                        else {
                            let arm1 = operadorder.operadorder.toString() + operadorder.operador + operadorder.operadorizq.toString();
                            let arm2 = operadorizq.operadorder.toString() + operadorizq.operador + operadorizq.operadorizq.toString();
                            return { operadorder: arm1, operador: this.operando, operadorizq: arm2, linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ "kaQ3":
/*!****************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/XMLgraph.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var XMLgraph = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [2, 11], $V1 = [1, 3], $V2 = [1, 4], $V3 = [1, 5], $V4 = [5, 9, 10, 13, 16, 17], $V5 = [1, 11], $V6 = [2, 14], $V7 = [10, 12, 14, 15], $V8 = [5, 10, 16], $V9 = [1, 19];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "OBJETO": 4, "EOF": 5, "INSTRUCCION": 6, "CUERPO": 7, "OBJETOS": 8, "MENORQUEESPECIAL": 9, "IDENTIFICADOR": 10, "L_ATRIBUTOS": 11, "MAYORQUEESPECIAL": 12, "MENORQUE": 13, "SELFCLOSE": 14, "MAYORQUE": 15, "SALIDA": 16, "COMENTARIOS": 17, "ATRIBUTO": 18, "IGUAL": 19, "CADENA": 20, "QUOTE": 21, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "CUERPO", 9: "MENORQUEESPECIAL", 10: "IDENTIFICADOR", 12: "MAYORQUEESPECIAL", 13: "MENORQUE", 14: "SELFCLOSE", 15: "MAYORQUE", 16: "SALIDA", 17: "COMENTARIOS", 19: "IGUAL", 20: "CADENA", 21: "QUOTE" },
        productions_: [0, [3, 2], [6, 1], [6, 1], [8, 2], [8, 1], [4, 5], [4, 5], [4, 8], [4, 7], [4, 1], [4, 0], [11, 2], [11, 1], [11, 0], [18, 3], [18, 3]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return "<START> ::= <OBJETO> <EOF>\n" + $$[$0 - 1];
                    break;
                case 2:
                    this.$ = $$[$0] + "<INSTRUCCION> ::= <CUERPO>\n" + "<INSTRUCCION> ::= " + " \n";
                    break;
                case 3:
                    this.$ = $$[$0] + "<INSTRUCCION> ::= <OBJETOS>\n";
                    break;
                case 4:
                    this.$ = "<OBJETOS> ::= <OBJETOS><OBJETO>\n" + $$[$0 - 1] + $$[$0];
                    break;
                case 5:
                    this.$ = "<OBJETOS> ::= <OBJETO>\n" + $$[$0];
                    break;
                case 6:
                    this.$ = "<OBJETO> ::= <MENORQUEESPECIAL> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUEESPECIAL> <INSTRUCCION>\n<OBJETO> ::= <?" + $$[$0 - 3] + " " + $$[$0 - 2] + "?>\n" + $$[$0];
                    break;
                case 7:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <SELFCLOSE> <INSTRUCCION>\n<OBJETO> ::= <" + $$[$0 - 3] + " " + $$[$0 - 2] + "/>\n" + $$[$0];
                    break;
                case 8:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <SALIDA> <IDENTIFICADOR> <MAYORQUE>\n<OBJETO> ::= <" + $$[$0 - 6] + $$[$0 - 5] + ">\n" + $$[$0 - 3] + "<" + $$[$0 - 1] + ">\n";
                    break;
                case 9:
                    this.$ = "<OBJETO> ::= <MENORQUE> <IDENTIFICADOR> <L_ATRIBUTOS> <MAYORQUE> <INSTRUCCION> <IDENTIFICADOR> <MAYORQUE>\n<OBJETO> ::= <" + $$[$0 - 5] + $$[$0 - 4] + ">\n" + $$[$0 - 2] + "<" + $$[$0 - 1] + ">\n";
                    break;
                case 10:
                    this.$ = "<OBJETO> ::= <COMENTARIOS>\n<OBJETO> ::= <!--" + $$[$0] + "-->\n";
                    break;
                case 11:
                case 14:
                    this.$ = "";
                    break;
                case 12:
                    this.$ = "<L_ATRIBUTOS> ::= <L_ATRIBUTOS><ATRIBUTO>\n" + $$[$0 - 1] + $$[$0] + "\n";
                    break;
                case 13:
                    this.$ = "<L_ATRIBUTOS> ::= <ATRIBUTO>\n" + $$[$0] + "\n";
                    break;
                case 15:
                case 16:
                    this.$ = "<ATRIBUTO> ::= <IDENTIFICADOR><IGUAL><CADENA>\n<ATRIBUTO> ::= " + $$[$0 - 2] + "= \"" + $$[$0] + "\"\n";
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 5: $V0, 9: $V1, 13: $V2, 17: $V3 }, { 1: [3] }, { 5: [1, 6] }, { 10: [1, 7] }, { 10: [1, 8] }, o($V4, [2, 10]), { 1: [2, 1] }, { 10: $V5, 11: 9, 12: $V6, 18: 10 }, o([14, 15], $V6, { 18: 10, 11: 12, 10: $V5 }), { 10: $V5, 12: [1, 13], 18: 14 }, o($V7, [2, 13]), { 19: [1, 15] }, { 10: $V5, 14: [1, 16], 15: [1, 17], 18: 14 }, o($V8, $V0, { 6: 18, 8: 20, 4: 21, 7: $V9, 9: $V1, 13: $V2, 17: $V3 }), o($V7, [2, 12]), { 20: [1, 22], 21: [1, 23] }, o($V8, $V0, { 8: 20, 4: 21, 6: 24, 7: $V9, 9: $V1, 13: $V2, 17: $V3 }), o([10, 16], $V0, { 8: 20, 4: 21, 6: 25, 7: $V9, 9: $V1, 13: $V2, 17: $V3 }), o($V4, [2, 6]), o($V4, [2, 2]), o($V8, [2, 3], { 4: 26, 9: $V1, 13: $V2, 17: $V3 }), o($V4, [2, 5]), o($V7, [2, 15]), o($V7, [2, 16]), o($V4, [2, 7]), { 10: [1, 28], 16: [1, 27] }, o($V4, [2, 4]), { 10: [1, 29] }, { 15: [1, 30] }, { 15: [1, 31] }, o($V4, [2, 9]), o($V4, [2, 8])],
        defaultActions: { 6: [2, 1] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    var palabra = "";
    var palabra1 = "";
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0:
                        break;
                    case 1:
                        console.log("Comenzo el comentario");
                        this.begin("Comentario");
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    case 4:
                        console.log("Termino el comentario");
                        this.popState();
                        break;
                    case 5:
                        console.log("Texto dentro del comentario: " + yy_.yytext + " :(");
                        return 17;
                        break;
                    case 6:
                        this.begin('cuerpo');
                        return 15;
                        break;
                    case 7:
                        this.begin('INITIAL');
                        if (palabra.replaceAll(" ", "") == "")
                            return 16;
                        yy_.yytext = palabra;
                        palabra = "";
                        if (palabra.replaceAll(" ", "") == "")
                            return 7;
                        break;
                    case 8:
                        this.begin('INITIAL');
                        return 13;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 9:
                        this.begin('INITIAL');
                        return 14;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 10:
                        palabra += yy_.yytext;
                        break;
                    case 11:
                        return 12;
                        break;
                    case 12:
                        return 16;
                        break;
                    case 13:
                        return 14;
                        break;
                    case 14:
                        return 9;
                        break;
                    case 15:
                        return 13;
                        break;
                    case 16:
                        return 19;
                        break;
                    case 17:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 20;
                        break;
                    case 18:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 21;
                        break;
                    case 19:
                        return 10;
                        break;
                    case 20:
                        return 5;
                        break;
                    case 21:
                        break;
                    case 22:
                        break;
                    case 23:
                        break;
                    case 24:
                        console.log("Error Lexico");
                        break;
                }
            },
            rules: [/^(?:\/\/.*)/i, /^(?:<!--)/i, /^(?:[ \r\t]+)/i, /^(?:\n)/i, /^(?:-->)/i, /^(?:[^"-->"]+)/i, /^(?:>)/i, /^(?:<\/)/i, /^(?:<)/i, /^(?:<)/i, /^(?:.)/i, /^(?:\?>)/i, /^(?:<\/)/i, /^(?:\/>)/i, /^(?:<\?)/i, /^(?:<)/i, /^(?:=)/i, /^(?:"[^\"]*")/i, /^(?:'[^\']*')/i, /^(?:([a-zA-Z])[a-zA-Z0-9_]*)/i, /^(?:$)/i, /^(?:[ \r\t]+)/i, /^(?:\n+)/i, /^(?:\s+)/i, /^(?:.)/i],
            conditions: { "Comentario": { "rules": [2, 3, 4, 5], "inclusive": false }, "xml": { "rules": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "inclusive": true }, "cuerpo": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "inclusive": true }, "INITIAL": { "rules": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = XMLgraph;
    exports.Parser = XMLgraph.Parser;
    exports.parse = function () { return XMLgraph.parse.apply(XMLgraph, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 1).readFileSync(__webpack_require__(/*! path */ 2).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "l0XW":
/*!*************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Simbolos/Arbol.ts ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Arbol; });
/* harmony import */ var _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");

class Arbol {
    constructor(instrucciones) {
        this.consola = '';
        this.instrucciones = instrucciones;
        this.consola = '';
        this.tablaGlobal = new _XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_0__["default"]();
        this.NodoErrores = new Array();
        this.listaSimbolos = new Array();
        this.dot = "";
        this.c = 0;
        /*CODIGO 3 DIRECCIONES*/
        this.codigo3d = new Array();
        this.Encabezadocodigo3d = new Array();
        this.Encabezadocodigo3d.push("double heap[30101999];");
        this.Encabezadocodigo3d.push("double stack[30101999];");
        this.Encabezadocodigo3d.push("char Numero[500];");
        this.Encabezadocodigo3d.push("double hp;");
        this.Encabezadocodigo3d.push("double sp;");
        this.Encabezadocodigo3d.push("void potencia(){");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("if($t1>0)goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("$t2=$t2*$t0;");
        this.Encabezadocodigo3d.push("$t1=$t1-1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // lafuncion imprimir
        this.Encabezadocodigo3d.push("void imprimirString(){");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1)goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("printf(\"%c\",(int)$t1);");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // metodo guardar en hepp el string
        this.Encabezadocodigo3d.push("void guardarString(){");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t1;");
        this.Encabezadocodigo3d.push("hp=hp+1;");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // numero a string
        this.Encabezadocodigo3d.push("void NumberToString(){");
        this.Encabezadocodigo3d.push('snprintf(Numero, 500, "%f", $t2);');
        this.Encabezadocodigo3d.push("$t3=0;");
        this.Encabezadocodigo3d.push("$t6=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==0) goto L1;");
        this.Encabezadocodigo3d.push("if($t4==46) goto L2;"); // si es un punto
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=$t4;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t3=$t3+1;");
        this.Encabezadocodigo3d.push("$t6=$t6+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:"); // aqui son los decimales
        this.Encabezadocodigo3d.push("$t5=$t3;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t3=$t3+1;");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==48)goto L3;");
        this.Encabezadocodigo3d.push("if($t4==0)goto L4;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("if($t5>$t6)goto L5;");
        this.Encabezadocodigo3d.push("goto L1;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t6];");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=$t4;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t6=$t6+1;");
        this.Encabezadocodigo3d.push("if($t5<$t6)goto L1;");
        this.Encabezadocodigo3d.push("if($t5>=$t6)goto L5;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // bool a string
        this.Encabezadocodigo3d.push("void BooleanToString(){");
        this.Encabezadocodigo3d.push('snprintf(Numero, 500, "%f", $t2);');
        this.Encabezadocodigo3d.push("$t3=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t4=Numero[(int)$t3];");
        this.Encabezadocodigo3d.push("if($t4==49) goto L1;"); // 49 es 1
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:"); // imprimir true
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=116;"); //t
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=114;"); //r
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=117;"); //u
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=101;"); //e
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("goto L3;");
        this.Encabezadocodigo3d.push("L2:"); // imprimir false
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=102;"); //f
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=97;"); //a
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=108;"); //l
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=115;"); //s
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=101;"); //e
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // concatenarString
        this.Encabezadocodigo3d.push("void concatenarString(){");
        this.Encabezadocodigo3d.push("L0:"); // el valor del caracter
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];"); // el valor del caracter
        this.Encabezadocodigo3d.push("if($t1==0) goto L3;");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("heap[(int)hp]=$t1;");
        this.Encabezadocodigo3d.push("hp=hp+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // cantidadString
        this.Encabezadocodigo3d.push("void tamanioString(){");
        this.Encabezadocodigo3d.push("$t4=0;");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1==-2) goto L3;");
        this.Encabezadocodigo3d.push("if($t1==-3) goto L3;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<0)goto L4;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t4=$t4+2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // comparar string
        this.Encabezadocodigo3d.push("void compararString(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t2=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("$t3=heap[(int)$t1];");
        this.Encabezadocodigo3d.push("if($t2!=$t3)goto L2;");
        this.Encabezadocodigo3d.push("if($t2==-1) goto L3;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=$t1+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("$t4=0;");
        this.Encabezadocodigo3d.push("goto L5;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t4=1;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // charat
        this.Encabezadocodigo3d.push("void CharAt(){");
        this.Encabezadocodigo3d.push("$t5=0;");
        this.Encabezadocodigo3d.push("$t4=-1;"); // contador
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1==-2) goto L3;");
        this.Encabezadocodigo3d.push("if($t1==-3) goto L3;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("if($t3==$t4) goto L10;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<0)goto L4;");
        this.Encabezadocodigo3d.push("$t4=$t4+1;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t4=$t4+2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t5=1;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // toLowerCase
        this.Encabezadocodigo3d.push("void toLowerCase(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;"); // salida
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1<91)goto L3;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("if($t1>64)goto L4;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t2=$t1+32;");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        //toUpperCase
        this.Encabezadocodigo3d.push("void toUpperCase(){");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1!=-1) goto L1;");
        this.Encabezadocodigo3d.push("goto L2;"); // salida
        this.Encabezadocodigo3d.push("L1:");
        this.Encabezadocodigo3d.push("if($t1<123)goto L3;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("if($t1>96)goto L4;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t2=$t1-32;");
        this.Encabezadocodigo3d.push("heap[(int)$t0]=$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("goto L0;");
        this.Encabezadocodigo3d.push("L2:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        //imprimir Arreglo
        this.Encabezadocodigo3d.push("void PrintArreglo(){");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==240)goto L0;");
        this.Encabezadocodigo3d.push("// 240 es un numero para ver si el arreglo tiene VALORES");
        this.Encabezadocodigo3d.push("if($t1==241)goto L4;");
        this.Encabezadocodigo3d.push("// 241 es un numero donde muestra la posicion de otro arreglo");
        this.Encabezadocodigo3d.push("if($t1==242)goto L5;");
        this.Encabezadocodigo3d.push("// 242 es un numero donde muestra la posicion de otro arreglo");
        this.Encabezadocodigo3d.push("L0:");
        this.Encabezadocodigo3d.push("$t0=$t0+2;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==239)goto L1;");
        this.Encabezadocodigo3d.push("if($t1==238)goto L2;");
        this.Encabezadocodigo3d.push("if($t1==237)goto L3;");
        this.Encabezadocodigo3d.push("L1:"); // es un string
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L1;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t2;");
        this.Encabezadocodigo3d.push("goto L1;");
        this.Encabezadocodigo3d.push("L2:"); // es un numero
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L2;");
        this.Encabezadocodigo3d.push("$t8=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];"); // usar t7
        this.Encabezadocodigo3d.push("$t7=hp;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("NumberToString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=-1;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=$t7;");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t8;");
        this.Encabezadocodigo3d.push("goto L2;");
        this.Encabezadocodigo3d.push("L3:");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t1==-2)goto L3;");
        this.Encabezadocodigo3d.push("$t8=$t0;");
        this.Encabezadocodigo3d.push("$t0=heap[(int)$t0];"); // usar t7
        this.Encabezadocodigo3d.push("$t7=hp;");
        this.Encabezadocodigo3d.push("$t2=$t0;");
        this.Encabezadocodigo3d.push("BooleanToString();");
        this.Encabezadocodigo3d.push("$t0=hp;");
        this.Encabezadocodigo3d.push("$t1=-1;");
        this.Encabezadocodigo3d.push("guardarString();");
        this.Encabezadocodigo3d.push("$t0=$t7;");
        this.Encabezadocodigo3d.push("imprimirString();");
        this.Encabezadocodigo3d.push("printf(\"%c\",32);");
        this.Encabezadocodigo3d.push("$t0=$t8;");
        this.Encabezadocodigo3d.push("goto L3;");
        this.Encabezadocodigo3d.push("L4:");
        this.Encabezadocodigo3d.push("$t0=$t0+3;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("$t9=$t0;");
        this.Encabezadocodigo3d.push("$t0=$t1;");
        this.Encabezadocodigo3d.push("PrintArreglo();");
        this.Encabezadocodigo3d.push("$t0=$t9;");
        this.Encabezadocodigo3d.push("$t0=$t0-2;");
        this.Encabezadocodigo3d.push("goto L4;");
        this.Encabezadocodigo3d.push("L5:");
        this.Encabezadocodigo3d.push("$t0=$t0+3;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1==-1)goto L20;");
        this.Encabezadocodigo3d.push("$t10=$t0;");
        this.Encabezadocodigo3d.push("$t0=$t1;");
        this.Encabezadocodigo3d.push("PrintArreglo();");
        this.Encabezadocodigo3d.push("$t0=$t10;");
        this.Encabezadocodigo3d.push("$t0=$t0-2;");
        this.Encabezadocodigo3d.push("goto L5;");
        this.Encabezadocodigo3d.push("L20:");
        this.Encabezadocodigo3d.push("printf(\"%c\",10);");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        // obtener la pocicion en el arreglo
        this.Encabezadocodigo3d.push("void ObtenerPosArreglo(){");
        this.Encabezadocodigo3d.push("if($t0==-1)goto L20;");
        this.Encabezadocodigo3d.push("if($t0==-2)goto L20;");
        this.Encabezadocodigo3d.push("$t0=$t0+1;");
        this.Encabezadocodigo3d.push("$t1=heap[(int)$t0];");
        this.Encabezadocodigo3d.push("if($t1<=$t2)goto L20;");
        this.Encabezadocodigo3d.push("$t5=2+$t2;");
        this.Encabezadocodigo3d.push("$t0=$t0+$t5;");
        this.Encabezadocodigo3d.push("goto L10;");
        this.Encabezadocodigo3d.push("L20:");
        this.Encabezadocodigo3d.push("$t0=-1;");
        this.Encabezadocodigo3d.push("L10:");
        this.Encabezadocodigo3d.push("return;");
        this.Encabezadocodigo3d.push("}");
        this.etiquetasS = new Array();
        this.pila = new Array();
        this.contadort = 15; //T
        this.etiquetasL = 5; //L
        this.contadorP = 0;
        this.contadorS = 0;
    }
    getEncoding() {
        return this.encoding;
    }
    setEncoding(encoding) {
        this.encoding = encoding;
    }
    getSimbolos() {
        return this.listaSimbolos;
    }
    BuscarTipo(identificador) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador() == identificador) {
                return elemento.getTipo().toString();
            }
        }
        return 'as';
    }
    actualizarTabla(identificador, linea, columna) {
        for (var elemento of this.listaSimbolos) {
            if (elemento.getIdentificador().toString() == identificador) {
                elemento.setContenido(linea);
                elemento.setLinea(linea);
                elemento.setColumna(linea);
                elemento.setEntorno(identificador);
                return true;
            }
        }
        return false;
    }
    getNodoErrores() {
        return this.NodoErrores;
    }
    setNodoErrores(value) {
        this.NodoErrores = value;
    }
    getinstrucciones() {
        return this.instrucciones;
    }
    setinstrucciones(value) {
        this.instrucciones = value;
    }
    getconsola() {
        return this.consola;
    }
    setconsola(value) {
        this.consola = value;
    }
    actualizaConsola(uptodate) {
        this.consola = `${this.consola}${uptodate}\n`;
    }
    gettablaGlobal() {
        return this.tablaGlobal;
    }
    settablaGlobal(value) {
        this.tablaGlobal = value;
    }
    getEtiqueta() {
        return this.etiquetasL++;
    }
    getContadort() {
        return this.contadort++;
    }
    getSTACK() {
        return this.contadorS++;
    }
    setContadort(contador) {
        this.contadort = contador;
    }
    setStack(count) {
        this.contadorS = count;
    }
    setEtiqueta(count) {
        this.etiquetasL = count;
    }
}


/***/ }),

/***/ "l2Mm":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Logica.ts ***!
  \*****************************************************************/
/*! exports provided: default, Logicas */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Logica; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logicas", function() { return Logicas; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "LXtN");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Variable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Variable */ "95dx");
/* harmony import */ var _Relacional__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Relacional */ "N49t");
//relacionales






class Logica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(relacion, fila, columna, cond1, cond2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.loogica = relacion;
        if (!cond2)
            this.condExcep = cond1;
        else {
            this.cond1 = cond1;
            this.cond2 = cond2;
        }
    }
    getNodoAST() {
        var _a, _b;
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('LOGICO');
        if (this.condExcep != null) {
            nodo.agregarHijo(this.loogica + '', 'log', this.loogica);
            nodo.agregarHijoAST(this.condExcep.getNodoAST());
        }
        else {
            nodo.agregarHijoAST((_a = this.cond1) === null || _a === void 0 ? void 0 : _a.getNodoAST());
            nodo.agregarHijo(this.loogica + '', 'log', this.loogica);
            nodo.agregarHijoAST((_b = this.cond2) === null || _b === void 0 ? void 0 : _b.getNodoAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        var _a, _b;
        let izq, der, unico;
        izq = der = unico = null;
        if (this.condExcep != null) {
            unico = this.condExcep.interpretar(arbol, tabla, tablaxml);
            if (unico instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
                return unico;
        }
        else {
            izq = (_a = this.cond1) === null || _a === void 0 ? void 0 : _a.interpretar(arbol, tabla, tablaxml);
            if (this.cond1 instanceof _Relacional__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                var tipo1;
                var tipo2;
                tipo1 = this.cond1.cond1.tipoDato.getTipo();
                tipo2 = this.cond1.cond2.tipoDato.getTipo();
                if (tipo1 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
                    if (tipo2 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO) {
                        var tempcondicion1 = parseInt(izq.condicion1);
                        izq = this.hacerOperacionRel(tempcondicion1, izq.operador, izq.condicion2);
                    }
                }
                if (tipo1 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO) {
                    if (tipo2 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
                        var tempcondicion2 = parseInt(izq.condicion2);
                        izq = this.hacerOperacionRel(izq.condicion1, izq.operador, tempcondicion2);
                    }
                }
            }
            if (izq instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return izq;
            }
            else if (this.cond1 instanceof _Variable__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                var buscar1 = tabla.getVariable(izq);
                if (buscar1 != null) {
                    izq = buscar1.getvalor();
                }
            }
            var cambiandotipo;
            try {
                cambiandotipo = parseInt(izq);
                this.cond1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
            }
            catch (error) {
                try {
                    cambiandotipo = parseFloat(izq);
                    this.cond1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                }
                catch (error) {
                    this.cond1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                }
            }
            der = (_b = this.cond2) === null || _b === void 0 ? void 0 : _b.interpretar(arbol, tabla, tablaxml);
            if (this.cond2 instanceof _Relacional__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                var tipo1;
                var tipo2;
                tipo1 = this.cond2.cond1.tipoDato.getTipo();
                tipo2 = this.cond2.cond2.tipoDato.getTipo();
                if (tipo1 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
                    if (tipo2 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO) {
                        var tempcond1 = parseInt(der.condicion1);
                        der = this.hacerOperacionRel(tempcond1, der.operador, der.condicion2);
                    }
                }
                if (tipo1 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO) {
                    if (tipo2 == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
                        var tempcond2 = parseInt(der.condicion2);
                        der = this.hacerOperacionRel(der.condicion1, der.operador, tempcond2);
                    }
                }
            }
            if (der instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return der;
            }
            else if (this.cond2 instanceof _Variable__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                var buscar2 = tabla.getVariable(izq);
                if (buscar2 != null) {
                    der = buscar2.getvalor();
                }
            }
            var cambiandotipo2;
            try {
                cambiandotipo2 = parseInt(der);
                this.cond2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
            }
            catch (error) {
                try {
                    cambiandotipo2 = parseFloat(der);
                    this.cond2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                }
                catch (error) {
                    this.cond2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                }
            }
        }
        //inicio comparacion
        switch (this.loogica) {
            case Logicas.AND:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return izq && der ? true : false;
            case Logicas.OR:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return izq || der ? true : false;
            case Logicas.NOT:
                this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
                return !unico;
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    hacerOperacionRel(cond1, Operador, cond2) {
        switch (Operador) {
            case "==":
                return cond1 == cond2;
            case "!=":
                return cond1 != cond2;
            case "<":
                return cond1 < cond2;
            case "<=":
                return cond1 <= cond2;
            case ">":
                return cond1 > cond2;
            case ">=":
                return cond1 >= cond2;
            default:
                return false;
        }
    }
}
var Logicas;
(function (Logicas) {
    Logicas[Logicas["OR"] = 0] = "OR";
    Logicas[Logicas["AND"] = 1] = "AND";
    Logicas[Logicas["NOT"] = 2] = "NOT";
})(Logicas || (Logicas = {}));


/***/ }),

/***/ "mh+0":
/*!********************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Expresiones/Relacional.ts ***!
  \********************************************************************/
/*! exports provided: default, Relacionales */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Relacional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Relacionales", function() { return Relacionales; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "E7Rf");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");
//aritmeticas




class Relacional extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(relacion, fila, columna, cond1, cond2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.relacion = relacion;
        this.cond1 = cond1;
        this.cond2 = cond2;
    }
    getNodosAST() {
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('RELACIONAL');
        nodo.agregarHijoAST(this.cond1.getNodosAST());
        nodo.agregarHijo(this.relacion + '', 'rel', this.relacion);
        nodo.agregarHijoAST(this.cond2.getNodosAST());
        return nodo;
    }
    interpretar(arbol, tabla) {
        let izq, der;
        izq = this.obtieneValor(this.cond1, arbol, tabla);
        if (izq instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
            return izq;
        der = this.obtieneValor(this.cond2, arbol, tabla);
        if (der instanceof _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"])
            return der;
        if (this.cond1.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA &&
            this.cond2.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('ERROR SEMANTICO', 'NO SE PUEDE COMPARAR UNA CADENA CON OTRO TIPO DE DATO QUE NO SEA CADENA', this.fila, this.columna);
        }
        else if (this.cond2.tipoDato.getTipo() == _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA &&
            this.cond1.tipoDato.getTipo() != _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA) {
            return new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_2__["default"]('ERROR SEMANTICO', 'NO SE PUEDE COMPARAR UNA CADENA CON OTRO TIPO DE DATO QUE NO SEA CADENA', this.fila, this.columna);
        }
        else {
            this.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO);
            switch (this.relacion) {
                case Relacionales.IGUAL:
                    return izq == der;
                case Relacionales.DIFERENTE:
                    return izq != der;
                case Relacionales.MENOR:
                    return izq < der;
                case Relacionales.MENORIGUAL:
                    return izq <= der;
                case Relacionales.MAYOR:
                    return izq > der;
                case Relacionales.MAYORIGUAL:
                    return izq >= der;
                default:
                    return 'what';
            }
        }
    }
    obtieneValor(operando, arbol, tabla) {
        let valor = operando.interpretar(arbol, tabla);
        switch (operando.tipoDato.getTipo()) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return parseInt(valor);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return parseFloat(valor);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                var da = valor + '';
                var res = da.charCodeAt(0);
                return res;
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                let dats = valor + '';
                let otr = dats.toLowerCase();
                return parseInt(otr);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return '' + valor;
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}
var Relacionales;
(function (Relacionales) {
    Relacionales[Relacionales["IGUAL"] = 0] = "IGUAL";
    Relacionales[Relacionales["DIFERENTE"] = 1] = "DIFERENTE";
    Relacionales[Relacionales["MAYOR"] = 2] = "MAYOR";
    Relacionales[Relacionales["MENOR"] = 3] = "MENOR";
    Relacionales[Relacionales["MAYORIGUAL"] = 4] = "MAYORIGUAL";
    Relacionales[Relacionales["MENORIGUAL"] = 5] = "MENORIGUAL";
    Relacionales[Relacionales["NOIGUAL"] = 6] = "NOIGUAL";
})(Relacionales || (Relacionales = {}));


/***/ }),

/***/ "nUj/":
/*!****************************************************************!*\
  !*** ./src/app/componentes/tabsinicio/tabsinicio.component.ts ***!
  \****************************************************************/
/*! exports provided: TabsinicioComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabsinicioComponent", function() { return TabsinicioComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/tabs */ "wZkO");
/* harmony import */ var _contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contenido-inicio/contenido-inicio.component */ "CbqC");



class TabsinicioComponent {
    constructor() { }
    ngOnInit() {
    }
}
TabsinicioComponent.ɵfac = function TabsinicioComponent_Factory(t) { return new (t || TabsinicioComponent)(); };
TabsinicioComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TabsinicioComponent, selectors: [["app-tabsinicio"]], decls: 7, vars: 0, consts: [["dynamicHeight", ""], ["label", "CONTENIDO 1"], ["label", "CONTENIDO 2"], ["label", "CONTENIDO 3"]], template: function TabsinicioComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-tab-group", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-tab", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "app-contenido-inicio");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mat-tab", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "app-contenido-inicio");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mat-tab", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "app-contenido-inicio");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } }, directives: [_angular_material_tabs__WEBPACK_IMPORTED_MODULE_1__["MatTabGroup"], _angular_material_tabs__WEBPACK_IMPORTED_MODULE_1__["MatTab"], _contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_2__["ContenidoInicioComponent"]], styles: [".example-small-box[_ngcontent-%COMP%], .example-large-box[_ngcontent-%COMP%] {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 16px;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.example-small-box[_ngcontent-%COMP%] {\r\n  height: 100px;\r\n  width: 100px;\r\n}\r\n\r\n.example-large-box[_ngcontent-%COMP%] {\r\n  height: 300px;\r\n  width: 300px;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYnNpbmljaW8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtBQUNkIiwiZmlsZSI6InRhYnNpbmljaW8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXNtYWxsLWJveCxcclxuLmV4YW1wbGUtbGFyZ2UtYm94IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAxNnB4O1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1zbWFsbC1ib3gge1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1sYXJnZS1ib3gge1xyXG4gIGhlaWdodDogMzAwcHg7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ "ob2c":
/*!************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Simbolos/Simbolo.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Simbolo; });
class Simbolo {
    constructor(tipo, identificador, linea, columna, ambito, valor, cd3script) {
        this.atributo = new Map();
        this.tipo = tipo;
        this.identificador = identificador.toLowerCase();
        this.valor = valor;
        this.linea = linea;
        this.columna = columna;
        this.cd3variable = cd3script;
        this.ambito = ambito;
    }
    //getters y setters
    gettipo() {
        return this.tipo;
    }
    settipo(value) {
        this.tipo = value;
    }
    getidentificador() {
        return this.identificador;
    }
    setidentificador(value) {
        this.identificador = value;
    }
    getvalor() {
        return this.valor;
    }
    setvalor(value) {
        this.valor = value;
    }
    agregarAtributo(par1, par2, linea, columna, cd3) {
        this.atributo.set(par1, par2);
        this.cdatributo = cd3;
        this.linea = linea;
        this.columna = columna;
    }
    getAtributo() {
        return this.atributo;
    }
    setAtributo(atributo) {
        this.atributo = atributo;
    }
    getAtributoLinea() {
        return this.linea;
    }
    getAtributoColumna() {
        return this.columna;
    }
    get3DAtributo() {
        return this.cdatributo;
    }
    getLinea() {
        return this.linea;
    }
    getColumna() {
        return this.columna;
    }
    setLinea(linea) {
        this.linea = linea;
    }
    setColumna(col) {
        this.columna = col;
    }
    getcd3Value(etiqueta) {
        this.cd3variable = etiqueta;
    }
    setcd3Value() {
        return this.cd3variable;
    }
    igualdadambito() {
        this.temporal = this.ambito;
        return this.ambito;
    }
    setanteriorEntorno(ent) {
        this.temporal = ent;
    }
    getantriorEntorno() {
        return this.temporal;
    }
    getambito() {
        return this.ambito;
    }
}


/***/ }),

/***/ "pcrZ":
/*!******************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/GramaticaXMLDescPRUEBA.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var GramaticaXMLDescPRUEBA = (function () {
    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)
        ; return o; }, $V0 = [1, 3], $V1 = [1, 4], $V2 = [1, 10], $V3 = [2, 13], $V4 = [12, 14, 15], $V5 = [5, 10, 16], $V6 = [2, 6], $V7 = [1, 18], $V8 = [5, 9, 10, 13, 16], $V9 = [10, 12, 14, 15];
    var parser = { trace: function trace() { },
        yy: {},
        symbols_: { "error": 2, "START": 3, "OBJETO": 4, "EOF": 5, "INSTRUCCION": 6, "CUERPO": 7, "OBJETOS": 8, "MENORQUEESPECIAL": 9, "IDENTIFICADOR": 10, "L_ATRIBUTOS": 11, "MAYORQUEESPECIAL": 12, "MENORQUE": 13, "SELFCLOSE": 14, "MAYORQUE": 15, "SALIDA": 16, "ATRIBUTO": 17, "IGUAL": 18, "CADENA": 19, "QUOTE": 20, "$accept": 0, "$end": 1 },
        terminals_: { 2: "error", 5: "EOF", 7: "CUERPO", 9: "MENORQUEESPECIAL", 10: "IDENTIFICADOR", 12: "MAYORQUEESPECIAL", 13: "MENORQUE", 14: "SELFCLOSE", 15: "MAYORQUE", 16: "SALIDA", 18: "IGUAL", 19: "CADENA", 20: "QUOTE" },
        productions_: [0, [3, 2], [6, 1], [6, 1], [8, 2], [8, 1], [8, 0], [4, 5], [4, 5], [4, 8], [4, 7], [11, 2], [11, 1], [11, 0], [17, 3], [17, 3]],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
            /* this == yyval */
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    console.log($$[$0 - 1]);
                    return $$[$0 - 1];
                    break;
                case 2:
                case 3:
                    this.$ = $$[$0];
                    break;
                case 4:
                    $$[$0].push($$[$0 - 1]);
                    this.$ = $$[$0];
                    break;
                case 5:
                    this.$ = [$$[$0]];
                    break;
                case 7:
                case 8:
                    this.$ = new objeto.default($$[$0 - 3], null, $$[$0 - 2], $$[$0], _$[$0 - 4].first_line, _$[$0 - 4].first_column);
                    break;
                case 9:
                    this.$ = new objeto.default($$[$0 - 6], null, $$[$0 - 5], $$[$0 - 3], _$[$0 - 7].first_line, _$[$0 - 7].first_column);
                    break;
                case 10:
                    this.$ = new objeto.default($$[$0 - 5], $$[$0 - 2], $$[$0 - 4], null, _$[$0 - 6].first_line, _$[$0 - 6].first_column);
                    break;
                case 11:
                    $$[$0].push($$[$0 - 1]);
                    this.$ = $$[$0];
                    break;
                case 12:
                    this.$ = [$$[$0]];
                    break;
                case 14:
                case 15:
                    this.$ = new atributo.default($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column);
                    break;
            }
        },
        table: [{ 3: 1, 4: 2, 9: $V0, 13: $V1 }, { 1: [3] }, { 5: [1, 5] }, { 10: [1, 6] }, { 10: [1, 7] }, { 1: [2, 1] }, { 10: $V2, 11: 8, 12: $V3, 17: 9 }, o([14, 15], $V3, { 17: 9, 11: 11, 10: $V2 }), { 12: [1, 12] }, o($V4, [2, 12], { 17: 9, 11: 13, 10: $V2 }), { 18: [1, 14] }, { 14: [1, 15], 15: [1, 16] }, o($V5, $V6, { 6: 17, 8: 19, 4: 20, 7: $V7, 9: $V0, 13: $V1 }), o($V4, [2, 11]), { 19: [1, 21], 20: [1, 22] }, o($V5, $V6, { 8: 19, 4: 20, 6: 23, 7: $V7, 9: $V0, 13: $V1 }), o([10, 16], $V6, { 8: 19, 4: 20, 6: 24, 7: $V7, 9: $V0, 13: $V1 }), o($V8, [2, 7]), o($V8, [2, 2]), o($V8, [2, 3]), o($V5, [2, 5], { 4: 20, 8: 25, 9: $V0, 13: $V1 }), o($V9, [2, 14]), o($V9, [2, 15]), o($V8, [2, 8]), { 10: [1, 27], 16: [1, 26] }, o($V8, [2, 4]), { 10: [1, 28] }, { 15: [1, 29] }, { 15: [1, 30] }, o($V8, [2, 10]), o($V8, [2, 9])],
        defaultActions: { 5: [2, 1] },
        parseError: function parseError(str, hash) {
            if (hash.recoverable) {
                this.trace(str);
            }
            else {
                var error = new Error(str);
                error.hash = hash;
                throw error;
            }
        },
        parse: function parse(input) {
            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
            var args = lstack.slice.call(arguments, 1);
            var lexer = Object.create(this.lexer);
            var sharedState = { yy: {} };
            for (var k in this.yy) {
                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
                    sharedState.yy[k] = this.yy[k];
                }
            }
            lexer.setInput(input, sharedState.yy);
            sharedState.yy.lexer = lexer;
            sharedState.yy.parser = this;
            if (typeof lexer.yylloc == 'undefined') {
                lexer.yylloc = {};
            }
            var yyloc = lexer.yylloc;
            lstack.push(yyloc);
            var ranges = lexer.options && lexer.options.ranges;
            if (typeof sharedState.yy.parseError === 'function') {
                this.parseError = sharedState.yy.parseError;
            }
            else {
                this.parseError = Object.getPrototypeOf(this).parseError;
            }
            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }
            _token_stack: var lex = function () {
                var token;
                token = lexer.lex() || EOF;
                if (typeof token !== 'number') {
                    token = self.symbols_[token] || token;
                }
                return token;
            };
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                }
                else {
                    if (symbol === null || typeof symbol == 'undefined') {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === 'undefined' || !action.length || !action[0]) {
                    var errStr = '';
                    expected = [];
                    for (p in table[state]) {
                        if (this.terminals_[p] && p > TERROR) {
                            expected.push('\'' + this.terminals_[p] + '\'');
                        }
                    }
                    if (lexer.showPosition) {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                    }
                    else {
                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                    }
                    this.parseError(errStr, {
                        text: lexer.match,
                        token: this.terminals_[symbol] || symbol,
                        line: lexer.yylineno,
                        loc: yyloc,
                        expected: expected
                    });
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(lexer.yytext);
                        lstack.push(lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = lexer.yyleng;
                            yytext = lexer.yytext;
                            yylineno = lexer.yylineno;
                            yyloc = lexer.yylloc;
                            if (recovering > 0) {
                                recovering--;
                            }
                        }
                        else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [
                                lstack[lstack.length - (len || 1)].range[0],
                                lstack[lstack.length - 1].range[1]
                            ];
                        }
                        r = this.performAction.apply(yyval, [
                            yytext,
                            yyleng,
                            yylineno,
                            sharedState.yy,
                            action[1],
                            vstack,
                            lstack
                        ].concat(args));
                        if (typeof r !== 'undefined') {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        } };
    const atributo = __webpack_require__(/*! ./Expresiones/Atributo */ "uvkm");
    const tipo = __webpack_require__(/*! ./Simbolos/Tipo */ "Oyrp");
    const objeto = __webpack_require__(/*! ./Expresiones/Objeto */ "xzWR");
    const CErrores = __webpack_require__(/*! ./Excepciones/Errores */ "Vgfr");
    const CNodoErrores = __webpack_require__(/*! ./Excepciones/NodoErrores */ "cikY");
    const inicio = __webpack_require__(/*! ../../../componentes/contenido-inicio/contenido-inicio.component */ "CbqC");
    var palabra = "";
    var palabra1 = "";
    /* generated by jison-lex 0.3.4 */
    var lexer = (function () {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                }
                else {
                    throw new Error(str);
                }
            },
            // resets the lexer, sets new input
            setInput: function (input, yy) {
                this.yy = yy || this.yy || {};
                this._input = input;
                this._more = this._backtrack = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) {
                    this.yylloc.range = [0, 0];
                }
                this.offset = 0;
                return this;
            },
            // consumes and returns one char from the input
            input: function () {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                }
                else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) {
                    this.yylloc.range[1]++;
                }
                this._input = this._input.slice(1);
                return ch;
            },
            // unshifts one char (or a string) into the input
            unput: function (ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len);
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) {
                    this.yylineno -= lines.length - 1;
                }
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ?
                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                            + oldLines[oldLines.length - lines.length].length - lines[0].length :
                        this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                this.yyleng = this.yytext.length;
                return this;
            },
            // When called from action, caches matched text and appends it on next action
            more: function () {
                this._more = true;
                return this;
            },
            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
            reject: function () {
                if (this.options.backtrack_lexer) {
                    this._backtrack = true;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
                return this;
            },
            // retain first n characters of the match
            less: function (n) {
                this.unput(this.match.slice(n));
            },
            // displays already matched input, i.e. for error messages
            pastInput: function () {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            // displays upcoming input, i.e. for error messages
            upcomingInput: function () {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            // displays the character position where the lexing error occurred, i.e. for error messages
            showPosition: function () {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            // test the lexed token: return FALSE when not a match, otherwise return token
            test_match: function (match, indexed_rule) {
                var token, lines, backup;
                if (this.options.backtrack_lexer) {
                    // save context
                    backup = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    };
                    if (this.options.ranges) {
                        backup.yylloc.range = this.yylloc.range.slice(0);
                    }
                }
                lines = match[0].match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno += lines.length;
                }
                this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines ?
                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                        this.yylloc.last_column + match[0].length
                };
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                if (this.options.ranges) {
                    this.yylloc.range = [this.offset, this.offset += this.yyleng];
                }
                this._more = false;
                this._backtrack = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
                if (this.done && this._input) {
                    this.done = false;
                }
                if (token) {
                    return token;
                }
                else if (this._backtrack) {
                    // recover context
                    for (var k in backup) {
                        this[k] = backup[k];
                    }
                    return false; // rule action called reject() implying the next rule should be tested instead.
                }
                return false;
            },
            // return next match in input
            next: function () {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) {
                    this.done = true;
                }
                var token, match, tempMatch, index;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (this.options.backtrack_lexer) {
                            token = this.test_match(tempMatch, rules[i]);
                            if (token !== false) {
                                return token;
                            }
                            else if (this._backtrack) {
                                match = false;
                                continue; // rule action called reject() implying a rule MISmatch.
                            }
                            else {
                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                                return false;
                            }
                        }
                        else if (!this.options.flex) {
                            break;
                        }
                    }
                }
                if (match) {
                    token = this.test_match(match, rules[index]);
                    if (token !== false) {
                        return token;
                    }
                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                    return false;
                }
                if (this._input === "") {
                    return this.EOF;
                }
                else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            // return next match that has a token
            lex: function lex() {
                var r = this.next();
                if (r) {
                    return r;
                }
                else {
                    return this.lex();
                }
            },
            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            // pop the previously active lexer condition state off the condition stack
            popState: function popState() {
                var n = this.conditionStack.length - 1;
                if (n > 0) {
                    return this.conditionStack.pop();
                }
                else {
                    return this.conditionStack[0];
                }
            },
            // produce the lexer rule set which is active for the currently active lexer condition state
            _currentRules: function _currentRules() {
                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
                }
                else {
                    return this.conditions["INITIAL"].rules;
                }
            },
            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
            topState: function topState(n) {
                n = this.conditionStack.length - 1 - Math.abs(n || 0);
                if (n >= 0) {
                    return this.conditionStack[n];
                }
                else {
                    return "INITIAL";
                }
            },
            // alias for begin(condition)
            pushState: function pushState(condition) {
                this.begin(condition);
            },
            // return the number of states currently on the stack
            stateStackSize: function stateStackSize() {
                return this.conditionStack.length;
            },
            options: { "case-insensitive": true },
            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
                var YYSTATE = YY_START;
                switch ($avoiding_name_collisions) {
                    case 0:
                        break;
                    case 1:
                        this.begin('cuerpo');
                        return 15;
                        break;
                    case 2:
                        this.begin('INITIAL');
                        if (palabra.replaceAll(" ", "") == "")
                            return 16;
                        yy_.yytext = palabra;
                        palabra = "";
                        if (palabra.replaceAll(" ", "") == "")
                            return 7;
                        break;
                    case 3:
                        this.begin('INITIAL');
                        return 13;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 4:
                        this.begin('INITIAL');
                        return 14;
                        yy_.yytext = palabra;
                        palabra = "";
                        return 7;
                        break;
                    case 5:
                        palabra += yy_.yytext;
                        break;
                    case 6:
                        return 12;
                        break;
                    case 7:
                        return 16;
                        break;
                    case 8:
                        return 14;
                        break;
                    case 9:
                        return 9;
                        break;
                    case 10:
                        return 13;
                        break;
                    case 11:
                        return 18;
                        break;
                    case 12:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 19;
                        break;
                    case 13:
                        yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                        return 20;
                        break;
                    case 14:
                        return 10;
                        break;
                    case 15:
                        return 5;
                        break;
                    case 16:
                        break;
                    case 17:
                        break;
                    case 18:
                        break;
                    case 19:
                        inicio.listaErrores.push(new CNodoErrores.default("Lexico", "No se esperaba el caracter: " + yy_.yytext, yy_.yylloc.first_line, yy_.yylloc.first_column));
                        console.log("Lexico, No se esperaba el caracter: " + yy_.yytext + " Linea: " + yy_.yylloc.first_line + "Columna: " + yy_.yylloc.first_column);
                        break;
                }
            },
            rules: [/^(?:[<][!][-][-][^>]*[-][-]+[>])/i, /^(?:>)/i, /^(?:<\/)/i, /^(?:<)/i, /^(?:<)/i, /^(?:.)/i, /^(?:\?>)/i, /^(?:<\/)/i, /^(?:\/>)/i, /^(?:<\?)/i, /^(?:<)/i, /^(?:=)/i, /^(?:"[^\"]*")/i, /^(?:'[^\']*')/i, /^(?:([a-zA-Z_À-ÿ])[a-zA-Z0-9_^ÑñÀ-ÿ]*)/i, /^(?:$)/i, /^(?:[ \r\t]+)/i, /^(?:\n+)/i, /^(?:\s+)/i, /^(?:.)/i],
            conditions: { "Comentario": { "rules": [], "inclusive": false }, "xml": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "cuerpo": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true }, "INITIAL": { "rules": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inclusive": true } }
        });
        return lexer;
    })();
    parser.lexer = lexer;
    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (true) {
    exports.parser = GramaticaXMLDescPRUEBA;
    exports.Parser = GramaticaXMLDescPRUEBA.Parser;
    exports.parse = function () { return GramaticaXMLDescPRUEBA.parse.apply(GramaticaXMLDescPRUEBA, arguments); };
    exports.main = function commonjsMain(args) {
        if (!args[1]) {
            console.log('Usage: ' + args[0] + ' FILE');
            process.exit(1);
        }
        var source = __webpack_require__(/*! fs */ 1).readFileSync(__webpack_require__(/*! path */ 2).normalize(args[1]), "utf8");
        return exports.parser.parse(source);
    };
    if ( true && __webpack_require__.c[__webpack_require__.s] === module) {
        exports.main(process.argv.slice(1));
    }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "YuTi")(module)))

/***/ }),

/***/ "pz2h":
/*!**********************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Unario.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Unario; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");
/* harmony import */ var _Termino__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Termino */ "98aF");



class Unario extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.operando = operando;
        this.expresion = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 operacion operando2
        var operadorder = this.expresion.interpretar(arbol, tabla);
        if (operadorder != null) {
            if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: "", linea: this.fila.toString(), columna: this.columna.toString() };
            }
            else {
                if (operadorder.contenido != null) {
                    return { operadorder: operadorder.contenido.toString(), operador: this.operando, operadorizq: "", linea: this.fila.toString(), columna: this.columna.toString() };
                }
                else {
                    if (operadorder.operadorder != null) {
                        if (this.expresion instanceof _Termino__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                            let arm = operadorder.operador + operadorder.operadorder.toString();
                            return { operadorder: arm, operador: this.operando, operadorizq: "", linea: this.fila.toString(), columna: this.columna.toString() };
                        }
                    }
                }
            }
        }
    }
}


/***/ }),

/***/ "rEJP":
/*!******************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Instrucciones/Asignacion.ts ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Asignacion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Expresion_Aritmetica__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Expresion/Aritmetica */ "kJtm");
/* harmony import */ var _Expresion_Bit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Expresion/Bit */ "1+gB");
/* harmony import */ var _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Expresion/Identificador */ "zxbS");
/* harmony import */ var _Expresion_Logica__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Expresion/Logica */ "0zjc");
/* harmony import */ var _Expresion_Relacional__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Expresion/Relacional */ "VD77");
/* harmony import */ var _Expresion_Termino__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Expresion/Termino */ "98aF");
/* harmony import */ var _Expresion_Unario__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Expresion/Unario */ "pz2h");
/* harmony import */ var _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Reportes/reporteOp */ "I37V");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");










class Asignacion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(termino, expresion, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_9__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_9__["tipoDato"].CADENA), fila, columna);
        this.Temporales = termino;
        this.Expresion = expresion;
    }
    interpretar(arbol, tabla) {
        // si es termino y si es expresion las instrucciones
        let tem;
        let cadena = "";
        let idtemp = "";
        if (this.Temporales != null) {
            if (this.Temporales instanceof _Expresion_Termino__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                let a = this.Temporales.interpretar(arbol, tabla);
                idtemp = a.contenido;
                cadena += a.contenido + "=";
            }
            else if (this.Temporales instanceof _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                let a = this.Temporales.interpretar(arbol, tabla);
                idtemp = a.contenido;
                cadena += a.contenido + "=";
            }
            else {
                idtemp = this.Temporales.toString();
                cadena += this.Temporales.toString() + "=";
            }
        }
        if (this.Expresion != null) {
            if (this.Expresion instanceof _Expresion_Aritmetica__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                if (a.operadorder == idtemp || a.operadorizq == idtemp) {
                    if (a.operadorder === "0" && a.operador === "+" || a.operadorder == 0 && a.operador === "+") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 6", idtemp + "=" + idtemp + "+0" + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorizq === "0" && a.operador === "+" || a.operadorizq == 0 && a.operador === "+") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 6", idtemp + "=" + "0+" + idtemp + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorder === "0" && a.operador === "-" || a.operadorder == 0 && a.operador === "-") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 7", idtemp + "=" + idtemp + "-0" + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorizq === "0" && a.operador === "-" || a.operadorizq == 0 && a.operador === "-") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 7", idtemp + "=" + "0-" + idtemp + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorder === "1" && a.operador === "*" || a.operadorder == 1 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 8", idtemp + "=" + idtemp + "*1" + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorizq === "1" && a.operador === "*" || a.operadorizq == 1 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 8", idtemp + "=" + "1*" + idtemp + ";", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorder === "1" && a.operador === "/" || a.operadorder == 1 && a.operador === "/") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 9", idtemp + "=" + idtemp + "/1;", "", a.linea, a.columna);
                        arbol.setReporte(report);
                        return "";
                    }
                    else if (a.operadorizq === "1" && a.operador === "/" || a.operadorizq == 1 && a.operador === "/") {
                        return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                    }
                    else {
                        return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                    }
                }
                else {
                    if (a.operadorder === "0" && a.operador === "+" || a.operadorder == 0 && a.operador === "+") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 10", idtemp + "= " + a.operadorizq + "+0;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + ";";
                    }
                    else if (a.operadorizq === "0" && a.operador === "+" || a.operadorizq == 0 && a.operador === "+") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 10", idtemp + "= 0+" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorder + ";";
                    }
                    else if (a.operadorder === "0" && a.operador === "-" || a.operadorder == 0 && a.operador === "-") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 11", idtemp + "=" + a.operadorizq + "-0;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + ";";
                    }
                    else if (a.operadorizq === "0" && a.operador === "-" || a.operadorizq == 0 && a.operador === "-") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 11", idtemp + "= 0-" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorder + ";";
                    }
                    else if (a.operadorder === "1" && a.operador === "*" || a.operadorder == 1 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 12", idtemp + "=" + a.operadorizq + "*1;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + ";";
                    }
                    else if (a.operadorizq === "1" && a.operador === "*" || a.operadorizq == 1 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 12", idtemp + "= 1*" + a.operadorder + ";", idtemp + "=" + a.operadorder + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorder + ";";
                    }
                    else if (a.operadorder === "2" && a.operador === "*" || a.operadorder == 2 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 14", idtemp + "=" + a.operadorizq + "*2;", idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";";
                    }
                    else if (a.operadorizq === "2" && a.operador === "*" || a.operadorizq == 2 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 14", idtemp + "= 2*" + a.operadorder + ";", idtemp + "=" + a.operadorder + "+" + a.operadorder + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + "+" + a.operadorizq + ";";
                    }
                    else if (a.operadorder === "0" && a.operador === "*" || a.operadorder == 0 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 15", idtemp + "=" + a.operadorizq + "*0;", idtemp + "=" + "0;", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + "0;";
                    }
                    else if (a.operadorizq === "0" && a.operador === "*" || a.operadorizq == 0 && a.operador === "*") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 15", idtemp + "= 0*" + a.operadorder + ";", idtemp + "=" + "0;", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + "0;";
                    }
                    else if (a.operadorder === "1" && a.operador === "/" || a.operadorder == 1 && a.operador === "/") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 13", idtemp + "=" + a.operadorizq + "/1;", idtemp + "=" + a.operadorizq + ";", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + a.operadorizq + ";";
                    }
                    else if (a.operadorizq === "0" && a.operador === "/" || a.operadorizq == 0 && a.operador === "/") {
                        let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Simplificación algebraica y por fuerza", "Regla 16", idtemp + "= 0/" + a.operadorder + ";", idtemp + "=" + "0;", a.linea, a.columna);
                        arbol.setReporte(report);
                        return idtemp + "=" + "0;";
                    }
                    else if (a.operadorizq === "1" && a.operador === "/" || a.operadorder == 1 && a.operador === "/") {
                        return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                    }
                    else {
                        return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
                    }
                }
            }
            else if (this.Expresion instanceof _Expresion_Logica__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Relacional__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Bit__WEBPACK_IMPORTED_MODULE_2__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Unario__WEBPACK_IMPORTED_MODULE_7__["default"]) {
                let a = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + a.operadorizq + a.operador + a.operadorder + ";";
            }
            else if (this.Expresion instanceof _Expresion_Identificador__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                //SE HACE OTRO PROCEDIMIENTO
                let term2 = this.Expresion.interpretar(arbol, tabla);
                return idtemp + "=" + term2.contenido;
            }
            else if (this.Expresion instanceof _Expresion_Termino__WEBPACK_IMPORTED_MODULE_6__["default"]) {
                //SE HACE OTRO PROCEDIMIENTO
                let term2 = this.Expresion.interpretar(arbol, tabla);
                let result = tabla.thisDeclarationExist(idtemp, term2.contenido);
                if (result == "") {
                    let report = new _Reportes_reporteOp__WEBPACK_IMPORTED_MODULE_8__["reporteOp"]("Eliminacion de instrucciones redundants de carga y almacenamiento", "Regla 5", idtemp + "=" + term2.contenido, "REMOVIDO", term2.fila, term2.columna);
                    arbol.setReporte(report);
                }
                return result;
            }
        }
    }
}


/***/ }),

/***/ "rLpq":
/*!*********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Expresiones/Aritmetica.ts ***!
  \*********************************************************************/
/*! exports provided: default, Operadores */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Aritmetica; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Operadores", function() { return Operadores; });
/* harmony import */ var src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Excepciones/NodoErrores */ "cikY");
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "/lmW");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Variable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Variable */ "95dx");





class Aritmetica extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_1__["Instruccion"] {
    constructor(operador, fila, columna, op1, op2) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO), fila, columna);
        this.Resultado = "";
        this.TemResultado = "";
        this.operador = operador;
        if (!op2)
            this.operandoUnico = op1;
        else {
            this.operando1 = op1;
            this.operando2 = op2;
        }
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    getNodoAST() {
        var _a, _b;
        let nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_2__["default"]('ARITMETICA');
        if (this.operandoUnico != null) {
            nodo.agregarHijo(this.operador + '');
            nodo.agregarHijoAST(this.operandoUnico.getNodoAST());
        }
        else {
            nodo.agregarHijoAST((_a = this.operando1) === null || _a === void 0 ? void 0 : _a.getNodoAST());
            nodo.agregarHijo(this.operador + '', 'ar', this.operador);
            nodo.agregarHijoAST((_b = this.operando2) === null || _b === void 0 ? void 0 : _b.getNodoAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla, tablaxml) {
        var _a, _b;
        this.tree = arbol;
        let izq, der, uno;
        izq = der = uno = null;
        if (this.operandoUnico != null) {
            uno = this.operandoUnico.interpretar(arbol, tabla, tablaxml);
            if (uno instanceof src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"])
                return uno;
        }
        else {
            izq = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.interpretar(arbol, tabla, tablaxml);
            if (this.operando1 instanceof _Variable__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                var buscar1 = tabla.getVariable(izq);
                if (buscar1 != null) {
                    izq = buscar1.getvalor();
                }
                var cambiandotipo;
                try {
                    cambiandotipo = parseInt(izq);
                    this.operando1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                }
                catch (error) {
                    try {
                        cambiandotipo = parseFloat(izq);
                        this.operando1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    }
                    catch (error) {
                        this.operando1.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    }
                }
            }
            der = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.interpretar(arbol, tabla, tablaxml);
            if (this.operando2 instanceof _Variable__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                var buscar2 = tabla.getVariable(der);
                if (buscar2 != null) {
                    der = buscar2.getvalor();
                }
                var cambiandotipo;
                try {
                    cambiandotipo = parseInt(izq);
                    this.operando2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                }
                catch (error) {
                    try {
                        cambiandotipo = parseFloat(izq);
                        this.operando2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    }
                    catch (error) {
                        this.operando2.tipoDato.setTipo(_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    }
                }
            }
        }
        switch (this.operador) {
            case Operadores.SUMA:
                arbol.codigo3d.push("// SUMA de operadores");
                return this.operador1Suma(izq, der);
            case Operadores.RESTA:
                arbol.codigo3d.push("// RESTA de operadores");
                return this.operador1Resta(izq, der);
            case Operadores.MULTIPLICACION:
                arbol.codigo3d.push("// MULTIPLICACION de operadores");
                return this.operador1Multi(izq, der);
            case Operadores.DIVISION:
                arbol.codigo3d.push("// DIVISION de operadores");
                return this.operador1Division(izq, der);
            case Operadores.MODULADOR:
                arbol.codigo3d.push("// MODULADOR de operadores");
                return this.operador1Mod(izq, der);
            case Operadores.MENOSNUM:
                arbol.codigo3d.push("// UNARIO MENOS de operadores");
                return this.opMenosUnario(uno);
            default:
                return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('ERROR SEMANTICO', 'OPERADOR INVALIDO', this.fila, this.columna);
        }
    }
    /*----------------------------------------------------------MENOSUNARIO------------------------------------------------- */
    opMenosUnario(izq) {
        var _a;
        let opUn = (_a = this.operandoUnico) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        switch (opUn) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                return parseInt(izq) * -1;
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                return parseFloat(izq) * -1.0;
        }
    }
    /*----------------------------------------------------------SUMA------------------------------------------------- */
    operador1Suma(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Suma(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Suma(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Suma(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Suma(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Suma(5, op2, izq, der);
        }
    }
    op2Suma(numero, op2, izq, der) {
        var c1 = this.tree.getContadort();
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    return parseInt(izq) + parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1;
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna entero
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("BooleanToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("BooleanToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(izq) + 1 : parseInt(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) + res;
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    return parseFloat(izq) + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseFloat(izq) + 1 : parseFloat(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) + res;
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 3) {
            //boolean
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = izq + '';
                    let otr = dats.toLowerCase();
                    if (otr == 'true')
                        return parseInt(der) + 1;
                    return parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats1 = izq + '';
                    let otr1 = dats1.toLowerCase();
                    return otr1 == 'true' ? parseFloat(der) + 1 : parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 4) {
            //cadena
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("BooleanToString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    return izq + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var dato = der;
                    return izq + '' + dato;
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 + parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c1 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 + parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var otro11 = izq;
                    return otro11 + '' + der;
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna cadena
                    this.tree.codigo3d.push("$t" + c1 + "=hp;");
                    this.tree.codigo3d.push("$t0=" + izq + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.tree.codigo3d.push("$t0=" + der + ";");
                    this.tree.codigo3d.push("concatenarString();");
                    this.Resultado = "$t" + c1 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA);
                    var otro = der;
                    var otro1 = izq;
                    return otro1 + '' + otro;
                default:
                    //error semantico
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
    }
    /*----------------------------------------------------------RESTA------------------------------------------------- */
    operador1Resta(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Resta(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Resta(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Resta(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Resta(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Resta(5, op2, izq, der);
        }
    }
    op2Resta(numero, op2, izq, der) {
        var c12 = this.tree.getContadort();
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) - parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(izq) - 1 : parseInt(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) - res;
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) - parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO: //retorna decimal
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats = der + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseFloat(izq) - 1 : parseFloat(izq);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) - res;
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 3) {
            //boolean
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    let dats = izq + '';
                    let otr = dats.toLowerCase();
                    return otr == 'true' ? parseInt(der) - 1 : parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    let dats1 = izq + '';
                    let otr1 = dats1.toLowerCase();
                    return otr1 == 'true' ? parseFloat(der) - 1 : parseFloat(der);
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 4) {
            //cadena
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 - parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c12 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c12 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 - parseFloat(der);
                default:
                    //error semantico
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
    }
    /*----------------------------------------------------------MULTIPLICACION------------------------------------------------- */
    operador1Multi(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Multi(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Multi(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Multi(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Multi(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Multi(5, op2, izq, der);
        }
    }
    op2Multi(numero, op2, izq, der) {
        var c13 = this.tree.getContadort();
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) * parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseInt(izq) * res;
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) * parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return parseFloat(izq) * res;
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 3) {
            //boolean
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 * parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return res1 * parseFloat(der);
                default:
                    //error semantico
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
    }
    /*----------------------------------------------------------DIVISION------------------------------------------------- */
    operador1Division(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Division(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Division(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Division(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Division(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Division(5, op2, izq, der);
        }
    }
    op2Division(numero, op2, izq, der) {
        var c13 = this.tree.getContadort();
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseInt(izq) / parseInt(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return res != 0
                        ? parseInt(izq) / res
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return der != 0
                        ? parseFloat(izq) / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da = der + '';
                    var res = da.charCodeAt(0);
                    return der != 0
                        ? parseFloat(izq) / res
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    this.tree.codigo3d.push("$t0=hp;");
                    this.tree.codigo3d.push("$t1=-1;");
                    this.tree.codigo3d.push("guardarString();");
                    //error
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
        else if (numero == 3) {
            //boolean
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return der != 0
                        ? res1 / parseInt(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c13 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c13 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    var da1 = izq + '';
                    var res1 = da1.charCodeAt(0);
                    return der != 0
                        ? res1 / parseFloat(der)
                        : 'NO SE PUEDE DIVIDIR SOBRE CERO';
                default:
                    this.tree.codigo3d.push("$t0=hp;");
                    this.tree.codigo3d.push("$t1=-1;");
                    this.tree.codigo3d.push("guardarString();");
                    //error semantico
                    return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
            }
        }
    }
    /*----------------------------------------------------------MODULACION------------------------------------------------- */
    operador1Mod(izq, der) {
        var _a, _b;
        let op1 = (_a = this.operando1) === null || _a === void 0 ? void 0 : _a.tipoDato.getTipo();
        let op2 = (_b = this.operando2) === null || _b === void 0 ? void 0 : _b.tipoDato.getTipo();
        switch (op1 //operador 1
        ) {
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO:
                return this.op2Mod(1, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL:
                return this.op2Mod(2, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].BOOLEANO:
                return this.op2Mod(3, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA:
                return this.op2Mod(4, op2, izq, der);
            case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CARACTER:
                return this.op2Mod(5, op2, izq, der);
        }
    }
    op2Mod(numero, op2, izq, der) {
        var c14 = this.tree.getContadort();
        if (numero == 1) {
            //entero
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna entero
                    this.tree.codigo3d.push("$t" + c14 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c14 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO);
                    return parseInt(izq) % parseInt(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c14 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c14 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
            }
            this.tree.codigo3d.push("$t0=hp;");
            this.tree.codigo3d.push("$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 2) {
            //decimal
            switch (op2 //OPERADOR 2
            ) {
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].ENTERO: //retorna decimal
                    this.tree.codigo3d.push("$t" + c14 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c14 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
                case _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL: //retorna decimal
                    this.tree.codigo3d.push("$t" + c14 + "=hp;"); // guardara el inicio de la cadena
                    this.tree.codigo3d.push("$t2=" + izq + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.tree.codigo3d.push("$t2=" + der + ";");
                    this.tree.codigo3d.push("NumberToString();");
                    this.Resultado = "$t" + c14 + "";
                    this.tipoDato = new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].DECIMAL);
                    return parseFloat(izq) % parseFloat(der);
            }
            this.tree.codigo3d.push("$$t0=hp;");
            this.tree.codigo3d.push("$$t1=-1;");
            this.tree.codigo3d.push("guardarString();");
        }
        else if (numero == 3) {
            //boolean
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 4) {
            //cadena
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
        else if (numero == 5) {
            //caracter
            //error
            return new src_app_Backend_XML_Analizador_Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_0__["default"]('SEMANTICO', 'TIPO DE DATO NO PERMITIDO', this.fila, this.columna);
        }
    }
}
var Operadores;
(function (Operadores) {
    Operadores[Operadores["SUMA"] = 0] = "SUMA";
    Operadores[Operadores["RESTA"] = 1] = "RESTA";
    Operadores[Operadores["MULTIPLICACION"] = 2] = "MULTIPLICACION";
    Operadores[Operadores["DIVISION"] = 3] = "DIVISION";
    Operadores[Operadores["POTENCIA"] = 4] = "POTENCIA";
    Operadores[Operadores["MODULADOR"] = 5] = "MODULADOR";
    Operadores[Operadores["MENOSNUM"] = 6] = "MENOSNUM";
})(Operadores || (Operadores = {}));


/***/ }),

/***/ "rkCU":
/*!***************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Abstracto/Instruccion.ts ***!
  \***************************************************************/
/*! exports provided: Instruccion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Instruccion", function() { return Instruccion; });
class Instruccion {
    constructor(tipo, fila, columna) {
        this.tipoDato = tipo;
        this.fila = fila;
        this.columna = columna;
    }
}


/***/ }),

/***/ "ssiu":
/*!*******************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Abstracto/Instruccion.ts ***!
  \*******************************************************************/
/*! exports provided: Instruccion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Instruccion", function() { return Instruccion; });
class Instruccion {
    constructor(tipo, fila, columna) {
        this.tipoDato = tipo;
        this.fila = fila;
        this.columna = columna;
    }
}


/***/ }),

/***/ "svf7":
/*!**********************************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/IdentificadorPredicado.ts ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IdentificadorPredicado; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class IdentificadorPredicado extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(Identificador, lcorchetes, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.Identificador = Identificador;
        this.Corchetes = lcorchetes;
    }
    interpretar(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('IDENTIFICADOR'); //PADRE SELECT
        /**TIPOS DE ATRIBUTOS
         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)
         * ATRIBUTOS SELECT
         * ATRIBUTOS MULTIPLICACION
         * ATRIBUTOS IDENTIFICADOR L_CORCHETES
         * libro[][]
         * @año[]
         */
        if (this.Identificador != null) {
            nodo.agregarHijo("identificador");
            nodo.agregarHijo(this.Identificador);
        }
        if (this.Corchetes != null) {
            nodo.agregarHijoAST(this.Corchetes.getNodosAST());
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "uf5A":
/*!****************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/MultipleComa.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultipleComa; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class MultipleComa extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(expresion1, operando, expresion2, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.expresion1 = expresion1;
        this.operando = operando;
        this.expresion2 = expresion2;
    }
    interpretar(arbol, tabla) {
        // operando1 , operando2
        var operadorizq = this.expresion1.interpretar(arbol, tabla);
        var operadorder = this.expresion2.interpretar(arbol, tabla);
        let cadena = "";
        cadena += operadorizq.contenido + "," + operadorder.contenido;
        return cadena;
    }
}


/***/ }),

/***/ "uvkm":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Expresiones/Atributo.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Atributo; });
/* harmony import */ var src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Abstracto/nodoAST */ "2sLK");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Tipo */ "Oyrp");
/* harmony import */ var src_app_Backend_XML_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Abstracto/Instruccion */ "9iyb");




class Atributo extends src_app_Backend_XML_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_2__["Instruccion"] {
    constructor(identificador, valor, linea, columna) {
        super(new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].ATRIBUTO), linea, columna);
        this.identificador = identificador;
        this.valor = valor;
        linea = this.linea;
        columna = this.columna;
    }
    interpretar(arbol, tabla) {
        return { identificador: this.identificador, valor: this.valor, linea: this.fila, columna: this.columna };
    }
    getNodo() {
        let nodo = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_0__["default"]('ATRIBUTO'); //PADRE ATRIBUTO
        var padreidentificador = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_0__["default"]('IDENTIFICADOR'); //PADRE IDENTIFICADOR
        padreidentificador.agregarHijo(this.identificador);
        nodo.agregarHijoAST(padreidentificador);
        let igual = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_0__["default"]('=');
        nodo.agregarHijoAST(igual);
        var padre = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_0__["default"]("VALOR"); //PADRE IDENTIFICADOR
        padre.agregarHijo(this.valor);
        nodo.agregarHijoAST(padre);
        return nodo;
    }
    codigo3D(arbol, tabla) {
        var simbolo;
        let stackID = arbol.getSTACK();
        let contadorID = arbol.getContadort(); //temporales
        arbol.codigo3d.push(`// declaracion atributo ${this.identificador}`);
        arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
        let data = this.valor + "";
        let estado = 0;
        for (let x = 0; x < data.length; x++) {
            const iterator = data[x];
            switch (estado) {
                case 0: {
                    if (iterator == "\\") {
                        estado = 1;
                        continue;
                    }
                    arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                    arbol.codigo3d.push("$t0=hp;");
                    arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                    arbol.codigo3d.push("guardarString();");
                    break;
                }
                case 1:
                    {
                        let assci = 0;
                        if (iterator == "n") {
                            assci = 10;
                        }
                        else if (iterator == "\"") {
                            assci = 34;
                        }
                        else if (iterator == "\\") {
                            assci = 92;
                        }
                        else if (iterator == "r") {
                            assci = 10;
                        }
                        else if (iterator == "t") {
                            assci = 9;
                        }
                        else {
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + 34 + ";");
                            arbol.codigo3d.push("guardarString();");
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                            arbol.codigo3d.push("guardarString();");
                        }
                        arbol.codigo3d.push("//agregamos el string al heap");
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + assci + ";");
                        arbol.codigo3d.push("guardarString();");
                        estado = 0;
                        break;
                    }
            }
        }
        arbol.codigo3d.push("$t0=hp;");
        arbol.codigo3d.push("$t1=-1;");
        arbol.codigo3d.push("guardarString();");
        const contadort = arbol.getContadort();
        arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
        arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
        return { identificador: this.identificador, valor: this.valor, linea: this.fila, columna: this.columna, cd3script: `$t${contadorID}` };
    }
}


/***/ }),

/***/ "v19a":
/*!******************************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Instrucciones/AtributosPredicado.ts ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AtributosPredicado; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class AtributosPredicado extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(select, lcorchetes, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), fila, columna);
        this.Identificador = select;
        this.Corchetes = lcorchetes;
    }
    interpretar(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('ATRIBUTOS'); //PADRE SELECT
        /**TIPOS DE ATRIBUTOS
         * ATRIBUTOS EXPRESION (TIPO INSTRUCCION)
         * ATRIBUTOS SELECT
         * ATRIBUTOS MULTIPLICACION
         * ATRIBUTOS IDENTIFICADOR L_CORCHETES
         * libro[][]
         * @año[]
         */
        if (this.Identificador != null) {
            nodo.agregarHijo("@");
            nodo.agregarHijo(this.Identificador);
        }
        if (this.Corchetes != null) {
            nodo.agregarHijoAST(this.Corchetes.getNodosAST());
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "vY5A":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _paginas_arbol_ast_arbol_ast_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./paginas/arbol-ast/arbol-ast.component */ "OBp0");
/* harmony import */ var _paginas_errores_errores_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./paginas/errores/errores.component */ "Er68");
/* harmony import */ var _paginas_inicio_inicio_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./paginas/inicio/inicio.component */ "U3hP");
/* harmony import */ var _paginas_tabla_simbolos_tabla_simbolos_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./paginas/tabla-simbolos/tabla-simbolos.component */ "g7AS");
/* harmony import */ var _paginas_gramatical_report_gramatical_report_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./paginas/gramatical-report/gramatical-report.component */ "LdXe");
/* harmony import */ var _paginas_ast_desc_ast_desc_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./paginas/ast-desc/ast-desc.component */ "gX41");
/* harmony import */ var _paginas_xpath_asc_ast_xpath_asc_ast_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./paginas/xpath-asc-ast/xpath-asc-ast.component */ "DJ5/");
/* harmony import */ var _paginas_reporte_optimizacion_reporte_optimizacion_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./paginas/reporte-optimizacion/reporte-optimizacion.component */ "KeVs");
/* harmony import */ var _paginas_tablasimbolos_xquery_tablasimbolos_xquery_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./paginas/tablasimbolos-xquery/tablasimbolos-xquery.module */ "BlmM");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ "fXoL");












const routes = [
    { path: 'gramatical', component: _paginas_gramatical_report_gramatical_report_component__WEBPACK_IMPORTED_MODULE_5__["GramaticalReportComponent"] },
    // { path: 'gramatical', component: ErroresComponent },
    { path: 'ast', component: _paginas_arbol_ast_arbol_ast_component__WEBPACK_IMPORTED_MODULE_1__["ArbolASTComponent"] },
    { path: 'ast-desc', component: _paginas_ast_desc_ast_desc_component__WEBPACK_IMPORTED_MODULE_6__["AstDescComponent"] },
    { path: 'xpath-ast', component: _paginas_xpath_asc_ast_xpath_asc_ast_component__WEBPACK_IMPORTED_MODULE_7__["XpathAscAstComponent"] },
    { path: 'errores', component: _paginas_errores_errores_component__WEBPACK_IMPORTED_MODULE_2__["ErroresComponent"] },
    { path: 'inicio', component: _paginas_inicio_inicio_component__WEBPACK_IMPORTED_MODULE_3__["InicioComponent"] },
    { path: 'optimo', component: _paginas_reporte_optimizacion_reporte_optimizacion_component__WEBPACK_IMPORTED_MODULE_8__["ReporteOptimizacionComponent"] },
    { path: 'simbolos', component: _paginas_tabla_simbolos_tabla_simbolos_component__WEBPACK_IMPORTED_MODULE_4__["TablaSimbolosComponent"] },
    { path: 'simbolos-xquery', component: _paginas_tablasimbolos_xquery_tablasimbolos_xquery_module__WEBPACK_IMPORTED_MODULE_9__["TablasimbolosXqueryModule"] },
    { path: '', component: _paginas_inicio_inicio_component__WEBPACK_IMPORTED_MODULE_3__["InicioComponent"] },
    { path: '**', redirectTo: '' },
];
class AppRoutingModule {
}
AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) { return new (t || AppRoutingModule)(); };
AppRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineNgModule"]({ type: AppRoutingModule });
AppRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"].forRoot(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵsetNgModuleScope"](AppRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"]] }); })();


/***/ }),

/***/ "wPOe":
/*!************************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/ForToSimple.ts ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ForToSimple; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");


class ForToSimple extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(variable, respuesta, num1, num2, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), linea, columna);
        this.variable = variable;
        this.respuesta = respuesta;
        this.num1 = num1;
        this.num2 = num2;
    }
    interpretar(arbol, tabla, tablaxml) {
        var nu1 = this.num1;
        var nu2 = this.num2;
        let cadena = "";
        for (let index = nu1; index <= nu2; index++) {
            cadena += "$" + index + "\n";
        }
        return cadena;
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "x+S8":
/*!***************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Simbolos/Simbolo.ts ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Simbolo; });
class Simbolo {
    constructor(tipo, identificador, linea, columna, ambito, valor, cd3script) {
        this.atributo = new Map();
        this.tipo = tipo;
        this.identificador = identificador.toLowerCase();
        this.valor = valor;
        this.linea = linea;
        this.columna = columna;
        this.cd3variable = cd3script;
        this.ambito = ambito;
    }
    //getters y setters
    gettipo() {
        return this.tipo;
    }
    settipo(value) {
        this.tipo = value;
    }
    getidentificador() {
        return this.identificador;
    }
    setidentificador(value) {
        this.identificador = value;
    }
    getvalor() {
        return this.valor;
    }
    setvalor(value) {
        this.valor = value;
    }
    agregarAtributo(par1, par2, linea, columna, cd3) {
        this.atributo.set(par1, par2);
        this.cdatributo = cd3;
        this.linea = linea;
        this.columna = columna;
    }
    getAtributo() {
        return this.atributo;
    }
    setAtributo(atributo) {
        this.atributo = atributo;
    }
    getAtributoLinea() {
        return this.linea;
    }
    getAtributoColumna() {
        return this.columna;
    }
    get3DAtributo() {
        return this.cdatributo;
    }
    getLinea() {
        return this.linea;
    }
    getColumna() {
        return this.columna;
    }
    setLinea(linea) {
        this.linea = linea;
    }
    setColumna(col) {
        this.columna = col;
    }
    getcd3Value(etiqueta) {
        this.cd3variable = etiqueta;
    }
    setcd3Value() {
        return this.cd3variable;
    }
    igualdadambito() {
        this.temporal = this.ambito;
        return this.ambito;
    }
    setanteriorEntorno(ent) {
        this.temporal = ent;
    }
    getantriorEntorno() {
        return this.temporal;
    }
    getambito() {
        return this.ambito;
    }
}


/***/ }),

/***/ "x2tA":
/*!************************************************************!*\
  !*** ./src/app/Backend/XPATH/Analizador/Funciones/Axes.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Axes; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "ssiu");
/* harmony import */ var _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Abstracto/nodoAST */ "GvuX");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "HVYh");



class Axes extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(barra1, expresion, fila, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].ENTERO), fila, columna);
        this.Axes = barra1;
        this.Expresion = expresion;
    }
    getNodosAST() {
        var nodo = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('AXES'); //PADRE SELECT
        var nodsBarras = new _Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](this.Axes);
        nodo.agregarHijoAST(nodsBarras);
        if (this.Expresion != null) {
            nodo.agregarHijoAST(this.Expresion.getNodosAST());
        }
        return nodo;
    }
    interpretar(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
    codigo3D(arbol, tabla) {
        throw new Error('Method not implemented.');
    }
}


/***/ }),

/***/ "xBmO":
/*!********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Abstracto/Instruccion.ts ***!
  \********************************************************************/
/*! exports provided: Instruccion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Instruccion", function() { return Instruccion; });
class Instruccion {
    constructor(tipo, fila, columna) {
        this.tipoDato = tipo;
        this.fila = fila;
        this.columna = columna;
    }
}


/***/ }),

/***/ "xl6+":
/*!**********************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Funciones.ts ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Funcion; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Declaracion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Declaracion */ "JDzO");




class Funcion extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, parametros, tipo, bloque, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_2__["tipoDato"].CADENA), linea, columna);
        this.Identificador = identificador;
        this.Parametros = parametros;
        this.Tipo = tipo;
        this.Bloque = bloque;
    }
    interpretar(arbol, tabla, tablaxml) {
        var listaelementos = "";
        if (this.Parametros != null) {
            this.Parametros.forEach(element => {
                if (element instanceof _Declaracion__WEBPACK_IMPORTED_MODULE_3__["default"]) {
                    listaelementos += element.Tipo;
                }
            });
            var simbolo = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__["default"](this.Tipo, this.Identificador + listaelementos, this.fila.toString(), this.columna.toString(), "Global", this.Parametros);
            tabla.setVariable(simbolo);
            var simbolo = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__["default"](this.Tipo, this.Identificador, this.fila.toString(), this.columna.toString(), "Global", this.Bloque);
            tabla.setVariable(simbolo);
        }
        else {
            var simbolo = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_1__["default"](this.Tipo, this.Identificador + "par", this.fila.toString(), this.columna.toString(), "Global", this.Bloque);
            tabla.setVariable(simbolo);
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "xsaW":
/*!****************************************************************!*\
  !*** ./src/app/Backend/XQUERY/Analizador/Instrucciones/Let.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Let; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "xBmO");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Simbolos/tablaSimbolos */ "MuHt");
/* harmony import */ var _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Simbolos/Tipo */ "QX8J");
/* harmony import */ var _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Simbolos/Simbolo */ "x+S8");
/* harmony import */ var _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Expresiones/Variable */ "95dx");






class Let extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(variable, expreison, retorno, linea, columna) {
        super(new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].CADENA), linea, columna);
        this.variable = variable;
        this.expresion = expreison;
        this.retorno = retorno;
    }
    interpretar(arbol, tabla, tablaxml) {
        if (this.expresion instanceof _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"]) {
            var search = tabla.getVariable(this.variable);
            if (search == null) {
                //NO SE ENCONTRO NINGUNA COINCIDENCIA CON LA VARIABLE
                var resexp = this.expresion.interpretar(arbol, tabla, tablaxml);
                var simbolo = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), this.variable, this.fila.toString(), this.columna.toString(), "", resexp);
                tabla.setVariable(simbolo);
                //PARTE DE RETORNO QUE FUNCIONA COMO UN PRINT
                //var resultadoretorno = this.retorno.interpretar(arbol, tabla, tablaxml);
                if (this.retorno != null) {
                    if (this.retorno) {
                        var resp = this.retorno;
                        var aux = resp.interpretar(arbol, tabla, tablaxml);
                        if (resp instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                            var buscar1 = tabla.getVariable(aux);
                            if (buscar1 != null) {
                                return buscar1.getvalor();
                            }
                        }
                        else {
                            return aux;
                        }
                    }
                    else {
                        if (this.retorno) {
                            console.log(typeof this.retorno);
                            var buscar = tabla.getVariable(this.retorno.toString());
                            if (buscar != null) {
                                return buscar;
                            }
                        }
                    }
                }
                else {
                    return "";
                }
            }
            else {
                //SI SE ENCONTRO COINCIDENCIA POR ENDE NO SE PUEDE VOLVER A DECLARAR ESE LET
            }
        }
        else if (this.expresion instanceof Array) {
            var sim;
            let c = 0;
            var cadena = '';
            var retornoscadena = null;
            let salidas = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_2__["default"]();
            var longitud = this.expresion.length;
            this.expresion.forEach(element => {
                c++;
                if (element) {
                    //se compara el tablaxml para hacer validar los datos
                    var resultador = element.interpretar(arbol, tabla, tablaxml);
                    if (resultador instanceof src_app_Backend_XML_Analizador_Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                        tablaxml = resultador;
                        if (c == longitud) {
                            if (arbol != null) {
                                console.log("LOS ELEMENTOS DE EL RESULTADO DE LA CONSULTA\n");
                                sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), this.variable, this.fila.toString(), this.columna.toString(), "", resultador);
                                tabla.setVariable(sim);
                                if (this.retorno != null) {
                                    if (this.retorno instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                                        var buscar = tabla.getVariable(this.retorno.identificador);
                                        if (buscar != null) {
                                            retornoscadena = buscar.getvalor();
                                            return buscar;
                                        }
                                    }
                                    else {
                                        var buscar = tabla.getVariable(this.retorno.toString());
                                        if (buscar != null) {
                                            retornoscadena = buscar.getvalor();
                                            return buscar;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (resultador instanceof Array) {
                        console.log(resultador);
                        if (this.retorno != null) {
                            if (this.retorno instanceof _Expresiones_Variable__WEBPACK_IMPORTED_MODULE_5__["default"]) {
                                let contador = arbol.getContadort();
                                let stack = arbol.getSTACK();
                                arbol.codigo3d.push(`// declaracion LET ${this.variable}`);
                                arbol.codigo3d.push(`$t${contador}=sp+${stack};`);
                                sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), this.variable, this.fila.toString(), this.columna.toString(), "", resultador);
                                tabla.setVariable(sim);
                                var buscar = tabla.getVariable(this.retorno.identificador);
                                if (buscar != null) {
                                    retornoscadena = buscar.getvalor();
                                    return buscar;
                                }
                            }
                            if (this.retorno) {
                                console.log(typeof this.retorno);
                                let contador = arbol.getContadort();
                                let stack = arbol.getSTACK();
                                arbol.codigo3d.push(`// declaracion LET ${this.variable}`);
                                arbol.codigo3d.push(`$t${contador}=sp+${stack};`);
                                sim = new _Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_4__["default"](new _Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].FUNCION), this.variable, this.fila.toString(), this.columna.toString(), "", resultador);
                                tabla.setVariable(sim);
                                var buscar = tabla.getVariable(this.retorno.toString());
                                if (buscar != null) {
                                    retornoscadena = buscar.getvalor();
                                    return buscar;
                                }
                            }
                        }
                    }
                }
            });
            if (cadena != '') {
                return cadena;
            }
            if (retornoscadena != null) {
                return retornoscadena;
            }
            if (salidas != null) {
                return salidas;
            }
        }
    }
    getNodoAST() {
        throw new Error("Method not implemented.");
    }
    codigo3D(arbol, tabla) {
        throw new Error("Method not implemented.");
    }
}


/***/ }),

/***/ "xzWR":
/*!**************************************************************!*\
  !*** ./src/app/Backend/XML/Analizador/Expresiones/Objeto.ts ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Objeto; });
/* harmony import */ var src_app_Backend_XML_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Abstracto/Instruccion */ "9iyb");
/* harmony import */ var src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Abstracto/nodoAST */ "2sLK");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Simbolo */ "ob2c");
/* harmony import */ var src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/Backend/XML/Analizador/Simbolos/Tipo */ "Oyrp");
/* harmony import */ var _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Simbolos/tablaSimbolos */ "TD3t");
/* harmony import */ var _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Excepciones/NodoErrores */ "cikY");
/* harmony import */ var src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/componentes/contenido-inicio/contenido-inicio.component */ "CbqC");







class Objeto extends src_app_Backend_XML_Analizador_Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, contenido, listaAtributos = [], listaObjetos, linea, columna) {
        super(new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].OBJETO), linea, columna);
        this.identificador = identificador;
        this.contenido = contenido;
        this.listaAtributos = listaAtributos;
        this.listaObjetos = listaObjetos;
        this.linea = linea;
        this.columna = columna;
    }
    interpretar(arbol, tabla) {
        var simbolo;
        if (this.listaAtributos != null) {
            for (let i of this.listaAtributos) {
                var s = i.interpretar(arbol, tabla);
                if (s.identificador == "encoding") {
                    arbol.setEncoding(s.valor);
                }
            }
        }
        if (this.listaObjetos != null) {
            var ts = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__["default"](); /*entorno hijo */
            for (let i of this.listaObjetos) {
                var r = i.interpretar(arbol, tabla); /* Obtiene el objeto hijo */
                ts.setVariable(r);
            }
            simbolo = new src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].OBJETO), this.identificador, this.linea.toString(), this.columna.toString(), "anteriorentorno", ts);
            //arbol.actualizarTabla(simbolo,this.linea.toString(),this.columna.toString());
        }
        else if (this.contenido != null) {
            //if o switch buscando codificacion
            if (arbol.getEncoding() == "UTF-8") {
                this.contenido = (this.contenido);
            }
            else if (arbol.getEncoding() == "ISO-8859-1") {
                this.contenido = unescape(encodeURIComponent(this.contenido));
            }
            else if (arbol.getEncoding() == "ASCII") {
                this.contenido = (this.contenido);
                //
                /*console.log(this.getCharCodes(this.contenido));
                this.contenido = this.getCharCodes(this.contenido) + "";*/
            }
            else {
                this.contenido = this.contenido;
            }
            simbolo = new src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].OBJETO), this.identificador, this.linea.toString(), this.columna.toString(), "anteriorentorno", this.contenido);
        }
        else {
            src_app_componentes_contenido_inicio_contenido_inicio_component__WEBPACK_IMPORTED_MODULE_6__["listaErrores"].push(new _Excepciones_NodoErrores__WEBPACK_IMPORTED_MODULE_5__["default"]('SEMANTICO', this.identificador + ' Datos nulos', this.fila, this.columna));
        }
        if (this.listaAtributos != null) {
            if (this.identificador != "xml") {
                for (let i of this.listaAtributos) {
                    var s = i.interpretar(arbol, tabla);
                    simbolo.agregarAtributo(s.identificador, s.valor, s.linea, s.columna);
                }
            }
        }
        return simbolo;
    }
    getCharCodes(s) {
        let charCodeArr = [];
        for (let i = 0; i < s.length; i++) {
            let code = s.charCodeAt(i);
            charCodeArr.push(code);
        }
        return charCodeArr;
    }
    getNodo() {
        let nodo = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('OBJETOS');
        let objectos = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('OBJETO');
        let mayor = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("<");
        objectos.agregarHijoAST(mayor);
        var padreidentificador = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]('IDENTIFICADOR');
        padreidentificador.agregarHijo(this.identificador);
        objectos.agregarHijoAST(padreidentificador);
        let menor = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"](">");
        objectos.agregarHijoAST(menor);
        nodo.agregarHijoAST(objectos);
        if (this.contenido != null) {
            var padre = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("INSTRUCCION");
            padre.agregarHijo(this.contenido);
            nodo.agregarHijoAST(padre);
        }
        if (this.listaAtributos != null) {
            var lista = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("LISTA ATRIBUTOS");
            for (let i of this.listaAtributos) {
                lista.agregarHijoAST(i.getNodo());
            }
            nodo.agregarHijoAST(lista);
        }
        if (this.listaObjetos != null) {
            var lista = new src_app_Backend_XML_Analizador_Abstracto_nodoAST__WEBPACK_IMPORTED_MODULE_1__["default"]("LISTA OBJETOS");
            for (let i of this.listaObjetos) {
                lista.agregarHijoAST(i.getNodo());
            }
            nodo.agregarHijoAST(lista);
        }
        return nodo;
    }
    codigo3D(arbol, tabla) {
        var simbolo;
        if (this.listaObjetos != null) {
            var ts = new _Simbolos_tablaSimbolos__WEBPACK_IMPORTED_MODULE_4__["default"](); /*entorno hijo */
            for (let i of this.listaObjetos) {
                var r = i.codigo3D(arbol, tabla); /* Obtiene el objeto hijo */
                ts.setVariable(r);
            }
            let contador = arbol.getContadort();
            let stack = arbol.getSTACK();
            arbol.codigo3d.push(`// declaracion ${this.identificador}`);
            arbol.codigo3d.push(`$t${contador}=sp+${stack};`);
            simbolo = new src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].OBJETO), this.identificador, this.linea.toString(), this.columna.toString(), "", ts, `$t${contador}`);
        }
        else if (this.contenido != null) {
            //if o switch buscando codificacion
            if (arbol.getEncoding() == "UTF-8") {
                this.contenido = (this.contenido);
            }
            else if (arbol.getEncoding() == "ISO-8859-1") {
                this.contenido = unescape(encodeURIComponent(this.contenido));
            }
            else if (arbol.getEncoding() == "ASCII") {
                this.contenido = (this.contenido);
                //
                /*console.log(this.getCharCodes(this.contenido));
                this.contenido = this.getCharCodes(this.contenido) + "";*/
            }
            else {
                this.contenido = this.contenido;
                this.contenido = this.contenido.toString().replace("%20", " ").replace("&lt;", "<").replace("&gt;", ">").replace("&amp;", "&").replace("&apos;", "'").replace("&quot;", "\"");
            }
            let stackID = arbol.getSTACK();
            let contadorID = arbol.getContadort(); //temporales
            arbol.codigo3d.push(`// declaracion ${this.identificador}`);
            arbol.codigo3d.push(`$t${contadorID}=sp+${stackID};`);
            let data = this.contenido + "";
            let estado = 0;
            for (let x = 0; x < data.length; x++) {
                const iterator = data[x];
                switch (estado) {
                    case 0: {
                        if (iterator == "\\") {
                            estado = 1;
                            continue;
                        }
                        arbol.codigo3d.push(`//agregamos el string al heap ${iterator}`);
                        arbol.codigo3d.push("$t0=hp;");
                        arbol.codigo3d.push("$t1=" + iterator.charCodeAt(0) + ";");
                        arbol.codigo3d.push("guardarString();");
                        break;
                    }
                    case 1:
                        {
                            let assci = 0;
                            if (iterator == "n") {
                                assci = 10;
                            }
                            else if (iterator == "\"") {
                                assci = 34;
                            }
                            else if (iterator == "\\") {
                                assci = 92;
                            }
                            else if (iterator == "r") {
                                assci = 10;
                            }
                            else if (iterator == "t") {
                                assci = 9;
                            }
                            else {
                                arbol.codigo3d.push("//agregamos el string al heap");
                                arbol.codigo3d.push("$t0=hp;");
                                arbol.codigo3d.push("$t1=" + 34 + ";");
                                arbol.codigo3d.push("guardarString();");
                                arbol.codigo3d.push("//agregamos el string al heap");
                                arbol.codigo3d.push("$t0=hp;");
                                arbol.codigo3d.push("$t1=" + iterator.charAt(0) + ";");
                                arbol.codigo3d.push("guardarString();");
                            }
                            arbol.codigo3d.push("//agregamos el string al heap");
                            arbol.codigo3d.push("$t0=hp;");
                            arbol.codigo3d.push("$t1=" + assci + ";");
                            arbol.codigo3d.push("guardarString();");
                            estado = 0;
                            break;
                        }
                }
            }
            arbol.codigo3d.push("$t0=hp;");
            arbol.codigo3d.push("$t1=-1;");
            arbol.codigo3d.push("guardarString();");
            const contadort = arbol.getContadort();
            arbol.codigo3d.push("$t" + contadort + "=hp-" + (data.length + 1) + ";");
            arbol.codigo3d.push(`stack[(int)$t${contadorID}]= $t${contadort};`);
            simbolo = new src_app_Backend_XML_Analizador_Simbolos_Simbolo__WEBPACK_IMPORTED_MODULE_2__["default"](new src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["default"](src_app_Backend_XML_Analizador_Simbolos_Tipo__WEBPACK_IMPORTED_MODULE_3__["tipoDato"].OBJETO), this.identificador, this.linea.toString(), this.columna.toString(), "", this.contenido, `$t${contadorID}`);
        }
        if (this.listaAtributos != null) {
            for (let i of this.listaAtributos) {
                var s = i.codigo3D(arbol, tabla);
                simbolo.agregarAtributo(s.identificador, s.valor, s.linea, s.columna, s.cd3script);
            }
        }
        return simbolo;
    }
}


/***/ }),

/***/ "yKyq":
/*!******************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Simbolo/Tipo.ts ***!
  \******************************************************/
/*! exports provided: default, tipoDato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tipo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tipoDato", function() { return tipoDato; });
class Tipo {
    constructor(tipos) {
        this.tipos = tipos;
    }
    getTipo() {
        return this.tipos;
    }
    setTipo(tipo) {
        this.tipos = tipo;
    }
    igual(compara) {
        return (this.tipos = compara.tipos);
    }
}
var tipoDato;
(function (tipoDato) {
    tipoDato[tipoDato["CADENA"] = 0] = "CADENA";
    tipoDato[tipoDato["OBJETO"] = 1] = "OBJETO";
    tipoDato[tipoDato["ENTERO"] = 2] = "ENTERO";
    tipoDato[tipoDato["DECLARACION"] = 3] = "DECLARACION";
    tipoDato[tipoDato["PILA"] = 4] = "PILA";
    tipoDato[tipoDato["STACK"] = 5] = "STACK";
    tipoDato[tipoDato["HEAP"] = 6] = "HEAP";
    tipoDato[tipoDato["VALOR_RET"] = 7] = "VALOR_RET";
    tipoDato[tipoDato["RA"] = 8] = "RA";
    tipoDato[tipoDato["PUNTERO"] = 9] = "PUNTERO";
    tipoDato[tipoDato["TEMPORAL"] = 10] = "TEMPORAL";
    tipoDato[tipoDato["DECIMAL"] = 11] = "DECIMAL";
    tipoDato[tipoDato["BOOLEANO"] = 12] = "BOOLEANO";
    tipoDato[tipoDato["CARACTER"] = 13] = "CARACTER";
    tipoDato[tipoDato["SELECT"] = 14] = "SELECT";
    tipoDato[tipoDato["ATRIBUTO"] = 15] = "ATRIBUTO";
})(tipoDato || (tipoDato = {}));


/***/ }),

/***/ "z7xg":
/*!********************************************************************************!*\
  !*** ./src/app/paginas/tablasimbolos-xquery/tablasimbolos-xquery.component.ts ***!
  \********************************************************************************/
/*! exports provided: TablasimbolosXqueryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TablasimbolosXqueryComponent", function() { return TablasimbolosXqueryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/table */ "+0xr");


function TablasimbolosXqueryComponent_th_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Id. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r16 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r16.identificador, " ");
} }
function TablasimbolosXqueryComponent_th_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Tipo ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r17 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r17.tipo, " ");
} }
function TablasimbolosXqueryComponent_th_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Ambito ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r18 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r18.entorno, " ");
} }
function TablasimbolosXqueryComponent_th_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Contenido ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r19 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r19.contenido, " ");
} }
function TablasimbolosXqueryComponent_th_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Linea ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r20 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r20.linea, " ");
} }
function TablasimbolosXqueryComponent_th_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Columna ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r21 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r21.columna, " ");
} }
function TablasimbolosXqueryComponent_th_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Posicion ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function TablasimbolosXqueryComponent_td_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const element_r22 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r22.posicion, " ");
} }
function TablasimbolosXqueryComponent_tr_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 15);
} }
function TablasimbolosXqueryComponent_tr_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 16);
} }
class TablasimbolosXqueryComponent {
    constructor() {
        this.displayedColumns = [
            'TIPO',
            'ID',
            'LINEA',
            'COLUMNA',
            'AMBITO',
            'VALOR',
            'CD3'
        ];
        this.dataSource = '';
    }
    ngOnInit() {
        let info = window.localStorage.getItem('symbolXQUERY');
        let otro = JSON.parse(info);
        this.dataSource = otro;
        console.log("Aqui abajo tabla simbolos");
        console.log(this.dataSource);
    }
}
TablasimbolosXqueryComponent.ɵfac = function TablasimbolosXqueryComponent_Factory(t) { return new (t || TablasimbolosXqueryComponent)(); };
TablasimbolosXqueryComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TablasimbolosXqueryComponent, selectors: [["app-tablasimbolos-xquery"]], decls: 27, vars: 3, consts: [[1, "tabla"], ["mat-table", "", 1, "mat-elevation-z8", 3, "dataSource"], ["matColumnDef", "ID"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "TIPO"], ["matColumnDef", "AMBITO"], ["matColumnDef", "CONTENIDO"], ["matColumnDef", "LINEA"], ["matColumnDef", "COLUMNA"], ["matColumnDef", "POSICION"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]], template: function TablasimbolosXqueryComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "TABLA DE SIMBOLOS XQUERY");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "table", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](4, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, TablasimbolosXqueryComponent_th_5_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, TablasimbolosXqueryComponent_td_6_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](7, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, TablasimbolosXqueryComponent_th_8_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, TablasimbolosXqueryComponent_td_9_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](10, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, TablasimbolosXqueryComponent_th_11_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, TablasimbolosXqueryComponent_td_12_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](13, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, TablasimbolosXqueryComponent_th_14_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, TablasimbolosXqueryComponent_td_15_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](16, 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, TablasimbolosXqueryComponent_th_17_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, TablasimbolosXqueryComponent_td_18_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](19, 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, TablasimbolosXqueryComponent_th_20_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, TablasimbolosXqueryComponent_td_21_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](22, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, TablasimbolosXqueryComponent_th_23_Template, 2, 0, "th", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, TablasimbolosXqueryComponent_td_24_Template, 2, 1, "td", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, TablasimbolosXqueryComponent_tr_25_Template, 1, 0, "tr", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](26, TablasimbolosXqueryComponent_tr_26_Template, 1, 0, "tr", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](22);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);
    } }, directives: [_angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_1__["MatRow"]], styles: ["table[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    width: 98%;\r\n    margin-top: 1%;\r\n    margin-bottom: 1%;\r\n    margin-left: 1%;\r\n    background-color: #0c7c6d;\r\n  }\r\n  h1[_ngcontent-%COMP%] {\r\n    margin-left: 35%;\r\n    margin-top: 5%;\r\n    margin-bottom: 5%;\r\n    font-size: 50px;\r\n    font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\r\n    background-color: transparent;\r\n  }\r\n  .tabla[_ngcontent-%COMP%] {\r\n    border: 2px solid #565658;\r\n    margin: auto;\r\n    width: 90%;\r\n    height: auto;\r\n    overflow: hidden;\r\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhc2ltYm9sb3MteHF1ZXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHlCQUF5QjtFQUMzQjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHdFQUF3RTtJQUN4RSw2QkFBNkI7RUFDL0I7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoidGFibGFzaW1ib2xvcy14cXVlcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW4tdG9wOiAxJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDElO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDElO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBjN2M2ZDtcclxuICB9XHJcbiAgaDEge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDM1JTtcclxuICAgIG1hcmdpbi10b3A6IDUlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNSU7XHJcbiAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICBmb250LWZhbWlseTogXCJGcmFua2xpbiBHb3RoaWMgTWVkaXVtXCIsIFwiQXJpYWwgTmFycm93XCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIC50YWJsYSB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjNTY1NjU4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gICJdfQ== */"] });


/***/ }),

/***/ "zUnb":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "ZAI4");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "AytR");
/* harmony import */ var codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! codemirror/mode/javascript/javascript */ "+dQi");
/* harmony import */ var codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! codemirror/mode/markdown/markdown */ "lZu9");
/* harmony import */ var codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_5__);






if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["platformBrowser"]().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ "zn8P":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "zn8P";

/***/ }),

/***/ "zxbS":
/*!*****************************************************************!*\
  !*** ./src/app/Backend/Optimizacion/Expresion/Identificador.ts ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Identificador; });
/* harmony import */ var _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstracto/Instruccion */ "rkCU");
/* harmony import */ var _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Simbolo/Tipo */ "yKyq");


class Identificador extends _Abstracto_Instruccion__WEBPACK_IMPORTED_MODULE_0__["Instruccion"] {
    constructor(identificador, fila, columna) {
        super(new _Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["default"](_Simbolo_Tipo__WEBPACK_IMPORTED_MODULE_1__["tipoDato"].CADENA), fila, columna);
        this.identificador = identificador;
    }
    interpretar(arbol, tabla) {
        return { contenido: this.identificador };
    }
}


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map
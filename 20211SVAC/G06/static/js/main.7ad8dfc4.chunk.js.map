{"version":3,"sources":["Grammar/xmlGrammar.js","Grammar/xmlGrammarDesc.js","Reportes/xmlReport.js","Reportes/xmlReportDesc.js","Reportes/SimboloTabla.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","Reportes/NodoCST.tsx","xmlAST/ClaseError.tsx","xmlAST/Entorno.tsx","xmlAST/Simbolo.tsx"],"names":["xmlGrammar","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","encoding","valor","setPos","push","this","$","ClaseError","first_line","first_column","Entorno","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","line","loc","Array","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlGrammarDesc","48","49","50","51","52","53","54","55","56","57","58","59","72","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","ReporteGramatical","ReporteCST","lista","44","xmlReportDesc","43","45","46","47","69","SimboloTabla","linea","columna","nombre","tipo","ambito","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","key","texto","identificador","listaSimbolos","listaEntornos","crearTextoGraphvizTablaSimbolos","parserXmlDesc","parserReport","parserReportDesc","Main","consoleResult","xpath","xml","repcsttxt","repgramtxt","repErrorXML","repTablaSimbolos","repAstXpath","graphvizContent","entornoGlobal","result","xmlResRep","setState","crearTextoGraphvizRepGram","crearTextoGraphvizCST","crearTextoReporteErrorXML","alert","parseDesc","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","value","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","Row","Col","xs","md","Form","Control","type","placeholder","Button","variant","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","readOnly","Component","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","nuevo","indice","listaNodos","Nombre","padre","producciones","reglas","listaErr","listaE","pos","idAtrubito","L_atrubitos"],"mappings":"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","file":"static/js/main.7ad8dfc4.chunk.js","sourcesContent":["/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\n$$[$0-1].setPos($$[$0-2].length);$$[$0-2].push($$[$0-1]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\n$$[$0-1].setPos(0);this.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \r\nbreak;\r\ncase 9:\r\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\r\nbreak;\r\ncase 10:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \r\nbreak;\r\ncase 12:\r\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\r\nbreak;\r\ncase 13:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\nbreak;\r\ncase 15:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 17:\r\n$$[$0].setPos($$[$0-1].length); $$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 18:\r\n$$[$0].setPos(0);this.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammarDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,11],$V3=[1,19],$V4=[2,4],$V5=[1,2,4,12],$V6=[1,28],$V7=[1,36],$V8=[1,37],$V9=[1,27],$Va=[1,26],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[1,33],$Vg=[1,34],$Vh=[1,35],$Vi=[8,15],$Vj=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0]; \r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]]; \r\nbreak;\r\ncase 7:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \r\nbreak;\r\ncase 9:\r\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\r\nbreak;\r\ncase 10:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \r\nbreak;\r\ncase 12:\r\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\r\nbreak;\r\ncase 13:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\nbreak;\r\ncase 15:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 17:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = \"<\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 25:\r\nthis.$ = \">\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 26:\r\nthis.$ = \"&\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 27:\r\nthis.$ = \"\\'\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 28:\r\nthis.$ = \"\\\"\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2]},{1:[2,6],2:$V0,4:$V2,9:8,10:4,11:9,12:[1,10]},{8:[1,13],17:12},{6:[1,14]},{6:$V3,7:18,8:[1,16],13:15,15:[1,17]},{1:[2,3]},{1:$V4},{1:[2,5]},{6:$V1},o($V5,[2,13]),o($V5,[2,14]),{6:$V3,7:20},{8:[1,21],15:[1,22]},{2:$V0,4:$V2,6:$V6,10:25,14:23,15:$V7,16:24,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,38]},o($Vi,[2,18],{7:18,13:39,6:$V3}),{18:[1,40]},{6:$V3,7:41},{2:$V0,4:$V2,6:$V6,10:25,14:42,15:$V7,16:43,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,44]},{2:$V0,4:[1,45],10:46},{4:[1,47]},o($V4,[2,16]),{4:[2,33],6:$V6,15:$V7,16:48,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,34],6:$V6,15:$V7,16:49,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,35],6:$V6,15:$V7,16:50,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,37],6:$V6,15:$V7,16:51,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,38],6:$V6,15:$V7,16:52,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,39],6:$V6,15:$V7,16:53,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,40],6:$V6,15:$V7,16:54,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,41],6:$V6,15:$V7,16:55,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,36],6:$V6,15:$V7,16:56,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,42],6:$V6,15:$V7,16:57,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,43],6:$V6,15:$V7,16:58,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,44],6:$V6,15:$V7,16:59,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},o($V5,[2,12]),o($Vi,[2,17]),{19:[1,60],20:[1,61]},{5:[1,62]},{2:$V0,4:[1,63],10:46},{4:[1,64]},o($V5,[2,9]),{6:$V1,15:[1,65]},o($V4,[2,15]),{15:[1,66]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},{4:[2,31]},{4:[2,32]},o($Vj,[2,19]),o($Vj,[2,20]),{8:[1,67]},{6:$V1,15:[1,68]},{15:[1,69]},{6:[1,70]},{6:[1,71]},{2:$V0,4:$V2,9:72,10:4},{6:[1,73]},{6:[1,74]},{8:[1,75]},{8:[1,76]},{1:[2,1]},{8:[1,77]},{8:[1,78]},o($V5,[2,10]),o($V5,[2,11]),o($V5,[2,7]),o($V5,[2,8])],\r\ndefaultActions: {3:[2,2],8:[2,3],9:[2,4],10:[2,5],48:[2,21],49:[2,22],50:[2,23],51:[2,24],52:[2,25],53:[2,26],54:[2,27],55:[2,28],56:[2,29],57:[2,30],58:[2,31],59:[2,32],72:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammarDesc;\r\nexports.Parser = xmlGrammarDesc.Parser;\r\nexports.parse = function () { return xmlGrammarDesc.parse.apply(xmlGrammarDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReportDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,16],$V3=[1,25],$V4=[1,33],$V5=[1,34],$V6=[1,24],$V7=[1,23],$V8=[1,26],$V9=[1,27],$Va=[1,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[8,15],$Vg=[1,4,12],$Vh=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n\r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := NODO INTRO\");\r\n        txtGramRegSem.push(\"NODO.push(INTRO.val); INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK.val := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO LISTANODOS\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO LISTAATRIBUTOS\");\r\n        txtGramRegSem.push(\"ATRIBUTO.push(LISTAATRIBUTOS.val); LISTAATRIBUTOS.val = ATRIBUTO.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '/' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '/' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'/'\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '=' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '=' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'='\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthans\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2]},{1:[2,6],4:$V1,9:7,10:4,11:8,12:[1,9]},{6:[1,11]},{6:$V2,7:15,8:[1,13],13:12,15:[1,14]},{1:[2,3]},{1:[2,4]},{1:[2,5]},{6:$V0},{6:$V2,7:17},{8:[1,18],15:[1,19]},{4:$V1,6:$V3,10:22,14:20,15:$V4,16:21,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,35]},o($Vf,[2,16],{7:15,13:36,6:$V2}),{17:[1,37]},{6:$V2,7:38},{4:$V1,6:$V3,10:22,14:39,15:$V4,16:40,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,41]},{4:[1,42],10:43},{4:[1,44]},{4:[2,14]},{4:[2,31],6:$V3,15:$V4,16:45,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,32],6:$V3,15:$V4,16:46,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,33],6:$V3,15:$V4,16:47,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,35],6:$V3,15:$V4,16:48,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,36],6:$V3,15:$V4,16:49,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,37],6:$V3,15:$V4,16:50,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,38],6:$V3,15:$V4,16:51,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,39],6:$V3,15:$V4,16:52,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,34],6:$V3,15:$V4,16:53,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,40],6:$V3,15:$V4,16:54,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,41],6:$V3,15:$V4,16:55,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,42],6:$V3,15:$V4,16:56,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},o($Vg,[2,12]),o($Vf,[2,15]),{18:[1,57],19:[1,58]},{5:[1,59]},{4:[1,60],10:43},{4:[1,61]},o($Vg,[2,9]),{6:$V0,15:[1,62]},{4:[2,13]},{15:[1,63]},{4:[2,19]},{4:[2,20]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},o($Vh,[2,17]),o($Vh,[2,18]),{8:[1,64]},{6:$V0,15:[1,65]},{15:[1,66]},{6:[1,67]},{6:[1,68]},{4:$V1,9:69,10:4},{6:[1,70]},{6:[1,71]},{8:[1,72]},{8:[1,73]},{1:[2,1]},{8:[1,74]},{8:[1,75]},o($Vg,[2,10]),o($Vg,[2,11]),o($Vg,[2,7]),o($Vg,[2,8])],\r\ndefaultActions: {3:[2,2],7:[2,3],8:[2,4],9:[2,5],22:[2,14],43:[2,13],45:[2,19],46:[2,20],47:[2,21],48:[2,22],49:[2,23],50:[2,24],51:[2,25],52:[2,26],53:[2,27],54:[2,28],55:[2,29],56:[2,30],69:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReportDesc;\r\nexports.Parser = xmlReportDesc.Parser;\r\nexports.parse = function () { return xmlReportDesc.parse.apply(xmlReportDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserXmlDesc = require('../Grammar/xmlGrammarDesc');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parserReportDesc = require('../Reportes/xmlReportDesc');\r\n/*\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXPATHDesc = require('../Grammar/XPATHparserDesc');*/\r\n\r\nexport default class Main extends Component {\r\n\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            \r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n\r\n\r\n        console.log(ast);\r\n        console.log(encoding)\r\n        console.log(listaErrores);\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    parseDesc = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let encoding = \"\";\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n\r\n        try {\r\n            const result = parserXmlDesc.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            \r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReportDesc.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //console.log(ast)\r\n        //console.log(listaErrores)\r\n       \r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n\r\n    handleFileChangeXpath = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST Xpath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parseDesc}>RUN DESC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST Xpath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={6} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Main from \"./components/main\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/tytusx/20211SVAC/G06\">\n        <Route path=\"/\" exact component={Main} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n    }\r\n    \r\n    public setPos(pos: number){\r\n        this.pos= pos;\r\n    }\r\n\r\n\r\n    public getAtributos(idAtrubito: string) : Simbolo[] {\r\n\r\n        var L_atrubitos : Simbolo[] = []; //          \r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            \r\n            if (Simbolo.identificador === idAtrubito){\r\n                L_atrubitos.push(Simbolo)\r\n            }\r\n        }\r\n\r\n        return L_atrubitos;\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n    }\r\n\r\n    public setPos(pos :number){\r\n        this.pos = pos;\r\n    }\r\n\r\n}"],"sourceRoot":""}
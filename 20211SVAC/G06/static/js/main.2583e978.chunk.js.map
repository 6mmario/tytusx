{"version":3,"sources":["xpathAST/Expresiones/Relacional.tsx","components/main.tsx","Grammar/xmlGrammar.js","Grammar/xmlGrammarDesc.js","Reportes/xmlReport.js","Reportes/xmlReportDesc.js","Grammar/XPATHparser.js","Grammar/XPATHparserDesc.js","App.tsx","reportWebVitals.ts","index.tsx","Reportes/NodoCST.tsx","xmlAST/ClaseError.tsx","xmlAST/Entorno.tsx","Reportes/SimboloTabla.tsx","xpathAST/Expresiones/Primitivo.tsx","xmlAST/Simbolo.tsx","xpathAST/Expresiones/Acceso.tsx","xpathAST/Expresiones/Aritmetico.tsx","xpathAST/Expresiones/Logica.tsx","xpathAST/Expresiones/Path.tsx"],"names":["operacionRelacional","Relacional","line","column","hijoIzq","hijoDer","tipoOperacion","sym","ent","simboloPadre","valorIzq","this","execute","valorDer","type","tipoPrimitivo","RESP","value","valIzq","valDer","NODO","validar","BOOL","IGUAL","DIFERENCIACION","MENOR","MENORIGUAL","MAYOR","MAYORIGUAL","Error","parser","require","parserXmlDesc","parserReport","parserReportDesc","parseXPATH","Main","state","consoleResult","xpath","xml","repcsttxt","repgramtxt","repErrorXML","repTablaSimbolos","repAstXpath","graphvizContent","parse","ast","entornoGlobal","listaErrores","encoding","result","Entorno","buf","Buffer","console","log","toString","length","xmlResRep","setState","crearTextoGraphvizRepGram","ReporteGramatical","crearTextoGraphvizCST","ReporteCST","crearTextoGraphvizTablaSimbolos","crearTablaSimbolos","crearTextoReporteErrorXML","error","alert","querys","erroresSemanticos","salida","query","push","parseDesc","querys2","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","handleFileChangeXpath","onChangeReports","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","className","title","maxSize","onChange","onError","errMsg","Item","onClick","fileDownload","xs","md","Control","placeholder","variant","as","rows","Group","name","size","dot","options","height","width","zoom","readOnly","Component","xmlGrammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","trace","yy","symbols_","terminals_","2","4","5","6","8","11","15","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","valor","setPos","$","ClaseError","first_line","first_column","Simbolo","table","3","9","10","1","12","17","7","13","14","16","defaultActions","parseError","str","hash","recoverable","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","popStack","n","getPrototypeOf","symbol","preErrorSymbol","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","text","match","loc","Array","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlGrammarDesc","48","49","50","51","52","53","54","55","56","57","58","59","72","xmlReport","raizaux","nodoaux","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","NodoCST","txtGramProdAux","txtGramRegSemAux","lista","44","xmlReportDesc","43","45","46","47","69","XPATHparser","$Vy","28","29","30","31","32","34","35","36","37","38","setipoQuery","Path","Acceso","Aritmetico","operacionAritmetica","SUMA","RESTA","MULT","DIV","MOD","Logica","operacionLogica","AND","OR","Primitivo","STRING","NUMBER","33","tmp","XPATHparserDesc","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","nuevo","nombre","indice","listaNodos","Nombre","padre","texto","key","producciones","reglas","tipo","linea","columna","listaErr","listaSimbolos","listaE","identificador","listaEntornos","pos","idAtrubito","L_atrubitos","SimboloTabla","ambito","re","re2","re3","newstr","resultado","entorno","Number","String","tipoAcceso","predicados","tipoQuery","L_Accesos","tipoPath","validarPredicadosNodos","getQuery","construirNodos","unirSalida","entPadre","posActAcceso","entActual","tab","atributos","atri","replaceAll"],"mappings":"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","file":"static/js/main.2583e978.chunk.js","sourcesContent":["import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum operacionRelacional {\r\n    IGUAL,\r\n    DIFERENCIACION,\r\n    MENOR,\r\n    MENORIGUAL,\r\n    MAYOR,\r\n    MAYORIGUAL\r\n}\r\n////fechaPublicacion[@año>/biblioteca[1]/libro[3]/fechaPublicacion[1]/@año]     \r\n\r\nexport class Relacional implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionRelacional,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if (valorIzq.type === tipoPrimitivo.RESP && valorDer.type === tipoPrimitivo.RESP) {\r\n\r\n            for (const valIzq of valorIzq.value ) {\r\n                for (const valDer of valorDer.value) {\r\n                    \r\n                    if (valIzq.type != tipoPrimitivo.NODO && valDer.type != tipoPrimitivo.NODO){\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }else {\r\n\r\n                        if (this.validar(valIzq, valDer)){\r\n                            return {value: true, type: tipoPrimitivo.BOOL}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL}; \r\n            \r\n        }else if (valorIzq.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valIzq of valorIzq.value) {\r\n                if (valIzq.type != tipoPrimitivo.NODO){\r\n                    if (this.validar(valIzq, valorDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n\r\n        }else if (valorDer.type === tipoPrimitivo.RESP){\r\n\r\n            for (const valDer of valorDer.value) {\r\n                if (valDer.type != tipoPrimitivo.NODO){\r\n                    if (this.validar(valorIzq, valDer)){\r\n                        return {value: true, type: tipoPrimitivo.BOOL}\r\n                    }\r\n                }\r\n            }\r\n            return {value: false , type : tipoPrimitivo.BOOL};\r\n            \r\n        }else {\r\n            return { value: this.validar(valorIzq, valorDer), type: tipoPrimitivo.BOOL }\r\n        }\r\n\r\n    }\r\n\r\n    private validar(valorIzq : Retorno, valorDer: Retorno): boolean{\r\n        \r\n        if (this.tipoOperacion === operacionRelacional.IGUAL) {\r\n            const result = valorIzq.value === valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.DIFERENCIACION) {\r\n            const result = valorIzq.value !== valorDer.value;\r\n            return result\r\n        }else if (this.tipoOperacion === operacionRelacional.MENOR) { \r\n            const result = valorIzq.value < valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MENORIGUAL) {\r\n            const result = valorIzq.value <= valorDer.value;\r\n            return result;\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYOR) {\r\n            const result = valorIzq.value > valorDer.value;\r\n            return result\r\n        } else if (this.tipoOperacion === operacionRelacional.MAYORIGUAL) {\r\n            const result = valorIzq.value >= valorDer.value;\r\n            return result;\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport { crearTextoReporteErrorXML } from \"../xmlAST/ClaseError\";\r\nimport { crearTablaSimbolos, crearTextoGraphvizTablaSimbolos, SimboloTabla } from \"../Reportes/SimboloTabla\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nconst parser = require('../Grammar/xmlGrammar');\r\nconst parserXmlDesc = require('../Grammar/xmlGrammarDesc');\r\nconst parserReport = require('../Reportes/xmlReport');\r\nconst parserReportDesc = require('../Reportes/xmlReportDesc');\r\nconst parseXPATH = require('../Grammar/XPATHparser');\r\nconst parseXPATHDesc = require('../Grammar/XPATHparserDesc');\r\n\r\nexport default class Main extends Component {\r\n\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repTablaSimbolos: '',\r\n        repAstXpath: '',\r\n        graphvizContent: ''\r\n    }\r\n\r\n    parse = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n        let encoding = \"\";\r\n        try {\r\n            const result = parser.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            var buf = new Buffer(\"Hello World\");\r\n            console.log(buf.toString(\"ascii\"));\r\n            console.log(\"---------------------\");\r\n            console.log(buf.toString(\"utf8\"));\r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReport.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n\r\n\r\n        console.log(ast);\r\n        console.log(encoding)\r\n        console.log(listaErrores);\r\n\r\n\r\n        try {\r\n            const querys = parseXPATH.parse(this.state.xpath)\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n\r\n            for (const query of querys) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            console.log(salida);\r\n\r\n            this.setState({\r\n                consoleResult: salida,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    parseDesc = () => {\r\n        let ast;\r\n        let listaErrores = [];\r\n        let TablaSimbolos = [];\r\n\r\n        let repcsttxt2 = '';\r\n        let repgramtxt2 = '';\r\n        let repErrorXML2 = '';\r\n        let repTablaSimbolos2 = '';\r\n        let encoding = \"\";\r\n        let texto = \"\";\r\n        let indice = 1;\r\n        let entornoGlobal;\r\n\r\n        try {\r\n            const result = parserXmlDesc.parse(this.state.xml)\r\n            ast = result.ast;\r\n            encoding = result.encoding;\r\n            listaErrores = result.listaErrores;\r\n            entornoGlobal = new Entorno('Global', '', 0, 0, [], ast);\r\n            \r\n            if (listaErrores.length === 0) {\r\n                var xmlResRep = parserReportDesc.parse(this.state.xml);\r\n                this.setState({\r\n                    repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], repgramtxt2) + \"}\",\r\n                    repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, repcsttxt2) + \"}\",\r\n                    repTablaSimbolos: \"digraph G {\" + crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal, TablaSimbolos, \"Global\"), repTablaSimbolos2) + \"}\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores, repErrorXML2) + \"}\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Irrecoverable Xml Syntax Error\")\r\n        }\r\n        //console.log(ast)\r\n        //console.log(listaErrores)\r\n        try {\r\n\r\n            const querys2 = parseXPATH.parse(this.state.xpath)\r\n            var erroresSemanticos: string[] = [];\r\n            var salida = \"\";\r\n            for (const query of querys2) {\r\n                try {\r\n                    salida += query.execute(ast[0]).value;\r\n                } catch (error) {\r\n                    erroresSemanticos.push(error)\r\n                }\r\n            }\r\n            console.log(salida);\r\n\r\n            this.setState({\r\n                consoleResult: salida\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    handleFileChange = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n\r\n    handleFileChangeXpath = file => {\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n            //console.log(e.target.result)\r\n            try {\r\n                this.setState({\r\n                    xpath: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        } else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        } else if (e.target.value === \"AST Xpath\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repAstXpath\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Open File\" id=\"navbarScrollingDropdown\">\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChangeXpath} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >Xpath File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                                <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                    <NavDropdown.Item >XML File</NavDropdown.Item>\r\n                                </FilePicker>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Clean\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xpath: ''\r\n                                    })\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    this.setState({\r\n                                        xml: ''\r\n                                    })\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Save\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xpath, 'xpath.txt');\r\n                                }} >Xpath</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {\r\n                                    var fileDownload = require('js-file-download');\r\n                                    fileDownload(this.state.xml, 'xml.txt');\r\n                                }} >XML</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                value={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parseDesc}>RUN DESC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Form.Control as=\"textarea\" placeholder=\"XML AREA\" rows={15} value={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                            <option>AST Xpath</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={6} value={this.state.consoleResult} readOnly />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammar = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[6,8,15],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,15,18,19,20,21,22,23,24,25,26,27],$Vx=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\n$$[$0-1].setPos($$[$0-2].length);$$[$0-2].push($$[$0-1]); this.$ = $$[$0-2];\r\nbreak;\r\ncase 4:\r\n$$[$0-1].setPos(0);this.$ = [$$[$0-1]];\r\nbreak;\r\ncase 7:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \r\nbreak;\r\ncase 9:\r\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\r\nbreak;\r\ncase 10:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \r\nbreak;\r\ncase 12:\r\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\r\nbreak;\r\ncase 13:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\nbreak;\r\ncase 15:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 17:\r\n$$[$0].setPos($$[$0-1].length); $$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 18:\r\n$$[$0].setPos(0);this.$ = [$$[$0]];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = $$[$0-1] +\" \"+ \"<\"\r\nbreak;\r\ncase 25:\r\nthis.$ = $$[$0-1] +\" \"+ \">\"\r\nbreak;\r\ncase 26:\r\nthis.$ = $$[$0-1] +\" \"+ \"&\"\r\nbreak;\r\ncase 27:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\r\nbreak;\r\ncase 28:\r\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],17:12},{6:[1,14]},{6:$V4,7:18,8:[1,16],13:15,15:[1,17]},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21},{6:$V4,7:24,8:[1,22],15:[1,23]},{2:$V0,4:$V2,6:$V7,10:27,14:25,15:$V8,16:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{6:$V4,7:42},{2:$V0,4:$V2,6:$V7,10:27,14:43,15:$V8,16:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{5:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,15:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,15:[1,66]},o($V5,[2,15]),{15:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vx,[2,19]),o($Vx,[2,20]),{8:[1,68]},{6:$V1,15:[1,69]},{15:[1,70]},{6:[1,71]},{6:[1,72]},{2:$V0,4:$V2,9:73,10:4},{6:[1,74]},{6:[1,75]},{8:[1,76]},{8:[1,77]},{1:[2,1],2:$V0,4:$V2,10:8},{8:[1,78]},{8:[1,79]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\r\ndefaultActions: {},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammar;\r\nexports.Parser = xmlGrammar.Parser;\r\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlGrammarDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,11],$V3=[1,19],$V4=[2,4],$V5=[1,2,4,12],$V6=[1,28],$V7=[1,36],$V8=[1,37],$V9=[1,27],$Va=[1,26],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[1,33],$Vg=[1,34],$Vh=[1,35],$Vi=[8,15],$Vj=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"FINDERROR\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[17,1],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: $$[$0-3].valor};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp, encoding: ''};\r\n    \r\nbreak;\r\ncase 3:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0]; \r\nbreak;\r\ncase 4:\r\nthis.$ = [$$[$0-1]]; \r\nbreak;\r\ncase 7:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \r\nbreak;\r\ncase 9:\r\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\r\nbreak;\r\ncase 10:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \r\nbreak;\r\ncase 12:\r\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\r\nbreak;\r\ncase 13:\r\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\r\nbreak;\r\ncase 15:\r\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\r\nbreak;\r\ncase 16: case 18:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 17:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 19: case 20:\r\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\nbreak;\r\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\r\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\r\nbreak;\r\ncase 24:\r\nthis.$ = \"<\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 25:\r\nthis.$ = \">\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 26:\r\nthis.$ = \"&\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 27:\r\nthis.$ = \"\\'\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 28:\r\nthis.$ = \"\\\"\" +\" \"+ $$[$0]\r\nbreak;\r\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 37:\r\nthis.$ = \"<\"\r\nbreak;\r\ncase 38:\r\nthis.$ = \">\"\r\nbreak;\r\ncase 39:\r\nthis.$ = \"&\"\r\nbreak;\r\ncase 40:\r\nthis.$ = \"\\'\"\r\nbreak;\r\ncase 41:\r\nthis.$ = \"\\\"\"\r\nbreak;\r\n}\r\n},\r\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2]},{1:[2,6],2:$V0,4:$V2,9:8,10:4,11:9,12:[1,10]},{8:[1,13],17:12},{6:[1,14]},{6:$V3,7:18,8:[1,16],13:15,15:[1,17]},{1:[2,3]},{1:$V4},{1:[2,5]},{6:$V1},o($V5,[2,13]),o($V5,[2,14]),{6:$V3,7:20},{8:[1,21],15:[1,22]},{2:$V0,4:$V2,6:$V6,10:25,14:23,15:$V7,16:24,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,38]},o($Vi,[2,18],{7:18,13:39,6:$V3}),{18:[1,40]},{6:$V3,7:41},{2:$V0,4:$V2,6:$V6,10:25,14:42,15:$V7,16:43,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,44]},{2:$V0,4:[1,45],10:46},{4:[1,47]},o($V4,[2,16]),{4:[2,33],6:$V6,15:$V7,16:48,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,34],6:$V6,15:$V7,16:49,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,35],6:$V6,15:$V7,16:50,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,37],6:$V6,15:$V7,16:51,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,38],6:$V6,15:$V7,16:52,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,39],6:$V6,15:$V7,16:53,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,40],6:$V6,15:$V7,16:54,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,41],6:$V6,15:$V7,16:55,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,36],6:$V6,15:$V7,16:56,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,42],6:$V6,15:$V7,16:57,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,43],6:$V6,15:$V7,16:58,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,44],6:$V6,15:$V7,16:59,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},o($V5,[2,12]),o($Vi,[2,17]),{19:[1,60],20:[1,61]},{5:[1,62]},{2:$V0,4:[1,63],10:46},{4:[1,64]},o($V5,[2,9]),{6:$V1,15:[1,65]},o($V4,[2,15]),{15:[1,66]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},{4:[2,31]},{4:[2,32]},o($Vj,[2,19]),o($Vj,[2,20]),{8:[1,67]},{6:$V1,15:[1,68]},{15:[1,69]},{6:[1,70]},{6:[1,71]},{2:$V0,4:$V2,9:72,10:4},{6:[1,73]},{6:[1,74]},{8:[1,75]},{8:[1,76]},{1:[2,1]},{8:[1,77]},{8:[1,78]},o($V5,[2,10]),o($V5,[2,11]),o($V5,[2,7]),o($V5,[2,8])],\r\ndefaultActions: {3:[2,2],8:[2,3],9:[2,4],10:[2,5],48:[2,21],49:[2,22],50:[2,23],51:[2,24],52:[2,25],53:[2,26],54:[2,27],55:[2,28],56:[2,29],57:[2,30],58:[2,31],59:[2,32],72:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse (input) {\r\n    var self = this,\r\n        stack = [0],\r\n        tstack = [], // token stack\r\n        vstack = [null], // semantic value stack\r\n        lstack = [], // location stack\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n\r\n    var args = lstack.slice.call(arguments, 1);\r\n\r\n    //this.reductionCount = this.shiftCount = 0;\r\n\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    // copy state\r\n    for (var k in this.yy) {\r\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n        sharedState.yy[k] = this.yy[k];\r\n      }\r\n    }\r\n\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n\r\n    function popStack (n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n\r\n_token_stack:\r\n    var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        // if token isn't its numeric value, convert\r\n        if (typeof token !== 'number') {\r\n            token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n    }\r\n\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        // retreive state number from top of stack\r\n        state = stack[stack.length - 1];\r\n\r\n        // use default actions if available\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            // read action for current state and first input\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n\r\n_handle_error:\r\n        // handle parse error\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var error_rule_depth;\r\n            var errStr = '';\r\n\r\n            // Return the rule stack depth where the nearest error rule can be found.\r\n            // Return FALSE when no error recovery rule was found.\r\n            function locateNearestErrorRecoveryRule(state) {\r\n                var stack_probe = stack.length - 1;\r\n                var depth = 0;\r\n\r\n                // try to recover from error\r\n                for(;;) {\r\n                    // check for error recovery rule in this state\r\n                    if ((TERROR.toString()) in table[state]) {\r\n                        return depth;\r\n                    }\r\n                    if (state === 0 || stack_probe < 2) {\r\n                        return false; // No suitable error recovery rule available.\r\n                    }\r\n                    stack_probe -= 2; // popStack(1): [symbol, action]\r\n                    state = stack[stack_probe];\r\n                    ++depth;\r\n                }\r\n            }\r\n\r\n            if (!recovering) {\r\n                // first see if there's any chance at hitting an error recovery rule:\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n\r\n                // Report error\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\r\n                } else {\r\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\r\n                                  (symbol == EOF ? \"end of input\" :\r\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected,\r\n                    recoverable: (error_rule_depth !== false)\r\n                });\r\n            } else if (preErrorSymbol !== EOF) {\r\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\r\n            }\r\n\r\n            // just recovered from another error\r\n            if (recovering == 3) {\r\n                if (symbol === EOF || preErrorSymbol === EOF) {\r\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\r\n                }\r\n\r\n                // discard current lookahead and grab another\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                symbol = lex();\r\n            }\r\n\r\n            // try to recover from error\r\n            if (error_rule_depth === false) {\r\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\r\n            }\r\n            popStack(error_rule_depth);\r\n\r\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\r\n            symbol = TERROR;         // insert generic error symbol as new lookahead\r\n            state = stack[stack.length-1];\r\n            action = table[state] && table[state][TERROR];\r\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\r\n        }\r\n\r\n        // this shouldn't happen, unless resolve defaults are off\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\r\n        }\r\n\r\n        switch (action[0]) {\r\n            case 1: // shift\r\n                //this.shiftCount++;\r\n\r\n                stack.push(symbol);\r\n                vstack.push(lexer.yytext);\r\n                lstack.push(lexer.yylloc);\r\n                stack.push(action[1]); // push state\r\n                symbol = null;\r\n                if (!preErrorSymbol) { // normal execution/no error\r\n                    yyleng = lexer.yyleng;\r\n                    yytext = lexer.yytext;\r\n                    yylineno = lexer.yylineno;\r\n                    yyloc = lexer.yylloc;\r\n                    if (recovering > 0) {\r\n                        recovering--;\r\n                    }\r\n                } else {\r\n                    // error just occurred, resume old lookahead f/ before error\r\n                    symbol = preErrorSymbol;\r\n                    preErrorSymbol = null;\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                // reduce\r\n                //this.reductionCount++;\r\n\r\n                len = this.productions_[action[1]][1];\r\n\r\n                // perform semantic action\r\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\r\n                // default location, uses first token for firsts, last for lasts\r\n                yyval._$ = {\r\n                    first_line: lstack[lstack.length-(len||1)].first_line,\r\n                    last_line: lstack[lstack.length-1].last_line,\r\n                    first_column: lstack[lstack.length-(len||1)].first_column,\r\n                    last_column: lstack[lstack.length-1].last_column\r\n                };\r\n                if (ranges) {\r\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\r\n                }\r\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\r\n\r\n                if (typeof r !== 'undefined') {\r\n                    return r;\r\n                }\r\n\r\n                // pop off stack\r\n                if (len) {\r\n                    stack = stack.slice(0,-1*len*2);\r\n                    vstack = vstack.slice(0, -1*len);\r\n                    lstack = lstack.slice(0, -1*len);\r\n                }\r\n\r\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\r\n                vstack.push(yyval.$);\r\n                lstack.push(yyval._$);\r\n                // goto new state = table[STATE][NONTERMINAL]\r\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\r\n                stack.push(newState);\r\n                break;\r\n\r\n            case 3:\r\n                // accept\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n}};\r\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 18;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 20;\r\nbreak;\r\ncase 8:return 19;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 26;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return 22;\r\nbreak;\r\ncase 13:return 23;\r\nbreak;\r\ncase 14:return 24;\r\nbreak;\r\ncase 15:return 25;\r\nbreak;\r\ncase 16:return 27;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlGrammarDesc;\r\nexports.Parser = xmlGrammarDesc.Parser;\r\nexports.parse = function () { return xmlGrammarDesc.parse.apply(xmlGrammarDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReport = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[6,8,15],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,15,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11],$Vv=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODO.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:15,8:[1,13],13:12,15:[1,14]},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18},{6:$V3,7:21,8:[1,19],15:[1,20]},{4:$V1,6:$V4,10:24,14:22,15:$V5,16:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{6:$V3,7:39},{4:$V1,6:$V4,10:24,14:40,15:$V5,16:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{5:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,15:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,15:[1,63]},{4:[2,13]},{15:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vv,[2,17]),o($Vv,[2,18]),{8:[1,65]},{6:$V0,15:[1,66]},{15:[1,67]},{6:[1,68]},{6:[1,69]},{4:$V1,9:70,10:4},{6:[1,71]},{6:[1,72]},{8:[1,73]},{8:[1,74]},{1:[2,1],4:$V1,10:7},{8:[1,75]},{8:[1,76]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\r\ndefaultActions: {24:[2,14],44:[2,13]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 11;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReport;\r\nexports.Parser = xmlReport.Parser;\r\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xmlReportDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,16],$V3=[1,25],$V4=[1,33],$V5=[1,34],$V6=[1,24],$V7=[1,23],$V8=[1,26],$V9=[1,27],$Va=[1,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[8,15],$Vg=[1,4,12],$Vh=[5,6,8,15];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"ATRIBUTO\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTAATRIBUTOS\":13,\"LISTANODOS\":14,\"/\":15,\"NODOTEXTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",15:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\r\nproductions_: [0,[3,8],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[14,2],[14,1],[13,2],[13,1],[7,3],[7,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1],[16,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n        txtGramProd.push(\"INIT := menor ? id ATRIBUTO ATRIBUTO ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-4]);\r\n        contador++;\r\n        raiz.crearNodo(\"ATRIBUTO\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n\r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 2:\r\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        \r\n        contador = 0;\r\n        raizaux = raiz;\r\n        raiz = new NodoCST(\"INIT\",0,[]);\r\n        txtGramProdAux = txtGramProd;\r\n        txtGramProd = [];\r\n        txtGramRegSemAux = txtGramRegSem;\r\n        txtGramRegSem = [];\r\n\r\n        return {ReporteGramatical: [txtGramProdAux,txtGramRegSemAux],ReporteCST: raizaux};\r\n    \r\nbreak;\r\ncase 3:\r\n\r\n        txtGramProd.push(\"INTRO := NODO INTRO\");\r\n        txtGramRegSem.push(\"NODO.push(INTRO.val); INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 4:\r\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 5:\r\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 6:\r\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK.val := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 7:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 8:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 9:\r\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 10:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 11:\r\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 12:\r\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 13:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO LISTANODOS\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 14:\r\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 15:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO LISTAATRIBUTOS\");\r\n        txtGramRegSem.push(\"ATRIBUTO.push(LISTAATRIBUTOS.val); LISTAATRIBUTOS.val = ATRIBUTO.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 16:\r\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 17:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 18:\r\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 19:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 20:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 21:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 22:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 23:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 24:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 25:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 26:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 27:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 28:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 29:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '/' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '/' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'/'\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 30:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := '=' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '=' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'='\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 31:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 32:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 33:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 34:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 35:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthans\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 36:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 37:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 38:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 39:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 40:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 41:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\ncase 42:\r\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2]},{1:[2,6],4:$V1,9:7,10:4,11:8,12:[1,9]},{6:[1,11]},{6:$V2,7:15,8:[1,13],13:12,15:[1,14]},{1:[2,3]},{1:[2,4]},{1:[2,5]},{6:$V0},{6:$V2,7:17},{8:[1,18],15:[1,19]},{4:$V1,6:$V3,10:22,14:20,15:$V4,16:21,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,35]},o($Vf,[2,16],{7:15,13:36,6:$V2}),{17:[1,37]},{6:$V2,7:38},{4:$V1,6:$V3,10:22,14:39,15:$V4,16:40,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,41]},{4:[1,42],10:43},{4:[1,44]},{4:[2,14]},{4:[2,31],6:$V3,15:$V4,16:45,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,32],6:$V3,15:$V4,16:46,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,33],6:$V3,15:$V4,16:47,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,35],6:$V3,15:$V4,16:48,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,36],6:$V3,15:$V4,16:49,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,37],6:$V3,15:$V4,16:50,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,38],6:$V3,15:$V4,16:51,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,39],6:$V3,15:$V4,16:52,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,34],6:$V3,15:$V4,16:53,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,40],6:$V3,15:$V4,16:54,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,41],6:$V3,15:$V4,16:55,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,42],6:$V3,15:$V4,16:56,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},o($Vg,[2,12]),o($Vf,[2,15]),{18:[1,57],19:[1,58]},{5:[1,59]},{4:[1,60],10:43},{4:[1,61]},o($Vg,[2,9]),{6:$V0,15:[1,62]},{4:[2,13]},{15:[1,63]},{4:[2,19]},{4:[2,20]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},o($Vh,[2,17]),o($Vh,[2,18]),{8:[1,64]},{6:$V0,15:[1,65]},{15:[1,66]},{6:[1,67]},{6:[1,68]},{4:$V1,9:69,10:4},{6:[1,70]},{6:[1,71]},{8:[1,72]},{8:[1,73]},{1:[2,1]},{8:[1,74]},{8:[1,75]},o($Vg,[2,10]),o($Vg,[2,11]),o($Vg,[2,7]),o($Vg,[2,8])],\r\ndefaultActions: {3:[2,2],7:[2,3],8:[2,4],9:[2,5],22:[2,14],43:[2,13],45:[2,19],46:[2,20],47:[2,21],48:[2,22],49:[2,23],50:[2,24],51:[2,25],52:[2,26],53:[2,27],54:[2,28],55:[2,29],56:[2,30],69:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var raizaux;\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramProdAux = [];\r\n    var txtGramRegSem = [];\r\n    var txtGramRegSemAux = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:/*skip comments*/\r\nbreak;\r\ncase 2:return 4;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 15;\r\nbreak;\r\ncase 5:return 17;\r\nbreak;\r\ncase 6:return 5;\r\nbreak;\r\ncase 7:return 19;\r\nbreak;\r\ncase 8:return 18;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 25;\r\nbreak;\r\ncase 11:return 20;\r\nbreak;\r\ncase 12:return 21;\r\nbreak;\r\ncase 13:return 22;\r\nbreak;\r\ncase 14:return 23;\r\nbreak;\r\ncase 15:return 24;\r\nbreak;\r\ncase 16:return 26;\r\nbreak;\r\ncase 17:return 12;\r\nbreak;\r\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xmlReportDesc;\r\nexports.Parser = xmlReportDesc.Parser;\r\nexports.parse = function () { return xmlReportDesc.parse.apply(xmlReportDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar XPATHparser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[1,13],$V5=[5,7],$V6=[1,17],$V7=[1,18],$V8=[4,5,7,10,13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$V9=[1,21],$Va=[4,5,7,10,13,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$Vb=[1,38],$Vc=[1,37],$Vd=[1,32],$Ve=[1,33],$Vf=[1,34],$Vg=[1,35],$Vh=[1,44],$Vi=[1,42],$Vj=[1,43],$Vk=[1,45],$Vl=[1,46],$Vm=[1,47],$Vn=[1,48],$Vo=[1,49],$Vp=[1,50],$Vq=[1,51],$Vr=[1,52],$Vs=[1,53],$Vt=[1,54],$Vu=[13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$Vv=[20,21,22,25,26,27,28,29,30,31,32,35],$Vw=[13,20,21,22,23,25,26,27,28,29,30,31,32,35],$Vx=[20,25,26,31,32,35],$Vy=[20,25,26,27,28,29,30,31,32,35];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"/\":4,\"EOF\":5,\"MULTIPATH\":6,\"|\":7,\"PATH\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"PREDICADOS\":15,\"@\":16,\"PREDI\":17,\"[\":18,\"EXP\":19,\"]\":20,\"+\":21,\"-\":22,\"div\":23,\"mod\":24,\"=\":25,\"!=\":26,\"<\":27,\"<=\":28,\">\":29,\">=\":30,\"and\":31,\"or\":32,\"VALOR\":33,\"(\":34,\")\":35,\"cadena\":36,\"scadena\":37,\"number\":38,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"/\",5:\"EOF\",7:\"|\",10:\"//\",12:\"id\",13:\"*\",14:\".\",16:\"@\",18:\"[\",20:\"]\",21:\"+\",22:\"-\",23:\"div\",24:\"mod\",25:\"=\",26:\"!=\",27:\"<\",28:\"<=\",29:\">\",30:\">=\",31:\"and\",32:\"or\",34:\"(\",35:\")\",36:\"cadena\",37:\"scadena\",38:\"number\"},\nproductions_: [0,[3,2],[3,2],[3,1],[6,3],[6,1],[8,2],[8,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,2],[11,2],[11,2],[11,2],[11,3],[11,3],[15,2],[15,1],[17,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,1],[33,3],[33,1],[33,1],[33,1],[33,1],[33,2],[33,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\nreturn $$[$0-1];\nbreak;\ncase 3:\nreturn [];\nbreak;\ncase 4:\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 5: case 10: case 21:\nthis.$ = [$$[$0]];\nbreak;\ncase 6:\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'relativa');\nbreak;\ncase 7:\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'absoluta');\nbreak;\ncase 8:\n$$[$0].setipoQuery('relativa'); $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 9:\n$$[$0].setipoQuery('absoluta'); $$[$0-2].push($$[$0]); this.$ = $$[$0-2];\nbreak;\ncase 11:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\nbreak;\ncase 12:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\nbreak;\ncase 13:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\nbreak;\ncase 14:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\nbreak;\ncase 15:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\nbreak;\ncase 16:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\nbreak;\ncase 17:\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\nbreak;\ncase 18:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\nbreak;\ncase 19:\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\nbreak;\ncase 20:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\nbreak;\ncase 22: case 37:\nthis.$ = $$[$0-1];\nbreak;\ncase 23:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\nbreak;\ncase 24:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\nbreak;\ncase 25:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\nbreak;\ncase 26:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\nbreak;\ncase 27:\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\nbreak;\ncase 28:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\nbreak;\ncase 29:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\nbreak;\ncase 30:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\nbreak;\ncase 31:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\nbreak;\ncase 32:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\nbreak;\ncase 33:\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\nbreak;\ncase 34:\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\nbreak;\ncase 35:\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\nbreak;\ncase 36:\nthis.$ = $$[$0];\nbreak;\ncase 38: case 39:\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\nbreak;\ncase 40:\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\nbreak;\ncase 41:\n$$[$0][0].setipoQuery('sub'); this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\nbreak;\ncase 42:\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\nbreak;\ncase 43:\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:[1,4],6:3,8:5,10:$V0},{1:[3]},{5:[1,7],9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{5:[1,14],7:[1,15]},{1:[2,3]},o($V5,[2,5]),{9:16,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{1:[2,1]},o($V5,[2,6],{4:$V6,10:$V7}),o($V8,[2,10]),o($V8,[2,11],{15:19,17:20,18:$V9}),o($V8,[2,12],{17:20,15:22,18:$V9}),o($V8,[2,13]),{12:[1,23],13:[1,24]},{1:[2,2]},{4:[1,26],8:25,10:$V0},o($V5,[2,7],{4:$V6,10:$V7}),{11:27,12:$V1,13:$V2,14:$V3,16:$V4},{11:28,12:$V1,13:$V2,14:$V3,16:$V4},o($V8,[2,14],{17:29,18:$V9}),o($Va,[2,21]),{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:30,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},o($V8,[2,15],{17:29,18:$V9}),o($V8,[2,16],{17:20,15:39,18:$V9}),o($V8,[2,17],{17:20,15:40,18:$V9}),o($V5,[2,4]),{9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V8,[2,8]),o($V8,[2,9]),o($Va,[2,20]),{13:$Vh,20:[1,41],21:$Vi,22:$Vj,23:$Vk,24:$Vl,25:$Vm,26:$Vn,27:$Vo,28:$Vp,29:$Vq,30:$Vr,31:$Vs,32:$Vt},o($Vu,[2,36]),{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:55,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},o($Vu,[2,38]),o($Vu,[2,39]),o($Vu,[2,40]),o($Vu,[2,41],{4:$V6,10:$V7}),{9:56,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{9:57,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V8,[2,18],{17:29,18:$V9}),o($V8,[2,19],{17:29,18:$V9}),o($Va,[2,22]),{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:58,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:59,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:60,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:61,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:62,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:63,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:64,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:65,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:66,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:67,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:68,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:69,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{4:$Vb,9:36,10:$Vc,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:70,33:31,34:$Vd,36:$Ve,37:$Vf,38:$Vg},{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl,25:$Vm,26:$Vn,27:$Vo,28:$Vp,29:$Vq,30:$Vr,31:$Vs,32:$Vt,35:[1,71]},o($Vu,[2,42],{4:$V6,10:$V7}),o($Vu,[2,43],{4:$V6,10:$V7}),o($Vv,[2,23],{13:$Vh,23:$Vk,24:$Vl}),o($Vv,[2,24],{13:$Vh,23:$Vk,24:$Vl}),o($Vw,[2,25],{24:$Vl}),o($Vw,[2,26],{24:$Vl}),o($Vu,[2,27]),o($Vx,[2,28],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl,27:$Vo,28:$Vp,29:$Vq,30:$Vr}),o($Vx,[2,29],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl,27:$Vo,28:$Vp,29:$Vq,30:$Vr}),o($Vy,[2,30],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl}),o($Vy,[2,31],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl}),o($Vy,[2,32],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl}),o($Vy,[2,33],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl}),o([20,31,32,35],[2,34],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl,25:$Vm,26:$Vn,27:$Vo,28:$Vp,29:$Vq,30:$Vr}),o([20,32,35],[2,35],{13:$Vh,21:$Vi,22:$Vj,23:$Vk,24:$Vl,25:$Vm,26:$Vn,27:$Vo,28:$Vp,29:$Vq,30:$Vr,31:$Vs}),o($Vu,[2,37])],\ndefaultActions: {4:[2,3],7:[2,1],14:[2,2]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")   \r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:this.begin('string'); tmp=\"\"; \nbreak;\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\nbreak;\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 36;\r\n                  \nbreak;\ncase 8:this.begin('string'); tmp=\"\"; \nbreak;\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\nbreak;\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\nbreak;\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 37;\r\n                  \nbreak;\ncase 16:return 10\nbreak;\ncase 17:return 4\nbreak;\ncase 18:return '..'\nbreak;\ncase 19:return 14\nbreak;\ncase 20:return 16\nbreak;\ncase 21:return 18\nbreak;\ncase 22:return 20\nbreak;\ncase 23:return 34\nbreak;\ncase 24:return 35\nbreak;\ncase 25:return 7\nbreak;\ncase 26:return 21\nbreak;\ncase 27:return 22\nbreak;\ncase 28:return 13\nbreak;\ncase 29:return 23\nbreak;\ncase 30:return 25\nbreak;\ncase 31:return 26\nbreak;\ncase 32:return 28\nbreak;\ncase 33:return 30\nbreak;\ncase 34:return 27\nbreak;\ncase 35:return 29\nbreak;\ncase 36:return 32\nbreak;\ncase 37:return 31\nbreak;\ncase 38:return 24\nbreak;\ncase 39:return 38\nbreak;\ncase 40:return 12\nbreak;\ncase 41:return 5\nbreak;\ncase 42:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\nbreak;\n}\n},\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\s+\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = XPATHparser;\nexports.Parser = XPATHparser.Parser;\nexports.parse = function () { return XPATHparser.parse.apply(XPATHparser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XPATHparserDesc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[1,13],$V5=[5,8],$V6=[5,8,13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$V7=[4,5,8,10,13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$V8=[1,21],$V9=[1,37],$Va=[1,32],$Vb=[1,33],$Vc=[1,34],$Vd=[1,35],$Ve=[1,43],$Vf=[1,41],$Vg=[1,42],$Vh=[1,44],$Vi=[1,45],$Vj=[1,46],$Vk=[1,47],$Vl=[1,48],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[13,20,21,22,23,24,25,26,27,28,29,30,31,32,35],$Vs=[20,21,22,25,26,27,28,29,30,31,32,35],$Vt=[13,20,21,22,23,25,26,27,28,29,30,31,32,35],$Vu=[20,25,26,31,32,35],$Vv=[20,25,26,27,28,29,30,31,32,35];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INIT\":3,\"/\":4,\"EOF\":5,\"MULTIPATH\":6,\"PATH\":7,\"|\":8,\"LACCESOS\":9,\"//\":10,\"ACCESO\":11,\"id\":12,\"*\":13,\".\":14,\"PREDICADOS\":15,\"@\":16,\"PREDI\":17,\"[\":18,\"EXP\":19,\"]\":20,\"+\":21,\"-\":22,\"div\":23,\"mod\":24,\"=\":25,\"!=\":26,\"<\":27,\"<=\":28,\">\":29,\">=\":30,\"and\":31,\"or\":32,\"VALOR\":33,\"(\":34,\")\":35,\"cadena\":36,\"scadena\":37,\"number\":38,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",4:\"/\",5:\"EOF\",8:\"|\",10:\"//\",12:\"id\",13:\"*\",14:\".\",16:\"@\",18:\"[\",20:\"]\",21:\"+\",22:\"-\",23:\"div\",24:\"mod\",25:\"=\",26:\"!=\",27:\"<\",28:\"<=\",29:\">\",30:\">=\",31:\"and\",32:\"or\",34:\"(\",35:\")\",36:\"cadena\",37:\"scadena\",38:\"number\"},\r\nproductions_: [0,[3,2],[3,2],[3,1],[6,3],[6,1],[7,2],[7,2],[9,3],[9,3],[9,1],[11,1],[11,1],[11,1],[11,2],[11,2],[11,2],[11,2],[11,3],[11,3],[15,2],[15,1],[17,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,1],[33,3],[33,1],[33,1],[33,1],[33,1],[33,2]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1: case 2:\r\nreturn $$[$0-1];\r\nbreak;\r\ncase 3:\r\nreturn [];\r\nbreak;\r\ncase 4:\r\n$$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 5: case 10: case 21:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 6:\r\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'relativa');\r\nbreak;\r\ncase 7:\r\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'absoluta');\r\nbreak;\r\ncase 8:\r\n$$[$0-2].setipoQuery('relativa'); $$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 9:\r\n$$[$0-2].setipoQuery('absoluta'); $$[$0].push($$[$0-2]); this.$ = $$[$0];\r\nbreak;\r\ncase 11:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'nodo', []);\r\nbreak;\r\ncase 12:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosNodos', []);\r\nbreak;\r\ncase 13:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'actual', []);\r\nbreak;\r\ncase 14:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'nodo', $$[$0]);\r\nbreak;\r\ncase 15:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosNodos', $$[$0]);\r\nbreak;\r\ncase 16:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'atributo', []);\r\nbreak;\r\ncase 17:\r\nthis.$ = new Acceso(_$[$0].first_line, _$[$0].first_column, $$[$0], 'todosAtributos', []);\r\nbreak;\r\ncase 18:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'atributo', $$[$0]);\r\nbreak;\r\ncase 19:\r\nthis.$ = new Acceso(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-1], 'todosAtributos', $$[$0]);\r\nbreak;\r\ncase 20:\r\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\r\nbreak;\r\ncase 22: case 37:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 23:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.SUMA, $$[$0-1]);\r\nbreak;\r\ncase 24:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.RESTA, $$[$0-1]);\r\nbreak;\r\ncase 25:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MULT, $$[$0-1]);\r\nbreak;\r\ncase 26:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.DIV, $$[$0-1]);\r\nbreak;\r\ncase 27:\r\nthis.$ = new Aritmetico(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionAritmetica.MOD, $$[$0-1]);\r\nbreak;\r\ncase 28:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.IGUAL, $$[$0-1]);\r\nbreak;\r\ncase 29:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.DIFERENCIACION, $$[$0-1]);\r\nbreak;\r\ncase 30:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENOR, $$[$0-1]);\r\nbreak;\r\ncase 31:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MENORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 32:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYOR, $$[$0-1]);\r\nbreak;\r\ncase 33:\r\nthis.$ = new Relacional(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionRelacional.MAYORIGUAL, $$[$0-1]);\r\nbreak;\r\ncase 34:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.AND, $$[$0-1]);\r\nbreak;\r\ncase 35:\r\nthis.$ = new Logica(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0-2], $$[$0], operacionLogica.OR, $$[$0-1]);\r\nbreak;\r\ncase 36:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 38: case 39:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.STRING);\r\nbreak;\r\ncase 40:\r\nthis.$ = new Primitivo(_$[$0].first_line, _$[$0].first_column, $$[$0], tipoPrimitivo.NUMBER);\r\nbreak;\r\ncase 41:\r\n$$[$0][0].setipoQuery('relativa'); this.$ = new Path(_$[$0].first_line, _$[$0].first_column, $$[$0], 'sub');\r\nbreak;\r\ncase 42:\r\n$$[$0][0].setipoQuery('absoluta'); this.$ = new Path(_$[$0-1].first_line, _$[$0-1].first_column, $$[$0], 'sub');\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:[1,2],5:[1,4],6:3,7:5,10:$V0},{1:[3]},{5:[1,7],9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{5:[1,14]},{1:[2,3]},{5:[2,5],8:[1,15]},{9:16,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{1:[2,1]},o($V5,[2,6]),o($V6,[2,10],{4:[1,17],10:[1,18]}),o($V7,[2,11],{15:19,17:20,18:$V8}),o($V7,[2,12],{17:20,15:22,18:$V8}),o($V7,[2,13]),{12:[1,23],13:[1,24]},{1:[2,2]},{4:[1,26],6:25,7:5,10:$V0},o($V5,[2,7]),{9:27,11:9,12:$V1,13:$V2,14:$V3,16:$V4},{9:28,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V7,[2,14]),o($V7,[2,21],{17:20,15:29,18:$V8}),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:30,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},o($V7,[2,15]),o($V7,[2,16],{17:20,15:38,18:$V8}),o($V7,[2,17],{17:20,15:39,18:$V8}),{5:[2,4]},{9:8,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V6,[2,8]),o($V6,[2,9]),o($V7,[2,20]),{13:$Ve,20:[1,40],21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp,32:$Vq},o($Vr,[2,36]),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:54,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},o($Vr,[2,38]),o($Vr,[2,39]),o($Vr,[2,40]),o($Vr,[2,41]),{9:55,11:9,12:$V1,13:$V2,14:$V3,16:$V4},o($V7,[2,18]),o($V7,[2,19]),o([4,5,8,10,13,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35],[2,22]),{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:56,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:57,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:58,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:59,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:60,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:61,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:62,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:63,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:64,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:65,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:66,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:67,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{9:36,10:$V9,11:9,12:$V1,13:$V2,14:$V3,16:$V4,19:68,33:31,34:$Va,36:$Vb,37:$Vc,38:$Vd},{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp,32:$Vq,35:[1,69]},o($Vr,[2,42]),o($Vs,[2,23],{13:$Ve,23:$Vh,24:$Vi}),o($Vs,[2,24],{13:$Ve,23:$Vh,24:$Vi}),o($Vt,[2,25],{24:$Vi}),o($Vt,[2,26],{24:$Vi}),o($Vr,[2,27]),o($Vu,[2,28],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o($Vu,[2,29],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o($Vv,[2,30],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,31],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,32],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o($Vv,[2,33],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi}),o([20,31,32,35],[2,34],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo}),o([20,32,35],[2,35],{13:$Ve,21:$Vf,22:$Vg,23:$Vh,24:$Vi,25:$Vj,26:$Vk,27:$Vl,28:$Vm,29:$Vn,30:$Vo,31:$Vp}),o($Vr,[2,37])],\r\ndefaultActions: {4:[2,3],7:[2,1],14:[2,2],25:[2,4]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const {Acceso} = require(\"../xpathAST/Expresiones/Acceso\");\r\n    const {Aritmetico, operacionAritmetica} = require(\"../xpathAST/Expresiones/Aritmetico\");\r\n    const {Logica, operacionLogica} = require(\"../xpathAST/Expresiones/Logica\");\r\n    const {Path} = require(\"../xpathAST/Expresiones/Path\");\r\n    const {Primitivo, tipoPrimitivo} = require(\"../xpathAST/Expresiones/Primitivo\");\r\n    const {Relacional, operacionRelacional} = require(\"../xpathAST/Expresiones/Relacional\")   \r\n    var tmp=\"\";\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 1:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 2:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 3:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 4:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 5:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 6: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 7:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 36;\r\n                  \r\nbreak;\r\ncase 8:this.begin('string'); tmp=\"\"; \r\nbreak;\r\ncase 9:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 10:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 11:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 12:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 13:tmp=tmp+yy_.yytext; this.begin('string');\r\nbreak;\r\ncase 14: tmp= tmp+yy_.yytext;   this.begin('string');\r\nbreak;\r\ncase 15:\r\n                    this.begin('INITIAL');\r\n                    yy_.yytext= tmp;\r\n                    tmp = \"\";\r\n                    return 37;\r\n                  \r\nbreak;\r\ncase 16:return 10\r\nbreak;\r\ncase 17:return 4\r\nbreak;\r\ncase 18:return '..'\r\nbreak;\r\ncase 19:return 14\r\nbreak;\r\ncase 20:return 16\r\nbreak;\r\ncase 21:return 18\r\nbreak;\r\ncase 22:return 20\r\nbreak;\r\ncase 23:return 34\r\nbreak;\r\ncase 24:return 35\r\nbreak;\r\ncase 25:\r\nbreak;\r\ncase 26:return 8\r\nbreak;\r\ncase 27:return 21\r\nbreak;\r\ncase 28:return 22\r\nbreak;\r\ncase 29:return 13\r\nbreak;\r\ncase 30:return 23\r\nbreak;\r\ncase 31:return 25\r\nbreak;\r\ncase 32:return 26\r\nbreak;\r\ncase 33:return 28\r\nbreak;\r\ncase 34:return 30\r\nbreak;\r\ncase 35:return 27\r\nbreak;\r\ncase 36:return 29\r\nbreak;\r\ncase 37:return 32\r\nbreak;\r\ncase 38:return 31\r\nbreak;\r\ncase 39:return 24\r\nbreak;\r\ncase 40:return 38\r\nbreak;\r\ncase 41:return 12\r\nbreak;\r\ncase 42:return 5\r\nbreak;\r\ncase 43:console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[\"])/i,/^(?:[^\"])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\][\"])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\\"])/i,/^(?:['])/i,/^(?:[^'])/i,/^(?:[\\\\][n])/i,/^(?:[\\\\][t])/i,/^(?:[\\\\][r])/i,/^(?:[\\\\]['])/i,/^(?:[\\\\][\\\\])/i,/^(?:[\\'])/i,/^(?:\\s+\\/\\/)/i,/^(?:\\/)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?: )/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:div\\b)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_][a-zA-Z0-9_ñÑ]*)/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"string\":{\"rules\":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = XPATHparserDesc;\r\nexports.Parser = XPATHparserDesc.Parser;\r\nexports.parse = function () { return XPATHparserDesc.parse.apply(XPATHparserDesc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n        this.pos = -1;\r\n    }\r\n    \r\n    public setPos(pos: number){\r\n        this.pos= pos;\r\n    }\r\n\r\n\r\n    public getAtributos(idAtrubito: string) : Simbolo[] {\r\n\r\n        var L_atrubitos : Simbolo[] = []; //          \r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            \r\n            if (Simbolo.identificador === idAtrubito){\r\n                L_atrubitos.push(Simbolo)\r\n            }\r\n        }\r\n\r\n        return L_atrubitos;\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        for (const Simbolo of this.listaSimbolos) {\r\n            if (Simbolo.identificador === idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\n\r\nexport enum tipoPrimitivo {\r\n    NUMBER,\r\n    STRING,\r\n    BOOL,\r\n    NODO,\r\n    ATRI,\r\n    RESP,\r\n    error\r\n}\r\n\r\nexport class Primitivo implements Expression{\r\n    \r\n    constructor (\r\n    public line : Number, \r\n    public column : Number, \r\n    public valor : any, \r\n    public tipoPrimitivo : tipoPrimitivo) {}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo) : Retorno {\r\n        \r\n        if (this.tipoPrimitivo === tipoPrimitivo.NUMBER) {\r\n            return { value: Number(this.valor), type: tipoPrimitivo.NUMBER };\r\n        }else if (this.tipoPrimitivo === tipoPrimitivo.STRING) {\r\n            return { value: String(this.valor), type: tipoPrimitivo.STRING };\r\n        }else {\r\n            throw new Error(\"Error Semantico: no se reconoce el valor, Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n    }\r\n\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n    pos: number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.pos = -1;\r\n    }\r\n\r\n    public setPos(pos :number){\r\n        this.pos = pos;\r\n    }\r\n\r\n}","import { Expression } from \"../../Interfaces/Expresion\";\r\n\r\n\r\nexport class Acceso {\r\n\r\n    public tipoQuery : string;\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public id: string,\r\n    public tipoAcceso: string,\r\n    public predicados: Expression[]){\r\n        this.tipoQuery= \"\";\r\n    } \r\n\r\n    public setipoQuery(tipo: string){\r\n        this.tipoQuery = tipo;\r\n    }\r\n\r\n    \r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionAritmetica {\r\n    SUMA,  //mas\r\n    RESTA,  //menos\r\n    MULT,   //multiplicacion\r\n    DIV,    //division\r\n    MOD,\r\n}\r\n\r\nexport class Aritmetico implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionAritmetica,\r\n    public sym: string){}\r\n\r\n    public execute(ent: Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n        if((valorIzq.type === tipoPrimitivo.STRING  || valorIzq.type === tipoPrimitivo.NUMBER )&&(valorDer.type === tipoPrimitivo.STRING || valorDer.type === tipoPrimitivo.NUMBER)&&(this.tipoOperacion === operacionAritmetica.SUMA)) {\r\n            return  { value: (valorIzq.value + valorDer.value), type: tipoPrimitivo.NUMBER };\r\n        }\r\n        else if ((valorIzq.type === tipoPrimitivo.NUMBER) && (valorDer.type === tipoPrimitivo.NUMBER)) {\r\n           \r\n            if(this.tipoOperacion === operacionAritmetica.RESTA){\r\n                return { value: (valorIzq.value - valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else if(this.tipoOperacion === operacionAritmetica.MULT){\r\n                return { value: (valorIzq.value * valorDer.value) , type: tipoPrimitivo.NUMBER };;\r\n            }else if(this.tipoOperacion === operacionAritmetica.DIV){\r\n\r\n                if(Number(valorDer.value) >= 0){\r\n                    return { value: (valorIzq.value / valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: El valor \"+valorDer+\", debe ser mayor o igual que cero,  Linea: \"+this.line+\"Column: \"+this.column);\r\n                }\r\n\r\n            }else if (this.tipoOperacion === operacionAritmetica.MOD){\r\n                return  { value: (valorIzq.value % valorDer.value) , type: tipoPrimitivo.NUMBER };\r\n            }else {\r\n                throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorDer.type+\", tipo valor2 \"+valorDer.type +\", Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport enum operacionLogica {\r\n    AND,\r\n    OR\r\n}\r\n\r\nexport class Logica implements Expression{\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public hijoIzq: Expression,\r\n    public hijoDer: Expression,\r\n    public tipoOperacion: operacionLogica,\r\n    public sym: string){}\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo): Retorno {\r\n\r\n        let valorIzq = this.hijoIzq.execute(ent, simboloPadre);\r\n        \r\n        if (valorIzq.type === tipoPrimitivo.BOOL){\r\n\r\n            if (valorIzq.value === false && this.tipoOperacion === operacionLogica.AND) {\r\n                //console.log(\"pase por el corto circuito del and\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            } else if (valorIzq.value === true && this.tipoOperacion === operacionLogica.OR) {\r\n                //console.log(\"pase por el corto circuito del or\")\r\n                return  { value: valorIzq.value, type: tipoPrimitivo.BOOL };\r\n            }\r\n            \r\n            let valorDer = this.hijoDer.execute(ent, simboloPadre);\r\n\r\n            if (valorDer.type === tipoPrimitivo.BOOL){\r\n\r\n                if (this.tipoOperacion === operacionLogica.AND) {\r\n                    const result = valorIzq.value && valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else if (this.tipoOperacion === operacionLogica.OR) {\r\n                    const result = valorIzq.value || valorDer.value;\r\n                    return { value: result, type: tipoPrimitivo.BOOL };\r\n                }else {\r\n                    throw new Error(\"Error Semantico: no se reconoce el operador  \" + this.sym + \", Linea: \"+this.line+\"Column: \"+this.column);;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 2: \"+valorDer.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(\"Error Semantico: incompatibilidad de tipos: tipo varlor 1: \"+valorIzq.type + \"Linea: \"+this.line+\"Column: \"+this.column);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n}","import { Entorno } from '../../xmlAST/Entorno';\r\nimport { Acceso} from './Acceso';\r\nimport { Expression, Retorno } from \"../../Interfaces/Expresion\";\r\nimport { tipoPrimitivo } from './Primitivo';\r\nimport { Simbolo } from '../../xmlAST/Simbolo';\r\n\r\nexport class Path implements Expression{\r\n\r\n    salida: any[];\r\n\r\n    constructor (\r\n    public line : Number,\r\n    public column: Number,\r\n    public L_Accesos : Acceso [],\r\n    public tipoPath : string\r\n    ){\r\n        this.salida=[];\r\n    }   \r\n\r\n    ////fechaPublicacion[@año>./../../libro[3]/fechaPublicacion/@año]\r\n\r\n    \r\n  \r\n    private unirSalida () : string{\r\n\r\n        let salida : string = \"\"\r\n\r\n        for (const element of this.salida) {\r\n            salida += element\r\n        }\r\n        return salida;\r\n    }\r\n\r\n    public execute(ent : Entorno, simboloPadre?:Simbolo) :Retorno { //      /biblio\r\n\r\n        if (this.L_Accesos.length > 0 && ent.listaEntornos.length > 0){\r\n\r\n            if (this.L_Accesos[0].tipoAcceso === \"nodo\"){\r\n                \r\n                if(ent.identificador === this.L_Accesos[0].id){//validamos que el id entActual sea igual al id de la poscion Actual de accesos\r\n\r\n                    if (this.validarPredicadosNodos(ent, ent, 0)){\r\n\r\n                        if(this.L_Accesos.length >  1){ //verificamos si la consutla nos dice que accediendo a descendientes\r\n                            this.getQuery(ent, 1); \r\n                        }else{\r\n                            this.construirNodos(ent, \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {value: this.unirSalida(), type: tipoPrimitivo.STRING};\r\n    }\r\n\r\n    private getQuery(entPadre: Entorno, posActAcceso: number) {\r\n        \r\n        if(entPadre.listaEntornos.length > 0){\r\n                      \r\n            for (const entActual of entPadre.listaEntornos) {//recorremos los hijos del entorno padre que llamaremos entActual\r\n\r\n                if(entActual.identificador === this.L_Accesos[posActAcceso].id){//validamos que el id del entorno sea igual al id de la poscion Actual de Accesos\r\n\r\n                    if (this.validarPredicadosNodos(entPadre, entActual, posActAcceso)){\r\n\r\n                        if(this.L_Accesos.length > posActAcceso + 1){ //verificamos si no es el ultimo acceso\r\n                            this.getQuery(entActual, posActAcceso + 1); \r\n                        }else{\r\n                            this.construirNodos(entActual, \"\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private construirNodos(entPadre:Entorno, tab : string){\r\n\r\n        if (this.tipoPath === \"sub\"){\r\n\r\n            if (entPadre.listaEntornos.length > 0 || (entPadre.listaEntornos.length === 0 && entPadre.texto === '')){\r\n                this.salida.push({value : entPadre.identificador , type: tipoPrimitivo.NODO})\r\n            }else {\r\n                this.salida.push({value : entPadre.texto, type: tipoPrimitivo.STRING});\r\n            }\r\n\r\n        }else {\r\n\r\n            var atributos = \"\";\r\n            for (const atri of entPadre.listaSimbolos) { // construyo atributos\r\n                atributos+= atri.identificador + \" = \\\"\" + atri.valor.replaceAll(\"\\\"\",\"\") + \"\\\"  \";\r\n            }\r\n\r\n            //construyo Nodos\r\n            if(entPadre.listaEntornos.length === 0 && entPadre.texto === ''){\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \"/>\\n\");\r\n            }\r\n            else if(entPadre.listaEntornos.length > 0){\r\n\r\n                this.salida.push(tab +\"<\" + entPadre.identificador + \" \" + atributos + \">\\n\");\r\n                for (const entActual of entPadre.listaEntornos) {\r\n                    this.construirNodos(entActual, tab + \"   \");    //         //nombre  /biblio/libro//nombre             \r\n                }\r\n                this.salida.push(tab +\"</\" + entPadre.identificador + \">\\n\");\r\n            \r\n            } else{\r\n                this.salida.push(tab +\"<\"+ entPadre.identificador +\" \"+ atributos+\">\"+entPadre.texto+\"</\"+entPadre.identificador+\">\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private validarPredicadosNodos(entPadre: Entorno, entActual : Entorno, posActAcceso:number) : boolean{\r\n\r\n        for (let i = 0; i < this.L_Accesos[posActAcceso].predicados.length; i++) {\r\n            \r\n            var result : Retorno = this.L_Accesos[posActAcceso].predicados[i].execute(entActual);\r\n            if (result.type === tipoPrimitivo.NUMBER){\r\n                \r\n                if (result.value - 1 >= 0 && result.value - 1 < entPadre.listaEntornos.length){\r\n                    if (entPadre.listaEntornos[result.value - 1] !== entActual){\r\n                        return false; \r\n                    }\r\n                }\r\n            }else if (result.value === \"\" && result.type === tipoPrimitivo.error){\r\n                return false; \r\n            }else if (result.value === false) {\r\n                return false ;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}"],"sourceRoot":""}